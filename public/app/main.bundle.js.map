{"version":3,"sources":["C:/workspacew3/atomiCoconut/client/src async","C:/workspacew3/atomiCoconut/client/src/app/app.component.html","C:/workspacew3/atomiCoconut/client/src/app/app.component.scss","C:/workspacew3/atomiCoconut/client/src/app/app.component.ts","C:/workspacew3/atomiCoconut/client/src/app/app.module.ts","C:/workspacew3/atomiCoconut/client/src/app/app.routing.module.ts","C:/workspacew3/atomiCoconut/client/src/app/app.service.ts","C:/workspacew3/atomiCoconut/client/src/app/crypto-currency/crypto-currency.component.html","C:/workspacew3/atomiCoconut/client/src/app/crypto-currency/crypto-currency.component.scss","C:/workspacew3/atomiCoconut/client/src/app/crypto-currency/crypto-currency.component.ts","C:/workspacew3/atomiCoconut/client/src/app/crypto-currency/crypto-currency.service.ts","C:/workspacew3/atomiCoconut/client/src/app/directives/equal-validator.directive.ts","C:/workspacew3/atomiCoconut/client/src/app/investments/investments.component.html","C:/workspacew3/atomiCoconut/client/src/app/investments/investments.component.scss","C:/workspacew3/atomiCoconut/client/src/app/investments/investments.component.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/custom-material-design/custom-material-design.module.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/dynamic-form/dynamic-form-question/dynamic-form-question.component.html","C:/workspacew3/atomiCoconut/client/src/app/modules/dynamic-form/dynamic-form-question/dynamic-form-question.component.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/dynamic-form/dynamic-form.component.html","C:/workspacew3/atomiCoconut/client/src/app/modules/dynamic-form/dynamic-form.component.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/dynamic-form/dynamic-form.module.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/dynamic-form/question-base.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/dynamic-form/question-control.service.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/dynamic-form/question-textbox.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/login/login.component.html","C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/login/login.component.scss","C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/login/login.component.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/register/register-form-question.service.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/register/register.component.html","C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/register/register.component.scss","C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/register/register.component.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/users/users-routing.module.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/users/users.module.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/users/users.service.ts","C:/workspacew3/atomiCoconut/client/src/environments/environment.ts","C:/workspacew3/atomiCoconut/client/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"inner mat-typography\\\">\\r\\n\\r\\n  <md-toolbar class=\\\"toolbar\\\" color=\\\"primary\\\">\\r\\n    <span>AtomiCoconut</span>\\r\\n    <span class=\\\"example-spacer\\\"></span>\\r\\n    <md-icon class=\\\"example-icon\\\">build</md-icon>\\r\\n    <md-icon (click)=\\\"logout()\\\" class=\\\"example-icon\\\">exit_to_app</md-icon>\\r\\n  </md-toolbar>\\r\\n\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".toolbar {\\n  margin-bottom: 10px; }\\n  .toolbar .example-icon {\\n    padding: 0 14px;\\n    cursor: pointer; }\\n  .toolbar .example-spacer {\\n    -ms-flex: 1 1 auto;\\n        flex: 1 1 auto; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/app.component.scss\n// module id = ../../../../../src/app/app.component.scss\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { AppService } from './app.service';\r\nimport { UsersService } from './modules/users/users.service';\r\n\r\nimport {BehaviorSubject} from \"rxjs/BehaviorSubject\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  \r\n  title = 'app';\r\n\r\n  constructor(private appService: AppService, private usersService : UsersService) { }\r\n\r\n  ngOnInit(): void {\r\n    let methodTrace = `${this.constructor.name} > ngOnInit() > `; //for debugging  \r\n    \r\n    this.usersService.getAuthenticatedUser().subscribe(\r\n      (data : any) => {\r\n        if (data && data.email) {\r\n          console.log(methodTrace, data);\r\n        } else {\r\n          console.info(`${methodTrace} User not logged in.`)\r\n        }\r\n      },\r\n      (error : any) =>  console.error(`${methodTrace} There was an error with the register service > ${error}`)\r\n    );\r\n  }\r\n\r\n  logout() : void {\r\n    let methodTrace = `${this.constructor.name} > logout() > `; //for debugging  \r\n    \r\n    this.usersService.logout().subscribe(\r\n      (data : any) => {\r\n        console.log(methodTrace, data);\r\n      },\r\n      (error : any) =>  console.error(`${methodTrace} There was an error with the register service > ${error}`)\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { HttpModule } from '@angular/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport 'hammerjs';\r\n\r\nimport { AppRoutingModule } from \"./app.routing.module\";\r\nimport { AppComponent } from './app.component';\r\nimport { AppService } from './app.service';\r\nimport { CustomMaterialDesignModule } from './modules/custom-material-design/custom-material-design.module';\r\nimport { UsersModule } from './modules/users/users.module';\r\nimport { CryptoCurrencyComponent } from './crypto-currency/crypto-currency.component'\r\nimport { CrytoCurrencyService } from './crypto-currency/crypto-currency.service';\r\nimport { InvestmentsComponent } from './investments/investments.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    HttpModule,\r\n    FlexLayoutModule,\r\n    CustomMaterialDesignModule,\r\n    UsersModule\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    CryptoCurrencyComponent,\r\n    InvestmentsComponent\r\n  ],\r\n  providers: [AppService, CrytoCurrencyService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/app.module.ts","/**\r\n * Created by mpaoluc on 13/01/2017.\r\n */\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {AppComponent} from \"./app.component\";\r\nimport {InvestmentsComponent} from './investments/investments.component';\r\n\r\nconst appRoutes : Routes = [\r\n  {\r\n    path : '',\r\n    redirectTo : 'investments',\r\n    pathMatch : 'full'\r\n  },\r\n  {\r\n    path : 'investments',\r\n    component : InvestmentsComponent\r\n  }\r\n  // {\r\n  //   path : 'page-not-found',\r\n  //   component : PageNotFoundComponent\r\n  // },\r\n  // {\r\n  //   path : '**',\r\n  //   component : PageNotFoundComponent\r\n  // }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(appRoutes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AppRoutingModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/app.routing.module.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\n\nimport {Observable} from \"rxjs/Rx\";\n\n@Injectable()\nexport class AppService {\n\n  private serverUrl : string = 'https://api.cryptonator.com/api/ticker/';\n  private serverUrl2 : string = '/node';\n  \n\n  constructor(private http : Http) {\n\n  }\n\n  getPrices(currency = 'btc') : Observable<any> {\n    \n    return this.http.get(`${this.serverUrl}${currency}-usd`)\n        .map(this.extractData)\n        .catch(this.handleError);\n  }\n\n  private extractData(res: Response) : any {\n    let body = res.json();\n    if (body.success === true) {\n      return body.ticker;\n    } else {\n      throw body;\n    }\n  }\n\n  private handleError (error: Response | any) {\n    // In a real world app, we might use a remote logging infrastructure\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(errMsg);\n    return Observable.throw(errMsg);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/app.service.ts","module.exports = \"<md-card class=\\\"currency-card\\\">\\n  <md-card-header>\\n    <div md-card-avatar \\n        class=\\\"header-image\\\"\\n        [class.header-image__xmr]=\\\"cryptoCurrency === 'xmr'\\\"\\n        [class.header-image__btc]=\\\"cryptoCurrency === 'btc'\\\">\\n    </div>\\n    <md-card-title>{{cryptoCurrency === 'xmr' ? 'Monero' : 'Bitcoin' }} ({{cryptoCurrencyCount}})</md-card-title>\\n    <md-card-subtitle>\\n      today at <strong>{{cryptoCurrencyCurrentPrice | currency}}</strong>\\n    </md-card-subtitle>\\n  </md-card-header>\\n  <md-card-content>\\n    Investment: <strong>{{usdFromCryptoCurrencyWhenBought | currency }}</strong> \\n    <br>\\n\\n    on {{cryptoCurrencyBuyDate | date}} at {{cryptoCurrencyBuyPrice | currency}}\\n\\n    <div [class.color__green]=\\\"usdFromCryptoCurrency >= usdFromCryptoCurrencyWhenBought\\\" \\n        [class.color__red]=\\\"usdFromCryptoCurrency < usdFromCryptoCurrencyWhenBought\\\">\\n      <br>\\n      ROI: <strong>{{ usdFromCryptoCurrency | currency }}</strong> ({{usdFromCryptoCurrency / usdFromCryptoCurrencyWhenBought * 100 | number : '1.1-2'}}%)\\n    </div>\\n  </md-card-content>\\n</md-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/crypto-currency/crypto-currency.component.html\n// module id = ../../../../../src/app/crypto-currency/crypto-currency.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".currency-card {\\n  text-align: center; }\\n  .currency-card .header-image {\\n    background-size: cover; }\\n    .currency-card .header-image.header-image__xmr {\\n      background-image: url(\\\"/assets/images/xmr.png\\\"); }\\n    .currency-card .header-image.header-image__btc {\\n      background-image: url(\\\"/assets/images/btc.png\\\"); }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/crypto-currency/crypto-currency.component.scss\n// module id = ../../../../../src/app/crypto-currency/crypto-currency.component.scss\n// module chunks = 1","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { CrytoCurrencyService } from './crypto-currency.service';\n\nimport {BehaviorSubject} from \"rxjs/BehaviorSubject\";\n\n@Component({\n  selector: 'app-crypto-currency',\n  templateUrl: './crypto-currency.component.html',\n  styleUrls: ['./crypto-currency.component.scss']\n})\nexport class CryptoCurrencyComponent implements OnInit {\n\n  private cryptoCurrency$ : BehaviorSubject<any>;\n  @Input() cryptoCurrency : string;\n  @Input() cryptoCurrencyCount : number;\n  @Input() cryptoCurrencyBuyPrice : number; //USD\n  @Input() cryptoCurrencyBuyDate : Date;\n  private usdFromCryptoCurrency : number = 0;\n  private usdFromCryptoCurrencyWhenBought : number = 0;\n  private cryptoCurrencyCurrentPrice : number = 0;\n  @Output() totalReturns: EventEmitter<any> = new EventEmitter();\n\n  constructor(private crytoCurrencyService: CrytoCurrencyService) {\n    this.cryptoCurrency$ = new BehaviorSubject<any>(null);\n  }\n\n  ngOnInit() : void {\n    let methodTrace = `${this.constructor.name} > ngOnInit() > `; //for debugging\n    \n    this.usdFromCryptoCurrencyWhenBought = this.cryptoCurrencyBuyPrice * this.cryptoCurrencyCount;\n    this.crytoCurrencyService.getPrices(this.cryptoCurrency).subscribe(\n      (pricesData : any) => {\n        this.cryptoCurrency$.next(pricesData);\n        this.cryptoCurrencyCurrentPrice = pricesData.price; \n        this.usdFromCryptoCurrency = pricesData.price * this.cryptoCurrencyCount;\n        this.totalReturns.emit({\n          usdFromCryptoCurrencyWhenBought : this.usdFromCryptoCurrencyWhenBought,\n          usdFromCryptoCurrency : this.usdFromCryptoCurrency\n        }); \n      },\n      (error : any) =>  console.error(`${methodTrace} There was an error trying to load Monero prices > ${error}`)\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/crypto-currency/crypto-currency.component.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\n\nimport {Observable} from \"rxjs/Rx\";\n\n@Injectable()\nexport class CrytoCurrencyService {\n\n  private serverUrl : string = 'https://api.cryptonator.com/api/ticker/';\n  private serverUrl2 : string = '/node';\n  \n\n  constructor(private http : Http) {\n\n  }\n\n  getPrices(currency = 'btc') : Observable<any> {\n    \n    return this.http.get(`${this.serverUrl}${currency}-usd`)\n        .map(this.extractData)\n        .catch(this.handleError);\n  }\n\n  private extractData(res: Response) : any {\n    let body = res.json();\n    if (body.success === true) {\n      return body.ticker;\n    } else {\n      throw body;\n    }\n  }\n\n  private handleError (error: Response | any) {\n    // In a real world app, we might use a remote logging infrastructure\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(errMsg);\n    return Observable.throw(errMsg);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/crypto-currency/crypto-currency.service.ts","import { Directive, Input, Attribute } from '@angular/core';\r\nimport { ValidatorFn, Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[equalvalidation]',\r\n  providers: [{provide: NG_VALIDATORS, useExisting: EqualValidatorDirective, multi: true}]\r\n})\r\nexport class EqualValidatorDirective implements Validator {\r\n  \r\n  constructor(@Attribute('equalvalidation') private equalFormControlName: string) {}\r\n \r\n  validate(control : AbstractControl) : { [key : string] : any } {\r\n    const equalsFormControl = control.root.get(this.equalFormControlName);\r\n    if (equalsFormControl && equalsFormControl.value !== control.value) {\r\n      return { 'equalValidator' : true };\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/directives/equal-validator.directive.ts","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n  <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n    <app-crypto-currency fxFlex \\r\\n      [cryptoCurrency]=\\\"'xmr'\\\"\\r\\n      [cryptoCurrencyCount]=\\\"218.85627651\\\"\\r\\n      [cryptoCurrencyBuyPrice]=\\\"50\\\"\\r\\n      [cryptoCurrencyBuyDate]=\\\"xmrBuyDate\\\"\\r\\n      (totalReturns)=\\\"setTotals($event)\\\">\\r\\n    </app-crypto-currency>\\r\\n\\r\\n    <app-crypto-currency fxFlex\\r\\n      [cryptoCurrency]=\\\"'btc'\\\"\\r\\n      [cryptoCurrencyCount]=\\\"1.28129356\\\"\\r\\n      [cryptoCurrencyBuyPrice]=\\\"2359.99\\\"\\r\\n      [cryptoCurrencyBuyDate]=\\\"btcBuyDate\\\"\\r\\n      (totalReturns)=\\\"setTotals($event)\\\">\\r\\n    </app-crypto-currency>\\r\\n  </div>\\r\\n\\r\\n  <md-card fxFlex class=\\\"totals-card\\\">\\r\\n    <md-card-content fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"10px\\\"\\r\\n        fxLayoutAlign=\\\"space-around center\\\">\\r\\n      <p>Total Investments: <strong>{{totalInvestment | currency }}</strong></p>\\r\\n      <p [class.color__green]=\\\"totalReturn >= totalInvestment\\\" \\r\\n          [class.color__red]=\\\"totalReturn < totalInvestment\\\">\\r\\n        Total ROI: <strong>{{ totalReturn | currency }}</strong> ({{totalReturn / totalInvestment * 100 | number : '1.1-2'}}%)\\r\\n      </p>\\r\\n    </md-card-content>\\r\\n  </md-card>\\r\\n  \\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/investments/investments.component.html\n// module id = ../../../../../src/app/investments/investments.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".totals-card {\\n  text-align: center; }\\n  .totals-card md-card-content p {\\n    margin-bottom: 0; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/investments/investments.component.scss\n// module id = ../../../../../src/app/investments/investments.component.scss\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-investments',\n  templateUrl: './investments.component.html',\n  styleUrls: ['./investments.component.scss']\n})\nexport class InvestmentsComponent implements OnInit {\n  private xmrBuyDate : Date = new Date(2017, 5, 23);\n  private btcBuyDate : Date = new Date(2017, 6, 19);\n  // private xmr$ : BehaviorSubject<any>;\n  // private xmrCount = 218;\n  // private xmrBuyPrice = 50; //USD\n  // private xmrBuyDate = new Date(2017, 5, 23);\n  // private usdFromXmr = 0;\n  // private usdFromXmrWhenBought = 0;\n  // private xmrCurrentPrice = 0;\n\n  // private btc$ : BehaviorSubject<any>;\n  // private btcCount = 1.28129356;\n  // private btcBuyPrice = 2359.99; //USD\n  // private btcBuyDate = new Date(2017, 6, 19);\n  // private usdFromBtc = 0;\n  // private usdFromBtcWhenBought = 0;\n  // private btcCurrentPrice = 0;\n\n  private totalInvestment = 0;\n  private totalReturn = 0;\n\n\n  constructor() {\n    // this.usdFromXmrWhenBought = this.xmrBuyPrice * this.xmrCount;\n    // this.usdFromBtcWhenBought = this.btcBuyPrice * this.btcCount;\n    // this.totalInvestment = this.usdFromBtcWhenBought + this.usdFromXmrWhenBought;\n\n    // this.xmr$ = new BehaviorSubject<any>(null);\n    // this.btc$ = new BehaviorSubject<any>(null);\n  }\n\n  ngOnInit(): void {\n    let methodTrace = `${this.constructor.name} > ngOnInit() > `; //for debugging\n    \n    // this.crytoCurrencyService.getPrices('xmr').subscribe(\n    //   (pricesData : any) => {\n    //     this.xmr$.next(pricesData);\n    //     this.xmrCurrentPrice = pricesData.price; \n    //     this.usdFromXmr = pricesData.price * this.xmrCount;\n    //     this.totalReturn += this.usdFromXmr; \n    //   },\n    //   (error : any) =>  console.error(`${methodTrace} There was an error trying to load Monero prices > ${error}`)\n    // );\n\n    // this.crytoCurrencyService.getPrices().subscribe(\n    //   (pricesData : any) => {\n    //     this.btc$.next(pricesData);\n    //     this.btcCurrentPrice = pricesData.price;\n    //     this.usdFromBtc = pricesData.price * this.btcCount;\n    //     this.totalReturn += this.usdFromBtc;\n    //   },\n    //   (error : any) =>  console.error(`${methodTrace} There was an error trying to load Bitcoin prices > ${error}`)\n    // );\n  }\n\n\n  setTotals(totalReturns : any) : void {\n    this.totalReturn += totalReturns.usdFromCryptoCurrency;\n    this.totalInvestment += totalReturns.usdFromCryptoCurrencyWhenBought;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/investments/investments.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {MaterialModule} from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MaterialModule],\r\n  exports: [MaterialModule]\r\n})\r\nexport class CustomMaterialDesignModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/custom-material-design/custom-material-design.module.ts","module.exports = \"<div [formGroup]=\\\"form\\\" [ngSwitch]=\\\"question.controlType\\\">\\r\\n  \\r\\n  <md-input-container *ngSwitchCase=\\\"'textbox'\\\" class=\\\"example-full-width\\\">\\r\\n    <input mdInput \\r\\n        [type]=\\\"question.type\\\" \\r\\n        [id]=\\\"question.key\\\" \\r\\n        [placeholder]=\\\"question.label\\\" \\r\\n        [formControlName]=\\\"question.key\\\">\\r\\n\\r\\n    <md-error *ngIf=\\\"!isValid && form.get(question.key).hasError('required')\\\">{{question.label}} is required</md-error>\\r\\n    <md-error *ngIf=\\\"!isValid && form.get(question.key).hasError('minlength')\\\">{{question.label}} must contains at least {{form.get(question.key).errors.minlength.requiredLength}} characters</md-error>\\r\\n    <md-error *ngIf=\\\"!isValid && form.get(question.key).hasError('maxlength')\\\">{{question.label}} must contains {{form.get(question.key).errors.maxlength.requiredLength}} or less characters</md-error>\\r\\n    <md-error *ngIf=\\\"!isValid && form.get(question.key).hasError('email')\\\">{{question.label}} must be a valid email address</md-error>\\r\\n  </md-input-container>\\r\\n  <!-- <pre>{{form.get(question.key).errors | json}}</pre> -->\\r\\n\\r\\n  <md-select [id]=\\\"question.key\\\" *ngSwitchCase=\\\"'dropdown'\\\" [formControlName]=\\\"question.key\\\" [placeholder]=\\\"question.label\\\">\\r\\n    <md-option *ngFor=\\\"let opt of question.options\\\" [value]=\\\"opt.key\\\">{{opt.value}}</md-option>\\r\\n  </md-select>\\r\\n\\r\\n</div> \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/dynamic-form/dynamic-form-question/dynamic-form-question.component.html\n// module id = ../../../../../src/app/modules/dynamic-form/dynamic-form-question/dynamic-form-question.component.html\n// module chunks = 1","import { Component, Input } from '@angular/core';\r\nimport { FormGroup }        from '@angular/forms';\r\n\r\nimport { QuestionBase }     from '../question-base';\r\n\r\n@Component({\r\n  selector: 'df-question',\r\n  templateUrl: './dynamic-form-question.component.html'\r\n})\r\nexport class DynamicFormQuestionComponent {\r\n  @Input() question: QuestionBase<any>;\r\n  @Input() form: FormGroup;\r\n  \r\n  get isValid() {\r\n    return this.form.controls[this.question.key].valid; \r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/dynamic-form/dynamic-form-question/dynamic-form-question.component.ts","module.exports = \"<div>\\r\\n  <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"form\\\" novalidate>\\r\\n\\r\\n    <df-question *ngFor=\\\"let question of questions\\\" [question]=\\\"question\\\" [form]=\\\"form\\\"></df-question>\\r\\n    <md-error *ngFor=\\\"let error of postSubmitErrors\\\">{{error}}</md-error>\\r\\n    <div>\\r\\n      <button class=\\\"mat-raised-button\\\" md-raised-button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">Register</button>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n  <div *ngIf=\\\"payLoad\\\">\\r\\n    <strong>Saved the following values</strong><br>{{payLoad}}\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/dynamic-form/dynamic-form.component.html\n// module id = ../../../../../src/app/modules/dynamic-form/dynamic-form.component.html\n// module chunks = 1","import { Component, Input, Output, OnInit, EventEmitter, OnChanges, SimpleChange }  from '@angular/core';\r\nimport { FormGroup }                 from '@angular/forms';\r\n\r\nimport { QuestionBase }              from './question-base';\r\nimport { QuestionControlService }    from './question-control.service';\r\n\r\n@Component({\r\n  selector: 'dynamic-form',\r\n  templateUrl: './dynamic-form.component.html',\r\n  providers: [ QuestionControlService ]\r\n})\r\nexport class DynamicFormComponent implements OnInit, OnChanges {\r\n\r\n  @Input() questions: QuestionBase<any>[] = [];\r\n  @Input() postSubmitErrors : string[] = [];\r\n  @Output() formData: EventEmitter<any> = new EventEmitter();\r\n  private form: FormGroup;\r\n  private payLoad = '';\r\n\r\n  constructor(private qcs: QuestionControlService) {}\r\n\r\n  ngOnInit() {\r\n    this.form = this.qcs.toFormGroup(this.questions);\r\n  }\r\n\r\n  ngOnChanges(changes : {[propKey : string] : SimpleChange}) {\r\n    \r\n    // if (changes.postSubmitErrors && !changes.postSubmitErrors.isFirstChange()) {\r\n      \r\n    // }\r\n\r\n    // //OR....\r\n\r\n    // for (let propName in changes) {\r\n    //   let changedProp = changes[propName];\r\n    //   let to = JSON.stringify(changedProp.currentValue);\r\n    //   if (changedProp.isFirstChange()) {\r\n    //     console.log(`Initial value of ${propName} set to ${to}`);\r\n    //   } else {\r\n    //     let from = JSON.stringify(changedProp.previousValue);\r\n    //     console.log(`${propName} changed from ${from} to ${to}`);\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  onSubmit() {\r\n    this.payLoad = JSON.stringify(this.form.value);\r\n    this.formData.emit(this.form.value); //send data to the component that use the dynamic form compoennt\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/dynamic-form/dynamic-form.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { DynamicFormComponent } from './dynamic-form.component';\r\nimport { DynamicFormQuestionComponent } from './dynamic-form-question/dynamic-form-question.component';\r\nimport { QuestionControlService } from './question-control.service';\r\nimport { CustomMaterialDesignModule } from '../../modules/custom-material-design/custom-material-design.module';\r\nimport { EqualValidatorDirective } from '../../directives/equal-validator.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DynamicFormComponent,\r\n    DynamicFormQuestionComponent,\r\n    EqualValidatorDirective\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    CustomMaterialDesignModule\r\n  ],\r\n  exports : [\r\n    DynamicFormComponent,\r\n    DynamicFormQuestionComponent\r\n  ],\r\n  providers: [ QuestionControlService ]\r\n})\r\nexport class DynamicFormModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/dynamic-form/dynamic-form.module.ts","export class QuestionBase<T> {\r\n  value: T;\r\n  key: string;\r\n  label: string;\r\n  validators: any[];\r\n  order: number;\r\n  controlType: string;\r\n\r\n  constructor(options: {\r\n      value?: T,\r\n      key?: string,\r\n      label?: string,\r\n      validators?: any[],\r\n      order?: number,\r\n      controlType?: string\r\n    } = {}) {\r\n    \r\n    this.value = options.value;\r\n    this.key = options.key || '';\r\n    this.label = options.label || '';\r\n    this.validators = options.validators || [];\r\n    this.order = options.order === undefined ? 1 : options.order;\r\n    this.controlType = options.controlType || '';\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/dynamic-form/question-base.ts","import { Injectable }   from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\n\r\nimport { QuestionBase } from './question-base';\r\n\r\n@Injectable()\r\nexport class QuestionControlService {\r\n  constructor() { }\r\n\r\n  toFormGroup(questions: QuestionBase<any>[] ) {\r\n    let group: any = {};\r\n\r\n    questions.forEach(question => {\r\n      group[question.key] = new FormControl(question.value || '', question.validators || []) \r\n    });\r\n    return new FormGroup(group);\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/dynamic-form/question-control.service.ts","import { QuestionBase } from './question-base';\r\n\r\nexport class TextboxQuestion extends QuestionBase<string> {\r\n  controlType = 'textbox';\r\n  type: string;\r\n\r\n  constructor(options: {} = {}) {\r\n    super(options);\r\n    this.type = options['type'] || '';\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/dynamic-form/question-textbox.ts","module.exports = \"<form (ngSubmit)=\\\"onSubmit()\\\" #loginForm=\\\"ngForm\\\" novalidate>\\r\\n    <!-- Email -->\\r\\n    <md-input-container class=\\\"example-full-width\\\">\\r\\n      <input mdInput type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Email address\\\" \\r\\n          [(ngModel)]=\\\"model.email\\\" \\r\\n          required email\\r\\n          #email=\\\"ngModel\\\">\\r\\n\\r\\n      <md-error *ngIf=\\\"email.invalid && (email.dirty || email.touched) && email.errors.required\\\">Email is required</md-error>\\r\\n      <md-error *ngIf=\\\"email.invalid && (email.dirty || email.touched) && email.errors.email\\\">Email must be a valid email address</md-error>\\r\\n    </md-input-container>\\r\\n    \\r\\n    <!-- Password -->\\r\\n    <md-input-container class=\\\"example-full-width\\\">\\r\\n      <input mdInput type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" \\r\\n          [(ngModel)]=\\\"model.password\\\" \\r\\n          required minlength=\\\"3\\\" maxlength=\\\"8\\\"\\r\\n          #password=\\\"ngModel\\\">\\r\\n\\r\\n      <md-error *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.required\\\">Password is required</md-error>\\r\\n      <md-error *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.minlength\\\">Password must be longer than 3 characters</md-error>\\r\\n      <md-error *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.maxlength\\\">Password must be shorter than 8 characters</md-error>\\r\\n    </md-input-container>\\r\\n\\r\\n    <div>\\r\\n      <button class=\\\"mat-raised-button\\\" md-raised-button type=\\\"submit\\\" [disabled]=\\\"!loginForm.form.valid\\\">Register</button>\\r\\n    </div>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/login/login.component.html\n// module id = ../../../../../src/app/modules/users/components/login/login.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/login/login.component.scss\n// module id = ../../../../../src/app/modules/users/components/login/login.component.scss\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { UsersService } from '../../users.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  private model : any = {email : '', password : ''};\r\n  private submitted : boolean = false;\r\n\r\n  constructor(private usersService : UsersService, private router : Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit() { \r\n    const methodTrace = `${this.constructor.name} > onSubmit() > `; //for debugging\r\n\r\n    this.submitted = true;\r\n    this.usersService.setUser(null); //reset authenticated user. Register automatically authenticates the registered user.\r\n    //call the register service\r\n    this.usersService.login(this.model).subscribe(\r\n      (data : any) => {\r\n        if (data && data.email) {\r\n          console.log(data);\r\n          this.usersService.setUser(data);\r\n          this.router.navigate(['/']); //go home\r\n        } else {\r\n          console.error(`${methodTrace} Unexpected data format.`)\r\n        }\r\n      },\r\n      (error : any) => console.error(`${methodTrace} There was an error with the register service > ${error}`)\r\n    );\r\n  }\r\n\r\n  resetForm() {\r\n    this.model = {email : '', password : ''};\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/login/login.component.ts","import { Injectable } from '@angular/core';\r\nimport { Validators } from '@angular/forms';\r\nimport { DropdownQuestion } from '../../../dynamic-form/question-dropdown';\r\nimport { QuestionBase }     from '../../../dynamic-form/question-base';\r\nimport { TextboxQuestion }  from '../../../dynamic-form/question-textbox';\r\n\r\n@Injectable()\r\nexport class RegisterFormQuestionService {\r\n\r\n  constructor() { }\r\n\r\n  getQuestions() {\r\n\r\n    let questions: QuestionBase<any>[] = [\r\n\r\n      new TextboxQuestion({\r\n        key: 'name',\r\n        label: 'Name',\r\n        value: '',\r\n        validators: [\r\n          Validators.required,\r\n          Validators.minLength(3)  \r\n        ],\r\n        order: 1\r\n      }),\r\n\r\n      new TextboxQuestion({\r\n        key: 'email',\r\n        label: 'Email',\r\n        type: 'email',\r\n        validators : [\r\n          Validators.required,\r\n          Validators.email\r\n        ],\r\n        order: 2\r\n      }),\r\n\r\n      new TextboxQuestion({\r\n        key: 'password',\r\n        label: 'Password',\r\n        type: 'password',\r\n        validators: [\r\n          Validators.required,\r\n          Validators.minLength(4),\r\n          Validators.maxLength(20)\r\n        ],\r\n        order: 3\r\n      }),\r\n\r\n      new TextboxQuestion({\r\n        key: 'password-confirm',\r\n        label: 'Confirm password',\r\n        type: 'password',\r\n        validators: [\r\n          Validators.required,\r\n          Validators.minLength(4),\r\n          Validators.maxLength(20)\r\n        ],\r\n        order: 4\r\n      })\r\n    ];\r\n\r\n    return questions.sort((a, b) => a.order - b.order);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/register/register-form-question.service.ts","module.exports = \"<p>\\r\\n\\r\\n  <dynamic-form \\r\\n      [questions]=\\\"questions\\\" \\r\\n      [postSubmitErrors]=\\\"postSubmitErrors\\\"\\r\\n      (formData)=\\\"onFormSubmitHandler($event)\\\"></dynamic-form>\\r\\n</p>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/register/register.component.html\n// module id = ../../../../../src/app/modules/users/components/register/register.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/register/register.component.scss\n// module id = ../../../../../src/app/modules/users/components/register/register.component.scss\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { UsersService } from '../../users.service';\r\nimport { RegisterFormQuestionService } from './register-form-question.service';\r\n\r\n@Component({\r\n  selector: 'users-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss'],\r\n  providers : [ RegisterFormQuestionService ]\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  private data : any = {};\r\n  private questions: any[];\r\n  private postSubmitErrors : string[];\r\n  \r\n  constructor(private registerFormQuestionService: RegisterFormQuestionService, private usersService : UsersService, private router : Router) {\r\n    this.postSubmitErrors = [];\r\n  }\r\n\r\n  ngOnInit() {\r\n    const methodTrace = `${this.constructor.name} > ngOnInit() > `; //for debugging\r\n    this.questions = this.registerFormQuestionService.getQuestions();\r\n  }\r\n\r\n  onFormSubmitHandler(formData : any) {\r\n    const methodTrace = `${this.constructor.name} > onFormSubmitHandler() > `; //for debugging\r\n    \r\n    //chech that the password and the confirmed password are the same\r\n    if (formData['password'] !== formData['password-confirm']) {\r\n      this.postSubmitErrors.push('The confirm password field must match the password');\r\n      return false;\r\n    }\r\n    \r\n    this.usersService.setUser(null); //reset authenticated user. Register automatically authenticates the registered user.\r\n    //call the register service\r\n    this.usersService.register(formData).subscribe(\r\n      (data : any) => {\r\n        if (data && data.email) {\r\n          this.usersService.setUser(data);\r\n          this.router.navigate(['/']); //go home\r\n        } else {\r\n          console.error(`${methodTrace} Unexpected data format.`)\r\n        }\r\n      },\r\n      (error : any) => console.error(`${methodTrace} There was an error with the register service > ${error}`)\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/register/register.component.ts","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\n\r\nconst routes: Routes = [\r\n  { path : 'register', component : RegisterComponent },\r\n  { path : 'login', component : LoginComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UsersRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/users-routing.module.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UsersRoutingModule } from './users-routing.module';\r\nimport { DynamicFormModule } from '../dynamic-form/dynamic-form.module'; \r\nimport { FormsModule } from '@angular/forms';\r\nimport { CustomMaterialDesignModule } from '../../modules/custom-material-design/custom-material-design.module';\r\n\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { UsersService } from './users.service';\r\nimport { RegisterFormQuestionService } from './components/register/register-form-question.service';\r\nimport { LoginComponent } from './components/login/login.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UsersRoutingModule,\r\n    FormsModule,\r\n    DynamicFormModule,\r\n    CustomMaterialDesignModule\r\n  ],\r\n  declarations: [\r\n    RegisterComponent,\r\n    LoginComponent\r\n  ],\r\n  providers: [UsersService, RegisterFormQuestionService]\r\n})\r\nexport class UsersModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/users.module.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\n\r\nimport {Observable} from \"rxjs/Rx\";\r\n\r\n@Injectable()\r\nexport class UsersService {\r\n\r\n  private serverHost : string = 'http://localhost:7777/api/users';\r\n  private headers = new Headers({'Content-Type': 'application/json'});\r\n  private user : any = null;\r\n\r\n  constructor(private http : Http) {}\r\n\r\n  /**\r\n   * Server call to Register a new user in the system \r\n   * @param postData \r\n   */\r\n  register(postData : any = {}) : Observable<any> {\r\n    return this.http.post(`${this.serverHost}/register`, postData, { headers : this.headers })\r\n        .map(this.extractData)\r\n        .catch(this.handleError);\r\n  }\r\n\r\n  /**\r\n   * Server call to retrieve the currently authenticated user, or null if nobody .\r\n   */\r\n  getAuthenticatedUser() : Observable<any> {\r\n    return this.http.get(`${this.serverHost}/getUser`)\r\n        .map(this.extractData)\r\n        .catch(this.handleError);\r\n  }\r\n\r\n  /**\r\n   * Server call to login the provided user email and pass.\r\n   */\r\n  login(postData : any = {}) : Observable<any> {\r\n    return this.http.post(`${this.serverHost}/login`, postData, { headers : this.headers })\r\n        .map(this.extractData)\r\n        .catch(this.handleError);\r\n  }\r\n\r\n  /**\r\n   * Server call to login the provided user email and pass.\r\n   */\r\n  logout() : Observable<any> {\r\n    return this.http.get(`${this.serverHost}/logout`)\r\n        .map(this.extractData)\r\n        .catch(this.handleError);\r\n  }\r\n  \r\n  /**\r\n   * Tells whether the user is logged in in the system. Checks the local user variable\r\n   */\r\n  isLoggedIn() : boolean {\r\n    return this.user && this.user.email ? true : false;\r\n  }\r\n\r\n  /**\r\n   * Sets the local user variable with the user provided as param\r\n   * @param user (any). The user to set\r\n   */\r\n  setUser(user : any) {\r\n    this.user = user;\r\n  }\r\n\r\n  private extractData(res: Response) : any {\r\n    let body = res.json();\r\n\r\n    if (body.codeno === 200 && body.status === 'success') {\r\n      return body.data;\r\n    } else {\r\n      throw body;\r\n    }\r\n  }\r\n\r\n  private handleError (error: Response | any) {\r\n    // In a real world app, we might use a remote logging infrastructure\r\n    let errMsg: string;\r\n    if (error instanceof Response) {\r\n      const body = error.json() || '';\r\n      errMsg = body.message || JSON.stringify(body);\r\n    } else {\r\n      errMsg = error.message ? error.message : error.toString();\r\n    }\r\n    return Observable.throw(errMsg);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/users.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/main.ts"],"sourceRoot":"webpack:///"}