{"version":3,"sources":["C:/workspacew3/atomiCoconut/client/configuration.ts","C:/workspacew3/atomiCoconut/client/src/$_gendir lazy","C:/workspacew3/atomiCoconut/client/src/app/app.component.html","C:/workspacew3/atomiCoconut/client/src/app/app.component.scss","C:/workspacew3/atomiCoconut/client/src/app/app.component.ts","C:/workspacew3/atomiCoconut/client/src/app/app.module.ts","C:/workspacew3/atomiCoconut/client/src/app/app.routing.module.ts","C:/workspacew3/atomiCoconut/client/src/app/app.service.ts","C:/workspacew3/atomiCoconut/client/src/app/auth-resolver.service.ts","C:/workspacew3/atomiCoconut/client/src/app/auth.guard.ts","C:/workspacew3/atomiCoconut/client/src/app/components/welcome/welcome.component.html","C:/workspacew3/atomiCoconut/client/src/app/components/welcome/welcome.component.scss","C:/workspacew3/atomiCoconut/client/src/app/components/welcome/welcome.component.ts","C:/workspacew3/atomiCoconut/client/src/app/currency-exchange.service.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/calculators/calculators-routing.module.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/calculators/calculators.module.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/calculators/components/calculators-dashboard/calculators-dashboard.component.html","C:/workspacew3/atomiCoconut/client/src/app/modules/calculators/components/calculators-dashboard/calculators-dashboard.component.scss","C:/workspacew3/atomiCoconut/client/src/app/modules/calculators/components/calculators-dashboard/calculators-dashboard.component.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/calculators/components/equity/equity.component.html","C:/workspacew3/atomiCoconut/client/src/app/modules/calculators/components/equity/equity.component.scss","C:/workspacew3/atomiCoconut/client/src/app/modules/calculators/components/equity/equity.component.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/crypto-currency/crypto-currency.component.html","C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/crypto-currency/crypto-currency.component.scss","C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/crypto-currency/crypto-currency.component.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/crypto-currency/crypto-currency.service.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/currency-investment/currency-investment.component.html","C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/currency-investment/currency-investment.component.scss","C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/currency-investment/currency-investment.component.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/investment-selector-dialog/investment-selector-dialog.component.html","C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/investment-selector-dialog/investment-selector-dialog.component.scss","C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/investment-selector-dialog/investment-selector-dialog.component.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/investments-dashboard/investments-dashboard.component.html","C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/investments-dashboard/investments-dashboard.component.scss","C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/investments-dashboard/investments-dashboard.component.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/investments-edit/investments-edit.component.html","C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/investments-edit/investments-edit.component.scss","C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/investments-edit/investments-edit.component.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/investments/investments-routing.module.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/investments/investments.module.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/investments/investments.service.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/investments/models/currencyInvestment.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/investments/models/investment.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/shared/components/currency-unit/currency-unit.component.html","C:/workspacew3/atomiCoconut/client/src/app/modules/shared/components/currency-unit/currency-unit.component.scss","C:/workspacew3/atomiCoconut/client/src/app/modules/shared/components/currency-unit/currency-unit.component.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/shared/components/main-navigator/main-navigator.component.html","C:/workspacew3/atomiCoconut/client/src/app/modules/shared/components/main-navigator/main-navigator.component.scss","C:/workspacew3/atomiCoconut/client/src/app/modules/shared/components/main-navigator/main-navigator.component.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/shared/components/main-navigator/main-navigator.service.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/shared/components/snackbar-simple/snackbar-simple.component.html","C:/workspacew3/atomiCoconut/client/src/app/modules/shared/components/snackbar-simple/snackbar-simple.component.scss","C:/workspacew3/atomiCoconut/client/src/app/modules/shared/components/snackbar-simple/snackbar-simple.component.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/shared/components/yes-no-dialog/yes-no-dialog.component.html","C:/workspacew3/atomiCoconut/client/src/app/modules/shared/components/yes-no-dialog/yes-no-dialog.component.scss","C:/workspacew3/atomiCoconut/client/src/app/modules/shared/components/yes-no-dialog/yes-no-dialog.component.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/shared/custom-material-design.module.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/shared/directives/equal-validator.directive.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/shared/directives/number-validator.directive.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/shared/shared.module.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/teams/components/add-person-to-team-dialog/add-person-to-team-dialog.component.html","C:/workspacew3/atomiCoconut/client/src/app/modules/teams/components/add-person-to-team-dialog/add-person-to-team-dialog.component.scss","C:/workspacew3/atomiCoconut/client/src/app/modules/teams/components/add-person-to-team-dialog/add-person-to-team-dialog.component.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/teams/components/teams-dashboard/teams-dashboard.component.html","C:/workspacew3/atomiCoconut/client/src/app/modules/teams/components/teams-dashboard/teams-dashboard.component.scss","C:/workspacew3/atomiCoconut/client/src/app/modules/teams/components/teams-dashboard/teams-dashboard.component.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/teams/components/teams-edit/teams-edit.component.html","C:/workspacew3/atomiCoconut/client/src/app/modules/teams/components/teams-edit/teams-edit.component.scss","C:/workspacew3/atomiCoconut/client/src/app/modules/teams/components/teams-edit/teams-edit.component.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/teams/models/team.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/teams/teams-routing.module.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/teams/teams.module.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/teams/teams.service.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/account-finance-info/account-finance-info.component.html","C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/account-finance-info/account-finance-info.component.scss","C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/account-finance-info/account-finance-info.component.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/account-personal-info/account-personal-info.component.html","C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/account-personal-info/account-personal-info.component.scss","C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/account-personal-info/account-personal-info.component.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/account-user-info/account-user-info.component.html","C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/account-user-info/account-user-info.component.scss","C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/account-user-info/account-user-info.component.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/account/account.component.html","C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/account/account.component.scss","C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/account/account.component.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/login/login.component.html","C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/login/login.component.scss","C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/login/login.component.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/register/register.component.html","C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/register/register.component.scss","C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/register/register.component.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/reset-password/reset-password.component.html","C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/reset-password/reset-password.component.scss","C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/reset-password/reset-password.component.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/users/models/account-finance.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/users/models/account-personal.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/users/models/user.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/users/users-routing.module.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/users/users.module.ts","C:/workspacew3/atomiCoconut/client/src/app/modules/users/users.service.ts","C:/workspacew3/atomiCoconut/client/src/app/util.service.ts","C:/workspacew3/atomiCoconut/client/src/environments/environment.ts","C:/workspacew3/atomiCoconut/client/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["export const configuration = {\r\n  defaultGravatarUrl : 'https://gravatar.com/avatar/7038663cc684aa330956752c7e6fe7d4?s=200'\r\n};\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/configuration.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"inner mat-typography\\\">\\r\\n\\r\\n  <mat-toolbar class=\\\"toolbar\\\" color=\\\"primary\\\">\\r\\n    <a class=\\\"toolbar__brand-name color__almost-white\\\" routerLink=\\\"/\\\"><span>AtomiCoconut</span></a>\\r\\n    <span class=\\\"example-spacer\\\"></span>\\r\\n    \\r\\n    <span *ngIf=\\\"!user\\\" fxLayoutAlign=\\\" center\\\">\\r\\n      <mat-icon routerLink=\\\"/users/login\\\" class=\\\"toolbar__icon\\\">account_circle</mat-icon>\\r\\n    </span>\\r\\n    <span *ngIf=\\\"user\\\" fxLayoutAlign=\\\" center\\\">\\r\\n      <img *ngIf=\\\"user.avatar\\\" \\r\\n          [matMenuTriggerFor]=\\\"userMenu\\\" \\r\\n          class=\\\"toolbar__icon user__avatar\\\" \\r\\n          [src]=\\\"user.avatar\\\" \\r\\n      />\\r\\n      <mat-icon *ngIf=\\\"!user.avatar\\\"\\r\\n          class=\\\"toolbar__icon user__icon--logged-in\\\" \\r\\n          [matMenuTriggerFor]=\\\"userMenu\\\">\\r\\n        account_circle\\r\\n      </mat-icon>\\r\\n      \\r\\n      <mat-menu class=\\\"user__menu--logged-in\\\" #userMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\r\\n        <button mat-menu-item routerLink=\\\"/users/account\\\">\\r\\n          <mat-icon>settings</mat-icon>\\r\\n          <span>My account</span>\\r\\n        </button>\\r\\n        <button mat-menu-item routerLink=\\\"/teams\\\">\\r\\n          <mat-icon>group</mat-icon>\\r\\n          <span>Teams</span>\\r\\n        </button>\\r\\n        <button mat-menu-item (click)=\\\"logout()\\\">\\r\\n          <mat-icon>exit_to_app</mat-icon>\\r\\n          <span>Logout</span>\\r\\n        </button>\\r\\n      </mat-menu>\\r\\n    </span>\\r\\n    \\r\\n    <mat-toolbar-row class=\\\"secondary-row\\\" *ngIf=\\\"user && user.currency !== 'USD' && currencyExchangeService.rates\\\">\\r\\n      <span>Preferred currency is <a class=\\\"color__almost-white\\\" routerLink=\\\"/users/account\\\" matTooltip=\\\"Change...\\\"><strong>{{user.currency}}</strong></a></span>\\r\\n      <span class=\\\"example-spacer\\\"></span>\\r\\n      <span>1 USD = {{currencyExchangeService.rates[user.currency]}} {{user.currency}}</span>\\r\\n    </mat-toolbar-row>\\r\\n  </mat-toolbar>\\r\\n  \\r\\n  <!-- Main navigator (chips) -->\\r\\n  <main-navigator></main-navigator>\\r\\n\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".toolbar {\\n  margin-bottom: 10px; }\\n  .toolbar .toolbar__brand-name {\\n    text-decoration: none; }\\n  .toolbar .toolbar__icon {\\n    padding: 0 10px;\\n    cursor: pointer; }\\n  .toolbar .example-spacer {\\n    -ms-flex: 1 1 auto;\\n        flex: 1 1 auto; }\\n  .toolbar .user__avatar {\\n    border-radius: 50%;\\n    width: 30px;\\n    padding: 0 10px; }\\n  .toolbar .user__icon--logged-in {\\n    color: #28FE7C; }\\n\\n::ng-deep nav.navigation--main {\\n  margin-bottom: 20px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/app.component.scss\n// module id = ../../../../../src/app/app.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from \"rxjs/Rx\";\r\nimport { AppService } from './app.service';\r\nimport { UsersService } from './modules/users/users.service';\r\nimport { configuration } from \"../../configuration\";\r\nimport { User } from './modules/users/models/user';\r\nimport { Router } from '@angular/router';\r\nimport { MainNavigatorService } from './modules/shared/components/main-navigator/main-navigator.service';\r\nimport { CurrencyExchangeService } from './currency-exchange.service';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  providers: [ MainNavigatorService ]\r\n})\r\nexport class AppComponent implements OnInit {\r\n  \r\n  title : string = 'AtomiCoconut';\r\n  user : User = null;\r\n  defaultGravatarUrl = configuration.defaultGravatarUrl;\r\n\r\n  constructor(private router : Router, private appService: AppService, public usersService : UsersService, public currencyExchangeService : CurrencyExchangeService,\r\n    private mainNavigatorService : MainNavigatorService) { }\r\n\r\n  ngOnInit(): void {\r\n    let methodTrace = `${this.constructor.name} > ngOnInit() > `; //for debugging\r\n\r\n    //set the navigation links valid for this components\r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: null, selected: true },\r\n      { displayName: 'Investments', url: '/investments', selected: false },\r\n      { displayName: 'Calculators', url: '/calculators', selected: false }]);\r\n\r\n    this.usersService.user$.subscribe((user : User) => this.user = user); //start listening the source of user\r\n      \r\n    this.setUser();\r\n\r\n    if (!this.currencyExchangeService.rates) {\r\n      this.currencyExchangeService.getRates().subscribe(\r\n        (data : any) => {\r\n          this.currencyExchangeService.rates = data;\r\n          this.appService.consoleLog('info', `${methodTrace} Currency exchange rates successfully loaded!`);\r\n        },\r\n        (error : any) => {\r\n          this.appService.consoleLog('error', `${methodTrace} There was an error trying to get currency rates data > ${error}`);\r\n          this.appService.showResults(`There was an error trying to get currency rates data.`, 'error');\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  setUser() {\r\n    let methodTrace = `${this.constructor.name} > setUser() > `; //for debugging\r\n\r\n    this.usersService.getAuthenticatedUser().subscribe(\r\n      (data : any) => {\r\n        if (data && data.email) {\r\n          this.user = new User(data.name, data.email, data.avatar, data.accessToInvestments, null, null, data.currency);\r\n          this.usersService.setUser(this.user);\r\n        } else {\r\n          this.appService.consoleLog('info', `${methodTrace} User not logged in.`, data);\r\n          this.usersService.setUser(null);\r\n          this.user = null;\r\n        }\r\n      }, \r\n      (error : any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error with the getAuthenticatedUser service.`, error);\r\n        this.usersService.setUser(null);\r\n        this.user = null;\r\n      }\r\n    );\r\n  }\r\n\r\n  logout() : void {\r\n    let methodTrace = `${this.constructor.name} > logout() > `; //for debugging  \r\n    \r\n    this.usersService.logout().subscribe(\r\n      (data : any) => {\r\n        this.usersService.setUser(null);\r\n        this.user = null;\r\n        this.router.navigate(['/']);\r\n      },\r\n      (error : any) =>  {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error with the logout service.`, error);\r\n      }\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpModule } from '@angular/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport 'hammerjs';\r\n\r\nimport { AppRoutingModule } from \"./app.routing.module\";\r\nimport { AppComponent } from './app.component';\r\nimport { AppService } from './app.service';\r\nimport { UtilService } from './util.service';\r\nimport { AuthResolver } from './auth-resolver.service';\r\nimport { CurrencyExchangeService } from './currency-exchange.service';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { CustomMaterialDesignModule } from './modules/shared/custom-material-design.module';\r\nimport { UsersModule } from './modules/users/users.module';\r\nimport { TeamsModule } from './modules/teams/teams.module'; \r\nimport { InvestmentsModule } from './modules/investments/investments.module';\r\nimport { CalculatorsModule } from './modules/calculators/calculators.module';\r\nimport { WelcomeComponent } from './components/welcome/welcome.component';\r\nimport { SharedModule } from './modules/shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    HttpModule,\r\n    FlexLayoutModule,\r\n    CustomMaterialDesignModule,\r\n    UsersModule,\r\n    TeamsModule,\r\n    InvestmentsModule,\r\n    CalculatorsModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    WelcomeComponent\r\n  ],\r\n  providers: [AppService, UtilService, CurrencyExchangeService, AuthResolver, AuthGuard],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/app.module.ts","/**\r\n * Created by mpaoluc on 13/01/2017.\r\n */\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {AppComponent} from \"./app.component\";\r\nimport {AuthResolver} from './auth-resolver.service';\r\nimport { WelcomeComponent } from './components/welcome/welcome.component';\r\nconst appRoutes : Routes = [\r\n  {\r\n    path : '',\r\n    redirectTo : 'welcome',\r\n    pathMatch : 'full'\r\n  },\r\n  {\r\n    path : 'welcome',\r\n    component : WelcomeComponent\r\n  }\r\n  // {\r\n  //   path : 'page-not-found',\r\n  //   component : PageNotFoundComponent\r\n  // },\r\n  // {\r\n  //   path : '**',\r\n  //   component : PageNotFoundComponent\r\n  // }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(appRoutes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AppRoutingModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/app.routing.module.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\n\r\nimport {Observable} from \"rxjs/Rx\";\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { environment } from '../environments/environment';\r\nimport { SnackbarSimpleComponent } from './modules/shared/components/snackbar-simple/snackbar-simple.component';\r\n\r\n@Injectable()\r\nexport class AppService {\r\n\r\n  constructor(private http : Http, public snackBar: MatSnackBar) {}\r\n\r\n  /**\r\n   * Receives and object of paramameters and returns it in a querystring format\r\n   * @param {*} parameters . Object of parameters\r\n   * @return {string} result as querystring\r\n   */\r\n  public getParamsAsQuerystring(parameters : any = null) {\r\n    let strParams = '';\r\n    if (parameters && Object.keys(parameters).length) {\r\n      for (let key of Object.keys(parameters)) {\r\n        strParams += `&${key}=${parameters[key]}`;\r\n      }\r\n    }\r\n\r\n    return strParams.substring(1);\r\n  }\r\n\r\n  /**\r\n   * Extract data from a server response\r\n   * @param res\r\n   */\r\n  public extractData(res: Response) : any {\r\n    let body = res.json();\r\n\r\n    if (body.codeno === 200 && body.status === 'success') {\r\n      return body.data;\r\n    } else {\r\n      throw body;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle server service errors and parse the result in an object\r\n   * @param error \r\n   */\r\n  public handleError (error: Response | any) {\r\n    // In a real world app, we might use a remote logging infrastructure\r\n    let errObj: any = {};\r\n    if (error instanceof Response) {\r\n      errObj = error.json() || {};\r\n    } else {\r\n      errObj = error || {};\r\n    }\r\n    \r\n    return Observable.throw(errObj);\r\n  }\r\n\r\n  /**\r\n   * Shows messages in snackbar component\r\n   * @param message . The text to show\r\n   * @param duration . The duration in milliseconds . Optional\r\n   * @param actionName . An action name to close the message on click. Optional\r\n   * \r\n   * @return {MatSnackBar} . The snackbar ref\r\n   */\r\n  showResults(message : string, type : string = 'info', duration : number = 5000) : any {\r\n    let snackBarRef = this.snackBar.openFromComponent(SnackbarSimpleComponent, {\r\n      data : {\r\n        type,\r\n        message\r\n      },\r\n      duration,\r\n      extraClasses : ['snackbar--simple', `snackbar--${type}`]\r\n    });\r\n\r\n    return snackBarRef;\r\n  }\r\n\r\n  /**\r\n   * Shows multiple messages in snackbar component one after another\r\n   * @param {any[]} messages . The array of messages to show\r\n   * @param {number} index . The index where to start iterating the messages array\r\n   * \r\n   * @return {MatSnackBar} . The snackbar Ref\r\n   */\r\n  showManyResults(messages : any[], index : number = 0) {\r\n    let snackBarRef = null;\r\n    if (index < messages.length) {\r\n      snackBarRef = this.showResults(messages[index].message, messages[index].type, messages[index].duration);\r\n\r\n      snackBarRef.afterDismissed().subscribe(() => {\r\n        this.showManyResults(messages, index += 1);\r\n      });\r\n    } else {\r\n      return snackBarRef;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Show logs in the console if enabled in the current environment\r\n   * @param type . Error type\r\n   * @param message . The message to show\r\n   * @param params . Any extra parameters to list in the log.\r\n   */\r\n  consoleLog(type : 'log' | 'debug' | 'warn' | 'info' | 'error', message : string, ...params) {\r\n    if (environment.showLogs) {\r\n      console[type](message, params);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/app.service.ts","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Router, Resolve, RouterStateSnapshot, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from './modules/users/models/user';\r\nimport { AccountPersonal } from './modules/users/models/account-personal';\r\nimport { AccountFinance } from './modules/users/models/account-finance';\r\nimport { UsersService } from './modules/users/users.service';\r\nimport { AppService } from './app.service';\r\n\r\n@Injectable()\r\nexport class AuthResolver implements Resolve<User> {\r\n  constructor(private appService : AppService, private usersService : UsersService, private router : Router) { }\r\n  \r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): User | Observable<User> | Promise<User> {\r\n    let methodTrace = `${this.constructor.name} > resolve() > `; //for debugging  \r\n\r\n    this.usersService.routerRedirectUrl = state.url;\r\n    const urlsForCompleteUserData : Array<string> = ['/investments', '/users/account'];\r\n    let params : any = null;\r\n    if (urlsForCompleteUserData.includes(state.url)) {\r\n      params = { personalInfo : true, financialInfo : true };\r\n    }\r\n\r\n    return this.usersService.getAuthenticatedUser(params).map(\r\n      (data : any) => {\r\n        if (data && data.email) {\r\n          let personalInfo = null;\r\n          if (data.personalInfo) {\r\n            personalInfo = new AccountPersonal(data.personalInfo.birthday);\r\n          }\r\n\r\n          let financialInfo = null;\r\n          if (data.financialInfo) {\r\n            financialInfo = new AccountFinance(data.financialInfo.annualIncome, data.financialInfo.annualIncomeUnit, \r\n                data.financialInfo.savings, data.financialInfo.savingsUnit, data.financialInfo.incomeTaxRate);\r\n          }\r\n          const user : User = new User(data.name, data.email, data.avatar, data.accessToInvestments, financialInfo, personalInfo, data.currency);          \r\n          this.usersService.setUser(user);\r\n          this.usersService.routerRedirectUrl = null;\r\n\r\n          return user;\r\n        } else {\r\n          this.appService.consoleLog('info', `${methodTrace} User not logged in.`, data);\r\n          this.usersService.setUser(null);\r\n          this.router.navigate(['/users/login']);\r\n          return null;\r\n        }\r\n      }, \r\n      (error : any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error with the getAuthenticatedUser service.`, error);\r\n        this.usersService.setUser(null);\r\n        this.router.navigate(['/users/login']);\r\n        return null;\r\n      }\r\n    );\r\n  }\r\n  \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/auth-resolver.service.ts","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { UsersService } from './modules/users/users.service';\r\nimport { User } from './modules/users/models/user';\r\nimport { AppService } from './app.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private appService : AppService, private usersService : UsersService, private router : Router) {}\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) : Observable<boolean> | Promise<boolean> | boolean {\r\n    let methodTrace = `${this.constructor.name} > canActivate() > `; //for debugging\r\n    \r\n    this.usersService.routerRedirectUrl = state.url;\r\n\r\n    return this.usersService.getAuthenticatedUser().map(\r\n      (data : any) => {\r\n        if (data && data.email) {\r\n          this.usersService.routerRedirectUrl = null; //we don't need this\r\n          return true;\r\n        } else {\r\n          this.appService.consoleLog('info', `${methodTrace} User not logged in.`, data);\r\n          this.router.navigate(['/users/login']);\r\n          return false;\r\n        }\r\n      }, \r\n      (error : any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error with the getAuthenticatedUser service.`, error);\r\n        this.router.navigate(['/users/login']);\r\n        return false;\r\n      }\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/auth.guard.ts","module.exports = \"<div *ngIf=\\\"user\\\" class=\\\"container__net-worth\\\">\\r\\n  <!-- Net Worth Card -->\\r\\n  <mat-card *ngIf=\\\"user.financialInfo && user.personalInfo\\\"\\r\\n      fxFlex class=\\\"totals-card\\\">\\r\\n    <mat-card-content fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"10px\\\"\\r\\n        fxLayoutAlign=\\\"space-around center\\\">\\r\\n      <p class=\\\"accent\\\">\\r\\n        Your expected Net Worth at your age ({{user.personalInfo.age}}) is <strong>{{ user.personalInfo.age * (user.financialInfo.annualIncome || 0) / 10 }}</strong>\\r\\n      </p>\\r\\n      <p *ngIf=\\\"user.financialInfo.savings !== null\\\"\\r\\n          [class.color__accent]=\\\"user.financialInfo.savings >= user.financialInfo.annualIncome\\\" \\r\\n          [class.color__red]=\\\"user.financialInfo.savings < user.financialInfo.annualIncome\\\">\\r\\n        Your current net worth is <strong>{{ user.financialInfo.savings }}</strong>\\r\\n      </p>\\r\\n      <p *ngIf=\\\"user.financialInfo.savings === null\\\">\\r\\n        <a class=\\\"color__almost-white\\\" routerLink=\\\"/users/account\\\">\\r\\n          <mat-icon class=\\\"icon--arrow_forward\\\">arrow_forward</mat-icon>\\r\\n          Go to your account and complete Financial Info to see your current state\\r\\n          \\r\\n        </a>\\r\\n      </p>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n    <!-- EOF Net Worth Card -->\\r\\n\\r\\n  <!-- Net Worth Card when Personal and Financial info is incomplete -->\\r\\n  <mat-card *ngIf=\\\"!user.financialInfo || !user.personalInfo\\\"\\r\\n      fxFlex class=\\\"totals-card\\\">\\r\\n    <mat-card-content fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"10px\\\"\\r\\n        fxLayoutAlign=\\\"space-around center\\\">\\r\\n      <p>\\r\\n        <a class=\\\"color__almost-white\\\" routerLink=\\\"/users/account\\\">\\r\\n          <mat-icon class=\\\"icon--arrow_forward\\\">arrow_forward</mat-icon>\\r\\n          Go to your account and complete your Personal and Financial Info to see expected and current Net Worth\\r\\n        </a>\\r\\n      </p>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n  <!-- EOF Net Worth Card when Personal and Financial info is incomplete -->\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/components/welcome/welcome.component.html\n// module id = ../../../../../src/app/components/welcome/welcome.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".container__net-worth {\\n  margin-bottom: 10px; }\\n  .container__net-worth .icon--arrow_forward {\\n    float: left; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/components/welcome/welcome.component.scss\n// module id = ../../../../../src/app/components/welcome/welcome.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from \"rxjs/Rx\";\r\nimport { MainNavigatorService } from '../../modules/shared/components/main-navigator/main-navigator.service';\r\nimport { UsersService } from '../../modules/users/users.service';\r\nimport { AppService } from '../../app.service';\r\nimport { User } from '../../modules/users/models/user';\r\nimport { AccountPersonal } from '../../modules/users/models/account-personal';\r\nimport { AccountFinance } from '../../modules/users/models/account-finance';\r\n\r\n@Component({\r\n  selector: 'welcome',\r\n  templateUrl: './welcome.component.html',\r\n  styleUrls: ['./welcome.component.scss']\r\n})\r\nexport class WelcomeComponent implements OnInit {\r\n\r\n  user : User = null;\r\n\r\n  constructor(private mainNavigatorService : MainNavigatorService, private usersService : UsersService, private appService : AppService) { }\r\n\r\n  ngOnInit() {\r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: null, selected: true },\r\n      { displayName: 'Investments', url: '/investments', selected: false },\r\n      { displayName: 'Calculators', url: '/calculators', selected: false   }]);\r\n    \r\n    this.setUser();\r\n  }\r\n\r\n  /**\r\n   * Sets the user property with the current user or null of nobody logged in yet\r\n   */\r\n  setUser() {\r\n    let methodTrace = `${this.constructor.name} > setUser() > `; //for debugging\r\n\r\n    let gotAuthenticatedUserFromServer = false;\r\n    const user$ = this.usersService.user$.switchMap((user : User) => {\r\n      if (!user) {\r\n        return Observable.of(null);\r\n      } else if ((!user.personalInfo || !user.financialInfo) && gotAuthenticatedUserFromServer === false) {\r\n        gotAuthenticatedUserFromServer = true;\r\n        return this.usersService.getAuthenticatedUser({ personalInfo : true, financialInfo : true });\r\n      } else {\r\n        return Observable.of(user);\r\n      }\r\n    });\r\n\r\n    user$.subscribe(user => {\r\n      if (user && user.email) {\r\n        let personalInfo = null;\r\n        if (user.personalInfo) {\r\n          personalInfo = new AccountPersonal(user.personalInfo.birthday);\r\n        }\r\n\r\n        let financialInfo = null;\r\n        if (user.financialInfo) {\r\n          financialInfo = new AccountFinance(user.financialInfo.annualIncome, user.financialInfo.annualIncomeUnit, \r\n              user.financialInfo.savings, user.financialInfo.savingsUnit, user.financialInfo.incomeTaxRate);\r\n        }\r\n        user = new User(user.name, user.email, user.avatar, user.accessToInvestments, financialInfo, personalInfo, user.currency);          \r\n        this.user = user;\r\n        if (gotAuthenticatedUserFromServer) {\r\n          gotAuthenticatedUserFromServer = null; //shut down the flag\r\n          //we just got updated information from server, let's update the current user source\r\n          this.usersService.setUser(user);\r\n        }\r\n      } else {\r\n        this.user = null;\r\n      }\r\n      \r\n    },\r\n    (error : any) => {\r\n      this.appService.consoleLog('error', `${methodTrace} There was an error with the getAuthenticatedUser service.`, error);\r\n      this.user = null;\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/components/welcome/welcome.component.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\n\r\nimport {Observable} from \"rxjs/Rx\";\r\n\r\n@Injectable()\r\nexport class CurrencyExchangeService {\r\n\r\n  private serviceUrl : string = 'https://api.fixer.io/latest';\r\n  rates : any = null;\r\n\r\n  constructor(private http : Http) { }\r\n\r\n  getRates(base = 'USD') : Observable<any> {\r\n    this.rates = null;\r\n\r\n    return this.http.get(`${this.serviceUrl}?base=${base}`)\r\n        .map(this.extractData)\r\n        .catch(this.handleError);\r\n  }\r\n\r\n  private extractData(res: Response) : any {\r\n    let body = res.json();\r\n    if (Object.keys(body.rates).length > 0) {\r\n      return body.rates;\r\n    } else {\r\n      throw body;\r\n    }\r\n  }\r\n\r\n  private handleError (error: Response | any) {\r\n    \r\n    let errMsg: string;\r\n    if (error instanceof Response) {\r\n      const body = error.json() || '';\r\n      const err = body.error || JSON.stringify(body);\r\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\r\n    } else {\r\n      errMsg = error.message ? error.message : error.toString();\r\n    }\r\n    \r\n    return Observable.throw(errMsg);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/currency-exchange.service.ts","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { EquityComponent } from './components/equity/equity.component';\r\nimport { CalculatorsDashboardComponent } from './components/calculators-dashboard/calculators-dashboard.component';\r\n\r\nconst routes: Routes = [{\r\n  path : 'calculators',\r\n  children : [\r\n    { path : '', component : CalculatorsDashboardComponent },\r\n    { path : 'equity', component : EquityComponent }\r\n  ]\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CalculatorsRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/calculators/calculators-routing.module.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { CustomMaterialDesignModule } from '../../modules/shared/custom-material-design.module';\r\nimport { SharedModule } from '../../modules/shared/shared.module';\r\nimport { CalculatorsRoutingModule } from './calculators-routing.module';\r\nimport { EquityComponent } from './components/equity/equity.component';\r\nimport { CalculatorsDashboardComponent } from './components/calculators-dashboard/calculators-dashboard.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CalculatorsRoutingModule,\r\n    FormsModule,\r\n    FlexLayoutModule,\r\n    CustomMaterialDesignModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [EquityComponent, CalculatorsDashboardComponent]\r\n})\r\nexport class CalculatorsModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/calculators/calculators.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/calculators/components/calculators-dashboard/calculators-dashboard.component.html\n// module id = ../../../../../src/app/modules/calculators/components/calculators-dashboard/calculators-dashboard.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/calculators/components/calculators-dashboard/calculators-dashboard.component.scss\n// module id = ../../../../../src/app/modules/calculators/components/calculators-dashboard/calculators-dashboard.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { MainNavigatorService } from '../../../shared/components/main-navigator/main-navigator.service';\r\n\r\n@Component({\r\n  selector: 'app-calculators-dashboard',\r\n  templateUrl: './calculators-dashboard.component.html',\r\n  styleUrls: ['./calculators-dashboard.component.scss']\r\n})\r\nexport class CalculatorsDashboardComponent implements OnInit {\r\n\r\n  constructor(private mainNavigatorService : MainNavigatorService) { }\r\n\r\n  ngOnInit() {\r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: '/welcome', selected: false },\r\n      { displayName: 'Calculators', url: null, selected: true },\r\n      { displayName: 'Equity', url: '/calculators/equity', selected: false }]);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/calculators/components/calculators-dashboard/calculators-dashboard.component.ts","module.exports = \"<form class=\\\"form__container form__equity-calc\\\" #equityForm=\\\"ngForm\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" >\\r\\n  \\r\\n  <section fxLayout=\\\"column\\\" class=\\\"form__fields\\\">\\r\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap.gt-xs=\\\"10px\\\" class=\\\"form__fields__row\\\">\\r\\n      <!-- Purchase price -->\\r\\n      <mat-form-field fxFlex fxFlex.gt-xs=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n        <input matInput type=\\\"number\\\" id=\\\"purchasePrice\\\" name=\\\"purchasePrice\\\" placeholder=\\\"Purchase price\\\" \\r\\n            [(ngModel)]=\\\"model.purchasePrice\\\" \\r\\n            required\\r\\n            value=\\\"model.purchasePrice\\\"\\r\\n            #purchasePrice=\\\"ngModel\\\">\\r\\n  \\r\\n        <mat-error *ngIf=\\\"purchasePrice.invalid && (purchasePrice.dirty || purchasePrice.touched) && purchasePrice.errors.required\\\">Purchase price is required</mat-error>\\r\\n      </mat-form-field>\\r\\n      \\r\\n      <!-- Market value -->\\r\\n      <mat-form-field fxFlex fxFlex.gt-xs=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n        <input matInput type=\\\"number\\\" id=\\\"marketValue\\\" name=\\\"marketValue\\\" placeholder=\\\"Market value\\\" \\r\\n            [(ngModel)]=\\\"model.marketValue\\\" \\r\\n            required\\r\\n            value=\\\"model.marketValue\\\"\\r\\n            #marketValue=\\\"ngModel\\\">\\r\\n  \\r\\n        <mat-error *ngIf=\\\"marketValue.invalid && (marketValue.dirty || marketValue.touched) && marketValue.errors.required\\\">Market value is required</mat-error>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n  </section>\\r\\n\\r\\n  <section fxLayout=\\\"column\\\" class=\\\"form__fields\\\">\\r\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap.gt-xs=\\\"10px\\\" class=\\\"form__fields__row\\\">\\r\\n      <!-- Loan coverage -->\\r\\n      <mat-form-field fxFlex fxFlex.gt-xs=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n        <input matInput type=\\\"number\\\" id=\\\"loanCoverage\\\" name=\\\"loanCoverage\\\" placeholder=\\\"Loan coverage %\\\" \\r\\n            [(ngModel)]=\\\"model.loanCoverage\\\" \\r\\n            required loanCoverage\\r\\n            value=\\\"model.loanCoverage\\\"\\r\\n            #loanCoverage=\\\"ngModel\\\">\\r\\n  \\r\\n        <mat-error *ngIf=\\\"loanCoverage.invalid && (loanCoverage.dirty || loanCoverage.touched) && loanCoverage.errors.required\\\">Loan coverage is required</mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <!-- Savings -->\\r\\n      <mat-form-field fxFlex fxFlex.gt-xs=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n        <input matInput type=\\\"number\\\" id=\\\"savings\\\" name=\\\"savings\\\" placeholder=\\\"Current savings\\\" \\r\\n            [(ngModel)]=\\\"model.savings\\\" \\r\\n            value=\\\"model.savings\\\"\\r\\n            #savings=\\\"ngModel\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <!-- Add renovations checkbox -->\\r\\n      <mat-slide-toggle color=\\\"accent\\\" class=\\\"form__field form__field__toogle form__field__toogle--add-reno\\\"\\r\\n          [(ngModel)]=\\\"model.addRenovations\\\" name=\\\"addRenovations\\\" id=\\\"addRenovations\\\">\\r\\n        \\r\\n        Add renovations data\\r\\n      </mat-slide-toggle>\\r\\n      <!-- <mat-checkbox fxFlex fxFlex.gt-xs=\\\"200px\\\" class=\\\"form__action\\\" [(ngModel)]=\\\"model.addRenovations\\\" name=\\\"addRenovations\\\" id=\\\"addRenovations\\\">Add renovations data</mat-checkbox> -->\\r\\n    </div>\\r\\n  </section>\\r\\n\\r\\n  <section fxLayout=\\\"column\\\" class=\\\"form__fields\\\" *ngIf=\\\"model.addRenovations\\\">\\r\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap.gt-xs=\\\"10px\\\" class=\\\"form__fields__row\\\">\\r\\n      <!-- Renovation cost -->\\r\\n      <mat-form-field fxFlex fxFlex.gt-xs=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n        <input matInput type=\\\"number\\\" id=\\\"renovationCost\\\" name=\\\"renovationCost\\\" placeholder=\\\"Renovation cost\\\" \\r\\n            [(ngModel)]=\\\"model.renovationCost\\\" \\r\\n            value=\\\"model.renovationCost\\\"\\r\\n            #renovationCost=\\\"ngModel\\\">\\r\\n      </mat-form-field>\\r\\n      \\r\\n      <!-- New market value -->\\r\\n      <mat-form-field fxFlex fxFlex.gt-xs=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n        <input matInput type=\\\"number\\\" id=\\\"newMarketValue\\\" name=\\\"newMarketValue\\\" placeholder=\\\"After renovations market value\\\" \\r\\n            [(ngModel)]=\\\"model.newMarketValue\\\" \\r\\n            value=\\\"model.newMarketValue\\\"\\r\\n            #newMarketValue=\\\"ngModel\\\">\\r\\n      </mat-form-field>\\r\\n      \\r\\n      <!-- First year repayment -->\\r\\n      <mat-form-field fxFlex fxFlex.gt-xs=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n        <input matInput type=\\\"number\\\" id=\\\"firstYearRepayment\\\" name=\\\"firstYearRepayment\\\" placeholder=\\\"First year loan repayments\\\" \\r\\n            [(ngModel)]=\\\"model.firstYearRepayment\\\" \\r\\n            value=\\\"model.firstYearRepayment\\\"\\r\\n            #firstYearRepayment=\\\"ngModel\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n  </section>\\r\\n\\r\\n</form>\\r\\n\\r\\n<section  class=\\\"\\\">\\r\\n  <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxFlex fxFlex.gt-xs=\\\"620px\\\">\\r\\n    <mat-card fxFlex>\\r\\n      <mat-card-title class=\\\"mat-card-title--ac\\\">Initial figures</mat-card-title>\\r\\n      <mat-card-content>\\r\\n        <div><label>Loan amount: </label><span>{{loanAmount}}</span></div>\\r\\n        <div><label>Deposit amount: </label><span>{{depositAmount}}</span></div>\\r\\n        <div><label>Discount: </label><span>{{discount}}</span></div>\\r\\n        <div><label>Equity: </label><span>{{equity}}</span></div>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card fxFlex *ngIf=\\\"model.addRenovations\\\">\\r\\n      <mat-card-title class=\\\"mat-card-title--ac\\\">After renovations figures</mat-card-title>\\r\\n      <mat-card-content>\\r\\n        <div><label>Usable equity: </label><span>{{usableEquityAfterReno}}</span></div>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/calculators/components/equity/equity.component.html\n// module id = ../../../../../src/app/modules/calculators/components/equity/equity.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".form__equity-calc .form__field__toogle--add-reno {\\n  margin-bottom: 20px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/calculators/components/equity/equity.component.scss\n// module id = ../../../../../src/app/modules/calculators/components/equity/equity.component.scss\n// module chunks = main","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MainNavigatorService } from '../../../shared/components/main-navigator/main-navigator.service';\r\n\r\n@Component({\r\n  selector: 'app-equity',\r\n  templateUrl: './equity.component.html',\r\n  styleUrls: ['./equity.component.scss']\r\n})\r\nexport class EquityComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('equityForm') form;\r\n\r\n  public loanAmount : number = 0;\r\n  public discount : number = 0;\r\n  public equity : number = 0;\r\n  public depositAmount : number = 0;\r\n  public usableEquityAfterReno : number = 0;\r\n\r\n  public model : any = { \r\n    purchasePrice : 0,\r\n    marketValue : 0,\r\n    loanCoverage : 0.8,\r\n    savings : 0,\r\n    renovationCost : 0,\r\n    newMarketValue : 0,\r\n    firstYearRepayment : 0,\r\n    addRenovations : false\r\n  }\r\n\r\n  constructor(private mainNavigatorService : MainNavigatorService) { }\r\n\r\n  ngOnInit() {\r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: '/welcome', selected: false },\r\n      { displayName: 'Calculators', url: '/calculators', selected: false },\r\n      { displayName: 'Equity', url: null, selected: true }]);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.form.valueChanges.debounceTime(500).subscribe(values => {\r\n      this.loanAmount = values.purchasePrice * values.loanCoverage;\r\n      this.discount = values.marketValue - values.purchasePrice;\r\n      this.depositAmount = values.purchasePrice - this.loanAmount;\r\n      this.equity = values.savings + this.discount + this.depositAmount;\r\n      if (values.addRenovations) {\r\n        this.usableEquityAfterReno = values.newMarketValue * 0.8 - this.loanAmount + values.firstYearRepayment;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/calculators/components/equity/equity.component.ts","module.exports = \"<mat-card class=\\\"currency-card\\\">\\r\\n  <mat-card-header>\\r\\n    <div mat-card-avatar \\r\\n        class=\\\"header-image\\\"\\r\\n        [class.header-image__xmr]=\\\"cryptoCurrency === 'xmr'\\\"\\r\\n        [class.header-image__btc]=\\\"cryptoCurrency === 'btc'\\\">\\r\\n    </div>\\r\\n    <mat-card-title>{{cryptoCurrency === 'xmr' ? 'Monero' : 'Bitcoin' }} ({{cryptoCurrencyCount}})</mat-card-title>\\r\\n    <mat-card-subtitle>\\r\\n      today at <strong>{{cryptoCurrencyCurrentPrice | currency}}</strong>\\r\\n    </mat-card-subtitle>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content class=\\\"card__content\\\">\\r\\n    Investment: <strong>{{usdFromCryptoCurrencyWhenBought | currency }}</strong> \\r\\n    <br>\\r\\n\\r\\n    on {{cryptoCurrencyBuyDate | date}} at {{cryptoCurrencyBuyPrice | currency}}\\r\\n\\r\\n    <div [class.color__accent]=\\\"usdFromCryptoCurrency >= usdFromCryptoCurrencyWhenBought\\\" \\r\\n        [class.color__red]=\\\"usdFromCryptoCurrency < usdFromCryptoCurrencyWhenBought\\\">\\r\\n      <br>\\r\\n      ROI: <strong>{{ usdFromCryptoCurrency | currency }}</strong> ({{usdFromCryptoCurrency / usdFromCryptoCurrencyWhenBought * 100 | number : '1.1-2'}}%)\\r\\n    </div>\\r\\n\\r\\n    <section class=\\\"actions\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end none\\\" fxLayoutGap=\\\"10px\\\">\\r\\n      <button *ngIf=\\\"!actionRunning\\\" mat-mini-fab routerLink=\\\"/investments/crypto/edit/{{id}}\\\" color=\\\"primary\\\" (click)=\\\"actionRunning = true\\\">\\r\\n        <mat-icon aria-label=\\\"Edit Investment\\\">edit</mat-icon>\\r\\n      </button>\\r\\n\\r\\n      <button *ngIf=\\\"!actionRunning\\\" mat-mini-fab color=\\\"warn\\\" (click)=\\\"openDeleteDialog()\\\">\\r\\n        <mat-icon aria-label=\\\"Delete investment\\\">delete</mat-icon>\\r\\n      </button>\\r\\n\\r\\n      <mat-progress-spinner *ngIf=\\\"actionRunning\\\"\\r\\n        class=\\\"progress-spinner progress-spinner--action\\\"\\r\\n        color=\\\"warn\\\"\\r\\n        [diameter]=\\\"40\\\" [strokeWidth]=\\\"7\\\"\\r\\n        mode=\\\"indeterminate\\\">\\r\\n      </mat-progress-spinner>\\r\\n    </section>\\r\\n  </mat-card-content>\\r\\n</mat-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/crypto-currency/crypto-currency.component.html\n// module id = ../../../../../src/app/modules/investments/components/crypto-currency/crypto-currency.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".currency-card {\\n  text-align: center; }\\n  .currency-card .header-image {\\n    background-size: cover; }\\n    .currency-card .header-image.header-image__xmr {\\n      background-image: url(\\\"/assets/images/xmr.png\\\"); }\\n    .currency-card .header-image.header-image__btc {\\n      background-image: url(\\\"/assets/images/btc.png\\\"); }\\n  .currency-card .card__content .actions {\\n    margin: 0 8px 8px 0; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/crypto-currency/crypto-currency.component.scss\n// module id = ../../../../../src/app/modules/investments/components/crypto-currency/crypto-currency.component.scss\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { YesNoDialogComponent } from '../../../shared/components/yes-no-dialog/yes-no-dialog.component';\r\n\r\nimport { CryptoCurrencyService } from './crypto-currency.service';\r\nimport { AppService } from '../../../../app.service';\r\n@Component({\r\n  selector: 'crypto-currency',\r\n  templateUrl: './crypto-currency.component.html',\r\n  styleUrls: ['./crypto-currency.component.scss']\r\n})\r\nexport class CryptoCurrencyComponent implements OnInit {\r\n\r\n  @Input() id : string;\r\n  @Input() cryptoCurrency : string;\r\n  @Input() cryptoCurrencyCount : number;\r\n  @Input() cryptoCurrencyBuyPrice : number; //USD\r\n  @Input() cryptoCurrencyBuyDate : Date;\r\n  @Output() totalReturns: EventEmitter<any> = new EventEmitter();\r\n  usdFromCryptoCurrency : number = 0;\r\n  usdFromCryptoCurrencyWhenBought : number = 0;\r\n  cryptoCurrencyCurrentPrice : number = 0;\r\n  actionRunning : boolean = false;\r\n\r\n\r\n  constructor(private cryptoCurrencyService: CryptoCurrencyService, private appService : AppService, public dialog: MatDialog) {}\r\n\r\n  ngOnInit() : void {\r\n    let methodTrace = `${this.constructor.name} > ngOnInit() > `; //for debugging\r\n    \r\n    this.usdFromCryptoCurrencyWhenBought = this.cryptoCurrencyBuyPrice * this.cryptoCurrencyCount;\r\n    this.cryptoCurrencyService.getPrices(this.cryptoCurrency).subscribe(\r\n      (pricesData : any) => {\r\n        this.cryptoCurrencyCurrentPrice = pricesData.price; \r\n        this.usdFromCryptoCurrency = pricesData.price * this.cryptoCurrencyCount;\r\n        this.totalReturns.emit({\r\n          usdFromCryptoCurrencyWhenBought : this.usdFromCryptoCurrencyWhenBought,\r\n          usdFromCryptoCurrency : this.usdFromCryptoCurrency\r\n        }); \r\n      },\r\n      (error : any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error trying to get crypto currency rates data > ${error}`);\r\n        this.appService.showResults(`There was an error trying to get crypto currency rates data, please try again in a few minutes.`, 'error');\r\n      }\r\n    );\r\n  }\r\n\r\n  openDeleteDialog() {\r\n    const methodTrace = `${this.constructor.name} > openDeleteDialog() > `; //for debugging\r\n    \r\n    if (!this.id) {\r\n      this.appService.consoleLog('error', `${methodTrace} Investment ID is required to delete.`);\r\n      return false;\r\n    }\r\n\r\n    this.actionRunning = true;\r\n    let yesNoDialogRef = this.dialog.open(YesNoDialogComponent, {\r\n      width: '250px',\r\n      data: { message : `Are you sure you want to delete forever this investment?`}\r\n    });\r\n\r\n    yesNoDialogRef.afterClosed().subscribe(result => {\r\n      if (result === 'yes') {\r\n        this.delete();\r\n      } else {\r\n        this.actionRunning = false;\r\n      }\r\n    });\r\n\r\n    return false;\r\n  }\r\n\r\n  delete() {\r\n    console.log('Delete investment');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/crypto-currency/crypto-currency.component.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\n\r\nimport {Observable} from \"rxjs/Rx\";\r\n\r\n@Injectable()\r\nexport class CryptoCurrencyService {\r\n\r\n  private serverUrl : string = 'https://api.cryptonator.com/api/ticker/';\r\n  rates : any = {};\r\n  \r\n\r\n  constructor(private http : Http) {}\r\n\r\n  getPrices(currency : string = 'btc') : Observable<any> {\r\n    if (this.rates[currency.toUpperCase()]) {\r\n      return Observable.of(this.rates[currency.toUpperCase()]);\r\n    }\r\n    \r\n    return this.http.get(`${this.serverUrl}${currency}-usd`)\r\n        .map((res: Response) => {\r\n          this.rates[currency.toUpperCase()] = this.extractData(res);\r\n          return this.rates[currency.toUpperCase()];\r\n        }).catch(this.handleError);\r\n  }\r\n\r\n  private extractData(res: Response) : any {\r\n    let body = res.json();\r\n    if (body.success === true) {\r\n      return body.ticker;\r\n    } else {\r\n      throw body;\r\n    }\r\n  }\r\n\r\n  private handleError (error: Response | any) {\r\n    // In a real world app, we might use a remote logging infrastructure\r\n    let errMsg: string;\r\n    if (error instanceof Response) {\r\n      const body = error.json() || '';\r\n      const err = body.error || JSON.stringify(body);\r\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\r\n    } else {\r\n      errMsg = error.message ? error.message : error.toString();\r\n    }\r\n    \r\n    return Observable.throw(errMsg);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/crypto-currency/crypto-currency.service.ts","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"container__edit-currency-investment\\\">\\r\\n    <form class=\\\"form__container form__edit-currency-investment\\\" #editCurrencyInvestmentForm=\\\"ngForm\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n      \\r\\n      <section fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields\\\">\\r\\n        <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n          <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields__row\\\">\\r\\n            <currency-unit fxFlex fxFlex.gt-xs=\\\"200px\\\"\\r\\n                [id]=\\\"'currencyInvestmentUnit'\\\" \\r\\n                [value]=\\\"model.unit\\\"\\r\\n                [type]=\\\"model.type\\\"\\r\\n                [hint]=\\\"'Choose the desired currency to invest on...'\\\"\\r\\n                [placeHolder]=\\\"'Desired currency'\\\"\\r\\n                (newValue)=\\\"onCurrencyUnitChange($event)\\\">\\r\\n            </currency-unit>\\r\\n\\r\\n            <mat-form-field fxFlex fxFlex.gt-xs=\\\"300px\\\" class=\\\"form__field\\\">\\r\\n              <input matInput type=\\\"number\\\" id=\\\"amount\\\" name=\\\"amount\\\" placeholder=\\\"Amount\\\"\\r\\n                  [(ngModel)]=\\\"model.amount\\\" \\r\\n                  value=\\\"model.amount\\\"\\r\\n                  numberValidator='{\\\"maxFractionDigits\\\": 8}' \\r\\n                  required\\r\\n                  #amount=\\\"ngModel\\\">\\r\\n              <mat-hint align=\\\"start\\\">Set the buying amount.</mat-hint>\\r\\n              <mat-error *ngIf=\\\"amount.invalid && (amount.dirty || amount.touched) && amount.errors.required\\\">Amount is required.</mat-error>\\r\\n              <mat-error *ngIf=\\\"amount.invalid && (amount.dirty || amount.touched) && amount.errors.numberValidator\\\">Value must be numeric, with no more than eight decimal digits</mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n          <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields__row\\\">\\r\\n            <!-- Buying date -->\\r\\n            <mat-form-field fxFlex fxFlex.gt-xs=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n              <input placeholder=\\\"Buying date\\\"\\r\\n                  id=\\\"buyingDate\\\"\\r\\n                  name=\\\"buyingDate\\\"\\r\\n                  readonly\\r\\n                  required\\r\\n                  #buyingDate=\\\"ngModel\\\"\\r\\n                  matInput \\r\\n                  [(ngModel)]=\\\"model.buyingDate\\\" \\r\\n                  [matDatepicker]=\\\"pickerBuyingDate\\\"\\r\\n                  (click)=\\\"pickerBuyingDate.open()\\\">\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"pickerBuyingDate\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker [touchUi]=\\\"utilService.isGtSm() ? false : true\\\" #pickerBuyingDate></mat-datepicker>\\r\\n              <mat-error *ngIf=\\\"buyingDate.invalid && (buyingDate.dirty || buyingDate.touched) && buyingDate.errors.required\\\">Buying date is required.</mat-error>\\r\\n              <mat-error *ngIf=\\\"buyingDate.invalid && (buyingDate.dirty || buyingDate.touched) && buyingDate.errors.matDatepickerParse\\\">Buying date is invalid or not follows the pattern \\\"mm/dd/yyyy\\\"</mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n              <!-- Buying price unit -->\\r\\n              <currency-unit fxFlex=\\\"50px\\\"\\r\\n                  [id]=\\\"'buyingPriceUnit'\\\" \\r\\n                  [view]=\\\"'narrow'\\\"\\r\\n                  [value]=\\\"model.buyingPriceUnit\\\"\\r\\n                  (newValue)=\\\"onCurrencyUnitChange($event)\\\">\\r\\n              </currency-unit>\\r\\n\\r\\n              <!-- Buying price -->\\r\\n              <mat-form-field fxFlex fxFlex.gt-xs=\\\"300px\\\" class=\\\"form__field\\\">\\r\\n                <input matInput type=\\\"number\\\" id=\\\"buyingPrice\\\" name=\\\"buyingPrice\\\" placeholder=\\\"Price\\\"\\r\\n                    [(ngModel)]=\\\"model.buyingPrice\\\" \\r\\n                    value=\\\"model.buyingPrice\\\"\\r\\n                    numberValidator \\r\\n                    required\\r\\n                    #buyingPrice=\\\"ngModel\\\">\\r\\n                <mat-hint align=\\\"start\\\">Price on buying date.</mat-hint>\\r\\n                <mat-error *ngIf=\\\"buyingPrice.invalid && (buyingPrice.dirty || buyingPrice.touched) && buyingPrice.errors.required\\\">Buying price is required.</mat-error>\\r\\n                <mat-error *ngIf=\\\"buyingPrice.invalid && (buyingPrice.dirty || buyingPrice.touched) && buyingPrice.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            \\r\\n          </div>\\r\\n        </div>\\r\\n      </section>\\r\\n    </form>\\r\\n  </div>\\r\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/currency-investment/currency-investment.component.html\n// module id = ../../../../../src/app/modules/investments/components/currency-investment/currency-investment.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/currency-investment/currency-investment.component.scss\n// module id = ../../../../../src/app/modules/investments/components/currency-investment/currency-investment.component.scss\n// module chunks = main","import { Component, OnInit, Input, Output, OnDestroy, AfterViewInit, ViewChild, EventEmitter } from '@angular/core';\r\nimport { DateAdapter, NativeDateAdapter } from '@angular/material';\r\nimport { MatSelectChange } from '@angular/material';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { UtilService } from '../../../../util.service';\r\nimport { AppService } from '../../../../app.service';\r\n\r\n@Component({\r\n  selector: 'currency-investment',\r\n  templateUrl: './currency-investment.component.html',\r\n  styleUrls: ['./currency-investment.component.scss']\r\n})\r\nexport class CurrencyInvestmentComponent implements OnInit, OnDestroy, AfterViewInit {\r\n\r\n  @ViewChild('editCurrencyInvestmentForm') form;\r\n  @Input() type : string = 'currency'; //currency type. e.g: currency | crypto\r\n  @Input() unit : string; //e.g. : US Dollar, Australian Dollar, Monero, Bitcoin , depends on the type\r\n  @Output() values: EventEmitter<any> = new EventEmitter();\r\n  model : any = {\r\n    type : null, // currency type. e.g: currency | crypto\r\n    unit : null, //e.g. : US Dollar, Australian Dollar, Monero, Bitcoin , depends on the type\r\n    amount : null, //the amount bought,\r\n    buyingPrice : null,\r\n    buyingPriceUnit : null,\r\n    buyingDate : null\r\n  }\r\n  subscription : Subscription = new Subscription();\r\n\r\n  constructor(private dateAdapter: DateAdapter<NativeDateAdapter>, private appService : AppService, \r\n      public utilService : UtilService) {\r\n    \r\n    this.dateAdapter.setLocale('en-GB');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.model.type = this.type;\r\n    this.model.unit = this.unit;\r\n    this.model.buyingDate = new Date(Date.now());\r\n    this.model.buyingPriceUnit = 'USD';\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    const methodTrace = `${this.constructor.name} > ngOnDestroy() > `; //for debugging\r\n    \r\n    //this.appService.consoleLog('info', `${methodTrace} Component destroyed.`);\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onCurrencyUnitChange($event : MatSelectChange) {\r\n    if ($event.source.id === 'currencyInvestmentUnit') {\r\n      this.model.unit = $event.value;\r\n    } else if ($event.source.id === 'buyingPriceUnit') {\r\n      this.model.buyingPriceUnit = $event.value;\r\n    }\r\n    \r\n    this.values.emit({ \r\n      value : {\r\n        model : this.model,\r\n        valid : this.form.valid\r\n      } \r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    //send data before touching any value\r\n    this.values.emit({ \r\n      value : {\r\n        model : this.model,\r\n        valid : this.form.valid\r\n      } \r\n    });\r\n\r\n    //after any event in the form we send updated data\r\n    const newSubscription = this.form.valueChanges.debounceTime(500).subscribe(values => {\r\n      this.values.emit({ \r\n        value : {\r\n          model : this.model,\r\n          valid : this.form.valid\r\n        } \r\n      });\r\n    });\r\n    this.subscription.add(newSubscription);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/currency-investment/currency-investment.component.ts","module.exports = \"<h2 mat-dialog-title>Create investment</h2>\\r\\n\\r\\n<mat-dialog-content>\\r\\n  <mat-button-toggle-group fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" class=\\\"selector__investment-type\\\" (change)=\\\"onChange($event)\\\" #investmentTypesGroup>\\r\\n    <mat-button-toggle class=\\\"option__investment-type\\\" value=\\\"currency\\\" matTooltip=\\\"Currency exchange\\\" routerLink=\\\"investments/currency/create\\\">\\r\\n      <img src=\\\"/assets/images/exchange.png\\\" alt=\\\"currency\\\" />\\r\\n    </mat-button-toggle>\\r\\n    <mat-button-toggle class=\\\"option__investment-type\\\" value=\\\"cryptocurrency\\\" matTooltip=\\\"Crypto currency\\\" routerLink=\\\"investments/crypto/create\\\">\\r\\n      <img src=\\\"/assets/images/cryptocurrency.png\\\" alt=\\\"Crypto currency\\\" />\\r\\n    </mat-button-toggle>\\r\\n    <mat-button-toggle class=\\\"option__investment-type\\\" value=\\\"property\\\" matTooltip=\\\"Property\\\" routerLink=\\\"investments/property/create\\\">\\r\\n      <img src=\\\"/assets/images/house.png\\\" alt=\\\"Property\\\" />\\r\\n    </mat-button-toggle>\\r\\n  </mat-button-toggle-group>\\r\\n</mat-dialog-content>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/investment-selector-dialog/investment-selector-dialog.component.html\n// module id = ../../../../../src/app/modules/investments/components/investment-selector-dialog/investment-selector-dialog.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host {\\n  text-align: center; }\\n  :host .selector__investment-type .option__investment-type {\\n    padding: 10px; }\\n    :host .selector__investment-type .option__investment-type img {\\n      width: 50px; }\\n  @media screen and (min-width: 600px) {\\n    :host .selector__investment-type .option__investment-type img {\\n      width: 90px; } }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/investment-selector-dialog/investment-selector-dialog.component.scss\n// module id = ../../../../../src/app/modules/investments/components/investment-selector-dialog/investment-selector-dialog.component.scss\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatButtonToggleChange} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'investment-selector-dialog',\r\n  templateUrl: './investment-selector-dialog.component.html',\r\n  styleUrls: ['./investment-selector-dialog.component.scss']\r\n})\r\nexport class InvestmentSelectorDialogComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<InvestmentSelectorDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n  \r\n  ngOnInit() { }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onChange(event : MatButtonToggleChange) {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/investment-selector-dialog/investment-selector-dialog.component.ts","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"container__investments\\\">\\r\\n  <section fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" *ngIf=\\\"user.accessToInvestments\\\" >\\r\\n    \\r\\n    <div *ngFor=\\\"let row of investmentsUI\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n      <crypto-currency *ngFor=\\\"let investment of row\\\" fxFlex\\r\\n        [id]=\\\"investment.id\\\" \\r\\n        [cryptoCurrency]=\\\"investment.unit | lowercase\\\"\\r\\n        [cryptoCurrencyCount]=\\\"investment.amount\\\"\\r\\n        [cryptoCurrencyBuyPrice]=\\\"investment.buyingPrice\\\"\\r\\n        [cryptoCurrencyBuyDate]=\\\"investment.buyingDate\\\"\\r\\n        (totalReturns)=\\\"setTotals($event)\\\">\\r\\n      </crypto-currency>\\r\\n    </div>\\r\\n    \\r\\n    <!-- <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n      <crypto-currency fxFlex \\r\\n        [cryptoCurrency]=\\\"'xmr'\\\"\\r\\n        [cryptoCurrencyCount]=\\\"218.85627651\\\"\\r\\n        [cryptoCurrencyBuyPrice]=\\\"50\\\"\\r\\n        [cryptoCurrencyBuyDate]=\\\"xmrBuyDate\\\"\\r\\n        (totalReturns)=\\\"setTotals($event)\\\">\\r\\n      </crypto-currency>\\r\\n\\r\\n      <crypto-currency fxFlex\\r\\n        [cryptoCurrency]=\\\"'btc'\\\"\\r\\n        [cryptoCurrencyCount]=\\\"1.28129356\\\"\\r\\n        [cryptoCurrencyBuyPrice]=\\\"2359.99\\\"\\r\\n        [cryptoCurrencyBuyDate]=\\\"btcBuyDate\\\"\\r\\n        (totalReturns)=\\\"setTotals($event)\\\">\\r\\n      </crypto-currency>\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n      <crypto-currency fxFlex \\r\\n        [cryptoCurrency]=\\\"'xmr'\\\"\\r\\n        [cryptoCurrencyCount]=\\\"5.94093753\\\"\\r\\n        [cryptoCurrencyBuyPrice]=\\\"87.5282\\\"\\r\\n        [cryptoCurrencyBuyDate]=\\\"xmrBuyDate2\\\"\\r\\n        (totalReturns)=\\\"setTotals($event)\\\">\\r\\n      </crypto-currency>\\r\\n\\r\\n      <crypto-currency fxFlex \\r\\n        [cryptoCurrency]=\\\"'xmr'\\\"\\r\\n        [cryptoCurrencyCount]=\\\"5.72806551\\\"\\r\\n        [cryptoCurrencyBuyPrice]=\\\"90.9556\\\"\\r\\n        [cryptoCurrencyBuyDate]=\\\"xmrBuyDate3\\\"\\r\\n        (totalReturns)=\\\"setTotals($event)\\\">\\r\\n      </crypto-currency>\\r\\n    </div> -->\\r\\n\\r\\n    <mat-card fxFlex class=\\\"totals-card\\\">\\r\\n      <mat-card-content fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"10px\\\"\\r\\n          fxLayoutAlign=\\\"space-around center\\\">\\r\\n        <p>Total Investments: <strong>{{totalInvestment | currency }}</strong></p>\\r\\n        <p [class.color__accent]=\\\"totalReturn >= totalInvestment\\\" \\r\\n            [class.color__red]=\\\"totalReturn < totalInvestment\\\">\\r\\n          Total ROI: <strong>{{ totalReturn | currency }}</strong> ({{totalReturn / totalInvestment * 100 | number : '1.1-2'}}%)\\r\\n        </p>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n  </section>\\r\\n\\r\\n  <section *ngIf=\\\"!user.accessToInvestments\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n    <mat-card fxFlex class=\\\"totals-card\\\">\\r\\n      <mat-card-content fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"10px\\\"\\r\\n          fxLayoutAlign=\\\"space-around center\\\">\\r\\n        <p>\\r\\n          You do not have any investment to show.\\r\\n        </p>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n    \\r\\n  </section>\\r\\n\\r\\n  <mat-progress-bar *ngIf=\\\"getInvestmentsServiceRunning\\\"\\r\\n    fxFlexAlign=\\\"center\\\"\\r\\n    class=\\\"progress-bar progress-bar--get-investments\\\"\\r\\n    color=\\\"primary\\\"\\r\\n    mode=\\\"indeterminate\\\">\\r\\n  </mat-progress-bar>\\r\\n\\r\\n  <section fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start end\\\">\\r\\n    <button mat-fab class=\\\"mat-elevation-z12\\\" color=\\\"accent\\\" matTooltip=\\\"Create new investment\\\" matTooltipPosition=\\\"left\\\" (click)=\\\"openNewInvestmentDialog()\\\">\\r\\n      <mat-icon aria-label=\\\"Create new investemt\\\">add</mat-icon>\\r\\n    </button>\\r\\n  </section>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/investments-dashboard/investments-dashboard.component.html\n// module id = ../../../../../src/app/modules/investments/components/investments-dashboard/investments-dashboard.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".totals-card {\\n  text-align: center; }\\n  .totals-card md-card-content p {\\n    margin-bottom: 0; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/investments-dashboard/investments-dashboard.component.scss\n// module id = ../../../../../src/app/modules/investments/components/investments-dashboard/investments-dashboard.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material';\r\n\r\nimport { MainNavigatorService } from '../../../shared/components/main-navigator/main-navigator.service';\r\nimport { User } from '../../../users/models/user';\r\nimport { UsersService } from '../../../users/users.service';\r\nimport { InvestmentSelectorDialogComponent } from '../investment-selector-dialog/investment-selector-dialog.component';\r\nimport { Investment } from '../../models/investment';\r\nimport { AppService } from '../../../../app.service';\r\nimport { InvestmentsService } from '../../investments.service';\r\n\r\n@Component({\r\n  selector: 'investments-dashboard',\r\n  templateUrl: './investments-dashboard.component.html',\r\n  styleUrls: ['./investments-dashboard.component.scss']\r\n})\r\nexport class InvestmentsDashboardComponent implements OnInit {\r\n  investments : Investment[] = [];\r\n  investmentsUI : any[] = []; //this is a structure to use in the view an make the rendering easier organizing the info in rows\r\n  xmrBuyDate : Date = new Date(2017, 5, 23); //month minus 1, 5 = june\r\n  xmrBuyDate2 : Date = new Date(2017, 8, 23);\r\n  xmrBuyDate3 : Date = new Date(2017, 8, 25);\r\n  btcBuyDate : Date = new Date(2017, 6, 19);\r\n  totalInvestment = 0;\r\n  totalReturn = 0;\r\n  user : User = null;\r\n  getInvestmentsServiceRunning : boolean = false;\r\n\r\n  constructor(private route : ActivatedRoute, private mainNavigatorService : MainNavigatorService, private usersService : UsersService, public dialog: MatDialog, \r\n      private appService : AppService, private investmentsService : InvestmentsService) { }\r\n\r\n  ngOnInit() {\r\n    let methodTrace = `${this.constructor.name} > ngOnInit() > `; //for debugging\r\n\r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: '/welcome', selected: false },\r\n      { displayName: 'Investments', url: null, selected: true }\r\n    ]);\r\n\r\n    //get authUser from resolver\r\n    this.route.data.subscribe((data: { authUser: User }) => {\r\n      this.user = data.authUser;\r\n    });\r\n\r\n    if (!this.investments.length) {\r\n      this.getInvestments();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get my investments from server\r\n   */\r\n  getInvestments() {\r\n    const methodTrace = `${this.constructor.name} > getInvestments() > `; //for debugging\r\n\r\n    this.investments = [];\r\n    this.getInvestmentsServiceRunning = true;\r\n\r\n    this.investmentsService.getInvestments(this.user.email).subscribe(\r\n      (investments : Investment[]) => {\r\n        this.investments = investments;\r\n\r\n        //organize investments in rows of n-items to show in the view\r\n        let investmentsRow : any[] = [];\r\n        for (let item of investments) {\r\n          if (investmentsRow.length < 2) {\r\n            investmentsRow.push(item);\r\n          } else {\r\n            this.investmentsUI.push(investmentsRow);\r\n            investmentsRow = [item];\r\n          }\r\n        }\r\n\r\n        if (investmentsRow.length) {\r\n          this.investmentsUI.push(investmentsRow);\r\n        }\r\n\r\n        this.getInvestmentsServiceRunning = false;\r\n      },\r\n      (error : any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n        } else {\r\n          this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n        }\r\n\r\n        this.getInvestmentsServiceRunning = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  setTotals(totalReturns : any) : void {\r\n    this.totalReturn += totalReturns.usdFromCryptoCurrency;\r\n    this.totalInvestment += totalReturns.usdFromCryptoCurrencyWhenBought;\r\n  }\r\n\r\n  openNewInvestmentDialog() {\r\n    let addPersonDialogRef = this.dialog.open(InvestmentSelectorDialogComponent, {});\r\n    return false;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/investments-dashboard/investments-dashboard.component.ts","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"container__edit-investment\\\">\\r\\n  <form *ngIf=\\\"!getInvestmentServiceRunning\\\" \\r\\n      class=\\\"form__container form__edit-investment\\\" (ngSubmit)=\\\"editMode ? onUpdate() : onSubmit()\\\" #editInvestmentForm=\\\"ngForm\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n    \\r\\n    <section fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields\\\">\\r\\n      <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n        <h3 class=\\\"title\\\">\\r\\n          Owner\\r\\n          <p class=\\\"mat-caption\\\">Specify the owner of this investment</p>\\r\\n        </h3>\\r\\n\\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n          <mat-radio-group fxFlex.gt-xs=\\\"230px\\\" *ngIf=\\\"teams.length\\\" class=\\\"form__field radiogroup__owner\\\"\\r\\n              [(ngModel)]=\\\"model.owner\\\" \\r\\n              name=\\\"owner\\\" \\r\\n              id=\\\"owner\\\" \\r\\n              #owner=\\\"ngModel\\\"\\r\\n              (change)=\\\"onRadioChange($event)\\\">\\r\\n            <mat-radio-button class=\\\"owner__option\\\" value=\\\"me\\\">Just me</mat-radio-button>\\r\\n            <mat-radio-button class=\\\"owner__option\\\" value=\\\"team\\\">My team</mat-radio-button>\\r\\n          </mat-radio-group>\\r\\n  \\r\\n          <mat-form-field *ngIf=\\\"teams.length && model.owner === 'team'\\\" fxFlex fxFlex.gt-xs=\\\"350px\\\" class=\\\"form__field\\\">\\r\\n            <mat-select [(ngModel)]=\\\"model.team\\\"\\r\\n                name=\\\"team\\\" \\r\\n                id=\\\"team\\\" \\r\\n                #team=\\\"ngModel\\\" \\r\\n                placeholder=\\\"Select a team\\\"\\r\\n                (change)=\\\"onSelectChange($event)\\\"\\r\\n                required>\\r\\n              <mat-option *ngFor=\\\"let team of teams\\\" [value]=\\\"team\\\">\\r\\n                {{team.name}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n            <mat-error *ngIf=\\\"team.invalid && (team.dirty || team.touched) && team.errors.required\\\">Please choose a team</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      \\r\\n      <div *ngIf=\\\"model.team\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n        <h3 class=\\\"title\\\">\\r\\n          Split between team members\\r\\n          <p class=\\\"mat-caption\\\">Specify how to split the returns setting a percentage of the total investment amount to each member</p>\\r\\n        </h3>\\r\\n\\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields__row\\\">         \\r\\n          <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"20px\\\" class=\\\"team-members\\\">\\r\\n            <div *ngFor=\\\"let member of model.team.members; index as memberIndex\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"member\\\">\\r\\n              <div class=\\\"member-details\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n                <img class=\\\"member__avatar\\\" [src]=\\\"member.avatar\\\"/>\\r\\n                <div class=\\\"member__info\\\" fxLayout=\\\"column\\\" [matTooltip]=\\\"member.email === model.team.admin.email ? 'Administrator' : ''\\\" matTooltipPosition=\\\"right\\\">\\r\\n                  <p class=\\\"member__name\\\">{{member.name}} <mat-icon *ngIf=\\\"member.email === model.team.admin.email\\\" class=\\\"admin-icon\\\" aria-label=\\\"Admin\\\" >lock</mat-icon></p>\\r\\n                  <p class=\\\"member__email\\\">{{member.email}}</p>\\r\\n                </div>\\r\\n              </div>\\r\\n    \\r\\n              <div class=\\\"member-percentage\\\">\\r\\n                <mat-form-field class=\\\"form__field\\\">\\r\\n                  <input matInput type=\\\"number\\\" id=\\\"memberPercentage_{{member.email}}\\\" name=\\\"memberPercentage_{{member.email}}\\\" placeholder=\\\"Percentage of investment\\\"\\r\\n                      [(ngModel)]=\\\"model.membersPercentage[member.email]\\\" \\r\\n                      value=\\\"model.membersPercentage[member.email]\\\"\\r\\n                      numberValidator='{\\\"min\\\": 0, \\\"max\\\": 100}'\\r\\n                      required\\r\\n                      #memberPercentage=\\\"ngModel\\\">\\r\\n                  <mat-hint align=\\\"start\\\">(%) Investment portion for {{member.email}}.</mat-hint>\\r\\n                  <mat-error *ngIf=\\\"memberPercentage.invalid && (memberPercentage.dirty || memberPercentage.touched) && memberPercentage.errors.required\\\">Percentage of investment is required.</mat-error>\\r\\n                  <mat-error *ngIf=\\\"memberPercentage.invalid && (memberPercentage.dirty || memberPercentage.touched) && memberPercentage.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n                  <mat-error *ngIf=\\\"memberPercentage.invalid && (memberPercentage.dirty || memberPercentage.touched) && memberPercentage.errors.numberValidatorMin\\\">Min value must be greater or equal than 0</mat-error>\\r\\n                  <mat-error *ngIf=\\\"memberPercentage.invalid && (memberPercentage.dirty || memberPercentage.touched) && memberPercentage.errors.numberValidatorMax\\\">Max value must be less or equal than 100</mat-error>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          \\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n        <h3 class=\\\"title title__investment-amount\\\">\\r\\n          Investment amount\\r\\n        </h3>\\r\\n\\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields__row\\\">\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n              <currency-unit fxFlex=\\\"50px\\\"\\r\\n                  [id]=\\\"'investmentAmountUnit'\\\" \\r\\n                  [value]=\\\"model.investmentAmountUnit\\\"\\r\\n                  [view]=\\\"'narrow'\\\"\\r\\n                  (newValue)=\\\"onCurrencyUnitChange($event)\\\">\\r\\n              </currency-unit>\\r\\n              \\r\\n              <mat-form-field fxFlex fxFlex.gt-xs=\\\"300px\\\" class=\\\"form__field\\\">\\r\\n                <input matInput type=\\\"number\\\" id=\\\"investmentAmount\\\" name=\\\"investmentAmount\\\" placeholder=\\\"Investment amount\\\"\\r\\n                    [(ngModel)]=\\\"model.investmentAmount\\\" \\r\\n                    value=\\\"model.investmentAmount\\\"\\r\\n                    numberValidator \\r\\n                    required\\r\\n                    #investmentAmount=\\\"ngModel\\\">\\r\\n                <mat-hint align=\\\"start\\\">Set the amount of money to invest.</mat-hint>\\r\\n                <mat-error *ngIf=\\\"investmentAmount.invalid && (investmentAmount.dirty || investmentAmount.touched) && investmentAmount.errors.required\\\">Investment amount is required.</mat-error>\\r\\n                <mat-error *ngIf=\\\"investmentAmount.invalid && (investmentAmount.dirty || investmentAmount.touched) && investmentAmount.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n        <currency-investment [type]=\\\"type\\\"\\r\\n            [unit]=\\\"type ==='currency' ? 'USD' : 'BTC'\\\"\\r\\n            (values)=\\\"onInvestmentDataChange($event)\\\">\\r\\n        </currency-investment>\\r\\n      </div>\\r\\n    </section>\\r\\n\\r\\n    \\r\\n    \\r\\n    <section fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"center center\\\" class=\\\"form__actions form__actions--edit-investment\\\">\\r\\n      <button *ngIf=\\\"!editInvestmentServiceRunning\\\" \\r\\n          class=\\\"form__action mat-raised-button\\\" \\r\\n          mat-raised-button \\r\\n          type=\\\"submit\\\" \\r\\n          color=\\\"accent\\\" \\r\\n          [disabled]=\\\"!editInvestmentForm.form.valid || !investmentDataValid\\\">Save</button>\\r\\n      \\r\\n      <mat-progress-bar *ngIf=\\\"editInvestmentServiceRunning\\\"\\r\\n          class=\\\"progress-bar progress-bar--edit-investment\\\"\\r\\n          color=\\\"primary\\\"\\r\\n          mode=\\\"indeterminate\\\">\\r\\n      </mat-progress-bar>\\r\\n    </section>\\r\\n    <!-- <pre>{{model | json}}</pre> -->\\r\\n  </form>\\r\\n\\r\\n  <mat-progress-bar *ngIf=\\\"getInvestmentServiceRunning\\\"\\r\\n      fxFlexAlign=\\\"center\\\"\\r\\n      class=\\\"progress-bar progress-bar--get-investment\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      mode=\\\"indeterminate\\\">\\r\\n  </mat-progress-bar>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/investments-edit/investments-edit.component.html\n// module id = ../../../../../src/app/modules/investments/components/investments-edit/investments-edit.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"form .form__actions .progress-bar {\\n  width: 100%; }\\n\\n.container__edit-investment .form__fields .form__fields__row__container .radiogroup__owner .owner__option {\\n  margin-right: 10px; }\\n  .container__edit-investment .form__fields .form__fields__row__container .radiogroup__owner .owner__option:last-child {\\n    margin-right: 0; }\\n\\n.container__edit-investment .form__fields .form__fields__row__container .title__investment-amount {\\n  margin-bottom: 5px !important; }\\n\\n.container__edit-investment .team-members .member .member__avatar {\\n  border-radius: 50%;\\n  width: 40px;\\n  height: 40px;\\n  padding: 0 10px 0 0; }\\n\\n.container__edit-investment .team-members .member .member__info .admin-icon {\\n  font-size: 14px;\\n  height: auto;\\n  width: auto; }\\n\\n.container__edit-investment .team-members .member .member__info .member__email {\\n  font-size: 11px; }\\n\\n@media screen and (min-width: 600px) {\\n  form .form__actions .progress-bar {\\n    width: 88px; } }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/investments-edit/investments-edit.component.scss\n// module id = ../../../../../src/app/modules/investments/components/investments-edit/investments-edit.component.scss\n// module chunks = main","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChild } from '@angular/core';\r\nimport { DecimalPipe } from '@angular/common';\r\nimport { MainNavigatorService } from '../../../shared/components/main-navigator/main-navigator.service';\r\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\r\nimport { User } from '../../../users/models/user';\r\nimport { TeamsService } from '../../../teams/teams.service';\r\nimport { AppService } from \"../../../../app.service\";\r\nimport { Team } from '../../../teams/models/team';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { MatSelectChange, MatRadioChange } from '@angular/material';\r\nimport { InvestmentsService } from '../../investments.service';\r\n\r\n@Component({\r\n  selector: 'investments-edit',\r\n  templateUrl: './investments-edit.component.html',\r\n  styleUrls: ['./investments-edit.component.scss']\r\n})\r\nexport class InvestmentsEditComponent implements OnInit, OnDestroy, AfterViewInit {\r\n\r\n  @ViewChild('editInvestmentForm') form;\r\n  editMode : boolean = false;\r\n  user : User = null;\r\n  teams : Team[] = [];\r\n  model : any = {\r\n    email : null, //user email for api check\r\n    owner : 'me',\r\n    team : null,\r\n    teamSlug : null,\r\n    membersPercentage : {},\r\n    investmentAmount : null,\r\n    investmentAmountUnit : null,\r\n    type : null,\r\n    investmentData : {}, //specific data related to the investment type\r\n    investmentDistribution : [] //how the investment would be distributed into its owners\r\n  };\r\n  id : string = null; //investment id\r\n  type : string = null; //investment type\r\n  //services flags\r\n  editInvestmentServiceRunning : boolean = false;\r\n  getInvestmentServiceRunning : boolean = false;\r\n  getTeamsServiceRunning : boolean = false;\r\n  subscription : Subscription = new Subscription();\r\n  investmentDataValid : boolean = false; //this value is set when investment data form is updated\r\n\r\n  \r\n  constructor(private route : ActivatedRoute, private mainNavigatorService : MainNavigatorService, private investmentsService : InvestmentsService,\r\n    private teamsService : TeamsService, private appService : AppService, private router : Router) { }\r\n\r\n  ngOnInit() {\r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: '/welcome', selected: false },\r\n      { displayName: 'Investments', url: '/investments', selected: false }\r\n    ]);\r\n\r\n    //generates a user source object from authUser from resolver\r\n    const user$ = this.route.data.map((data: { authUser: User }) => data.authUser);\r\n\r\n    //generates an investment id source from id parameter in url\r\n    const id$ = this.route.paramMap.map((params: ParamMap) => params.get('id'));\r\n    \r\n    //combine user$ and id$ sources into one object and start listen to it for changes\r\n    this.subscription = user$.combineLatest(id$, (user, id) => { \r\n      return { user, investmentId : id } \r\n    }).subscribe(data => {\r\n      this.user = data.user;\r\n      this.model.email = data.user.email;\r\n      this.model.investmentAmountUnit = this.user.currency;\r\n\r\n      this.editInvestmentServiceRunning = false;\r\n      this.getInvestmentServiceRunning = false;\r\n      \r\n      if (!data.investmentId) {\r\n        //we are creating a new team\r\n        this.id = null;\r\n        this.editMode = false;\r\n        this.mainNavigatorService.appendLink({ displayName: 'Create Investment', url: '', selected : true });\r\n      } else {\r\n        this.mainNavigatorService.appendLink({ displayName: 'Edit Investment', url: '', selected : true });\r\n        //we are editing an existing investment\r\n        this.id = data.investmentId; //the new slug\r\n        this.editMode = true;\r\n        \r\n        this.getInvestment(data.investmentId); //get data\r\n      }\r\n\r\n      //get user teams\r\n      this.getTeams();\r\n    });\r\n\r\n    //get TYPE parameter\r\n    this.route.paramMap.map((params: ParamMap) => params.get('type')).subscribe(type => {\r\n      if (!['currency', 'crypto', 'property'].includes(type)) {\r\n        this.appService.showResults('You must provide a valid investment type to continue.', 'error');\r\n        this.router.navigate(['welcome']);\r\n      } else {\r\n        this.type = type;\r\n        this.model.type = type;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    const newSubscription = this.form.valueChanges.debounceTime(500).subscribe(values => {\r\n      \r\n      if (values.owner === 'team' && values.team && this.model.team) {\r\n        //calculates the percentage acum from all the members\r\n        const percentageAcum = this.model.team.members.reduce((total, member) => {\r\n          return total + (this.model.membersPercentage[member.email] || 0);\r\n        }, 0);\r\n\r\n        if (percentageAcum > 100) {\r\n          const [lastMember] = this.model.team.members.slice(-1);\r\n          const diff = percentageAcum - 100;\r\n          const decimalPipe = new DecimalPipe('en');\r\n          const newValue = Number(decimalPipe.transform(this.model.membersPercentage[lastMember.email] - diff, '1.0-2'));\r\n          if (newValue < 0) {\r\n            this.setDefaultInvestmentPercentages();\r\n            this.appService.showResults(`The sum of percentages must not exceed 100%, we reset the values to make it valid.`, 'warn');\r\n          } else {\r\n            this.model.membersPercentage[lastMember.email] = newValue <= 100 ? newValue : 0;\r\n            this.appService.showResults(`The sum of percentages must not exceed 100%, we reset the last values to make it valid.`, 'warn');\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    const methodTrace = `${this.constructor.name} > ngOnDestroy() > `; //for debugging\r\n    \r\n    //this.appService.consoleLog('info', `${methodTrace} Component destroyed.`);\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onSubmit() {\r\n    const methodTrace = `${this.constructor.name} > onSubmit() > `; //for debugging\r\n\r\n    this.editInvestmentServiceRunning = true;\r\n\r\n    this.model.investmentDistribution = this.populateInvestmentDistributionArray();\r\n    //call the investment create service\r\n    const newSubscription = this.investmentsService.create(this.model).subscribe(\r\n      (data : any) => {\r\n        if (data && data.id && data.type) {\r\n          this.appService.showResults(`Investment successfully created!`, 'success');\r\n          this.router.navigate(['/investments/', data.type, 'edit', data.id]);\r\n        } else {\r\n          this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`);\r\n          this.editInvestmentServiceRunning = false;\r\n        }\r\n      },\r\n      (error : any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error with the create/edit investment service.`, error);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error with the investment services, please try again in a few minutes.`, 'error');\r\n        }\r\n\r\n        this.editInvestmentServiceRunning = false;\r\n      }\r\n    );\r\n\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n  /**\r\n   * Get my teams from server\r\n   */\r\n  getTeams() {\r\n    const methodTrace = `${this.constructor.name} > getTeams() > `; //for debugging\r\n\r\n    this.teams = [];\r\n    this.getTeamsServiceRunning = true;\r\n\r\n    const newSubscription = this.teamsService.getTeams(this.user.email).subscribe(\r\n      (teams : Team[]) => {\r\n        this.teams = teams;\r\n        this.getTeamsServiceRunning = false;\r\n      },\r\n      (error : any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n        } else {\r\n          this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n        }\r\n\r\n        this.getTeamsServiceRunning = false;\r\n      }\r\n    );\r\n\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n  /**\r\n   * Populates an array that specifies the distribution of the investment between its owners and returns it.\r\n   * \r\n   * @return {array} The distribution of the investment\r\n   */\r\n  populateInvestmentDistributionArray() : any[] {\r\n    let result = [];\r\n\r\n    if (!this.model.team) {\r\n      result.push({ email : this.user.email, percentage : 100 });\r\n    } else {\r\n      for (let email of Object.keys(this.model.membersPercentage)) {\r\n        result.push({ email, percentage : this.model.membersPercentage[email] });\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get a team from server based on the id provided\r\n   * @param {string} id \r\n   */\r\n  getInvestment(id : string) {\r\n    const methodTrace = `${this.constructor.name} > getInvestment() > `; //for debugging\r\n    \r\n        if (!id) {\r\n          this.appService.showResults(`Invalid investment ID`, 'error');\r\n          this.appService.consoleLog('error', `${methodTrace} ID parameter must be provided, but was: `, id);\r\n          return false;\r\n        }\r\n    \r\n        this.getInvestmentServiceRunning = true;\r\n    \r\n        const newSubscription = this.investmentsService.getInvestmentById(this.user.email, id).subscribe(\r\n          (data : any) => {\r\n            if (data && data._id) {\r\n              console.log(data);\r\n            } else {\r\n              this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`);\r\n            }\r\n    \r\n            this.getInvestmentServiceRunning = false;\r\n          },\r\n          (error : any) => {\r\n            this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n            if (error.codeno === 400) {\r\n              this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n            } else if (error.codeno === 462) {\r\n              this.appService.showResults(error.msg, 'error');\r\n              this.router.navigate(['/welcome']);\r\n            } else {\r\n              this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n            }\r\n    \r\n            this.getInvestmentServiceRunning = false;\r\n          }\r\n        );\r\n    \r\n        this.subscription.add(newSubscription);\r\n  }\r\n\r\n  onSelectChange(matSelectChange : MatSelectChange) {\r\n    this.model.teamSlug = matSelectChange.value.slug;\r\n\r\n    this.setDefaultInvestmentPercentages();\r\n  }\r\n\r\n  onRadioChange(matRadioChange : MatRadioChange) {\r\n    if (matRadioChange.value === 'me') {\r\n      //reset team values from model\r\n      this.model.team = this.model.teamSlug = null;\r\n      this.model.membersPercentage = {};\r\n    }\r\n  }\r\n\r\n  onCurrencyUnitChange($event : MatSelectChange) {\r\n    if ($event.source.id === 'investmentAmountUnit') {\r\n      this.model.investmentAmountUnit = $event.value;\r\n    }\r\n  }\r\n\r\n  onInvestmentDataChange($event : any) {\r\n    this.model.investmentData = $event.value.model;\r\n    this.investmentDataValid = $event.value.valid;\r\n  }\r\n\r\n  /**\r\n   * Splits equally the percentage of an investment to all the team members\r\n   */\r\n  setDefaultInvestmentPercentages() {\r\n    const decimalPipe = new DecimalPipe('en');\r\n    //set the default percentage of the investment to each member\r\n    const defaultPercentage = Number(decimalPipe.transform(100 / this.model.team.members.length, '1.0-2'));\r\n    for (let member of this.model.team.members) {\r\n      this.model.membersPercentage[member.email] = defaultPercentage;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/investments/components/investments-edit/investments-edit.component.ts","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { InvestmentsDashboardComponent } from './components/investments-dashboard/investments-dashboard.component';\r\nimport { InvestmentsEditComponent } from './components/investments-edit/investments-edit.component';\r\nimport { AuthGuard } from '../../auth.guard';\r\nimport { AuthResolver } from '../../auth-resolver.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path : 'investments',\r\n    children : [\r\n      { \r\n        path : ':type/create', \r\n        component : InvestmentsEditComponent,\r\n        resolve : {\r\n          authUser : AuthResolver\r\n        } \r\n      },\r\n      { \r\n        path : ':type/edit/:id', \r\n        component : InvestmentsEditComponent,\r\n        resolve : {\r\n          authUser : AuthResolver\r\n        } \r\n      },\r\n      { \r\n        path : '', \r\n        pathMatch : 'full',\r\n        component : InvestmentsDashboardComponent,\r\n        resolve : {\r\n          authUser : AuthResolver\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class InvestmentsRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/investments/investments-routing.module.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { InvestmentsRoutingModule } from './investments-routing.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport { CustomMaterialDesignModule } from '../../modules/shared/custom-material-design.module';\r\nimport { SharedModule } from '../../modules/shared/shared.module';\r\nimport { InvestmentsDashboardComponent } from './components/investments-dashboard/investments-dashboard.component';\r\nimport { CryptoCurrencyComponent } from './components/crypto-currency/crypto-currency.component';\r\nimport { CryptoCurrencyService } from './components/crypto-currency/crypto-currency.service';\r\nimport { InvestmentSelectorDialogComponent } from './components/investment-selector-dialog/investment-selector-dialog.component';\r\nimport { InvestmentsEditComponent } from './components/investments-edit/investments-edit.component';\r\nimport { CurrencyInvestmentComponent } from './components/currency-investment/currency-investment.component';\r\nimport { InvestmentsService } from './investments.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    InvestmentsRoutingModule,\r\n    FormsModule,\r\n    FlexLayoutModule,\r\n    CustomMaterialDesignModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    CryptoCurrencyComponent,\r\n    InvestmentsDashboardComponent,\r\n    InvestmentSelectorDialogComponent,\r\n    InvestmentsEditComponent,\r\n    CurrencyInvestmentComponent\r\n  ],\r\n  entryComponents: [\r\n    InvestmentSelectorDialogComponent //added as material doc suggest to allow AOT on this on the fly created class\r\n  ],\r\n  providers: [ CryptoCurrencyService, InvestmentsService ]\r\n})\r\nexport class InvestmentsModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/investments/investments.module.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { Observable } from \"rxjs/Rx\";\r\nimport { environment } from \"../../../environments/environment\";\r\nimport { AppService } from \"../../app.service\";\r\nimport { User } from '../users/models/user';\r\nimport { Investment } from './models/investment';\r\nimport { CurrencyInvestment } from './models/currencyInvestment';\r\nimport { Team } from '../teams/models/team';\r\n\r\n\r\n@Injectable()\r\nexport class InvestmentsService {\r\n\r\n  private serverHost : string = environment.apiHost + '/api/investments';\r\n  private headers = new Headers({'Content-Type': 'application/json'});\r\n\r\n  constructor(private http : Http, private appService : AppService) {}\r\n\r\n  /**\r\n   * Server call to Create a new investment in the system \r\n   * @param postData \r\n   */\r\n  create(postData : any = {}) : Observable<any> {\r\n    return this.http.post(`${this.serverHost}/create`, postData, { headers : this.headers })\r\n        .map(this.appService.extractData)\r\n        .catch(this.appService.handleError);\r\n  } \r\n  \r\n  /**\r\n   * Server call to Update an investment in the system \r\n   * @param postData \r\n   */\r\n  update(postData : any = {}) : Observable<any> {\r\n    return this.http.post(`${this.serverHost}/update`, postData, { headers : this.headers })\r\n        .map(this.appService.extractData)\r\n        .catch(this.appService.handleError);\r\n  } \r\n\r\n  /**\r\n   * Server call to Get an investment from the server based on its ID\r\n   * @param {string} id . The investment id\r\n   */\r\n  getInvestmentById(email : string, id : string) : Observable<any> {\r\n    let methodTrace = `${this.constructor.name} > getInvestmentById() > `; //for debugging\r\n\r\n    if (!id) {\r\n      this.appService.consoleLog('error', `${methodTrace} ID parameter must be provided, but was: `, id);\r\n      return null;\r\n    }\r\n\r\n    return this.http.get(`${this.serverHost}/getbyId?${this.appService.getParamsAsQuerystring({id, email})}`)\r\n        .map(this.appService.extractData)\r\n        .catch(this.appService.handleError);\r\n  }\r\n\r\n  /**\r\n   * Server call to Get all the Investments for the current user from the server\r\n   * @param {string} email . The team slug\r\n   */\r\n  getInvestments(email : string) : Observable<Investment[]> {\r\n    let methodTrace = `${this.constructor.name} > getTeams() > `; //for debugging\r\n\r\n    const investmentsData$ = this.http.get(`${this.serverHost}/getAll?${this.appService.getParamsAsQuerystring({email})}`)\r\n        .map(this.appService.extractData)\r\n        .catch(this.appService.handleError);\r\n    \r\n    return investmentsData$.switchMap((investmentsData) => {\r\n      let investments : Investment[] = [];\r\n\r\n      if (investmentsData && investmentsData instanceof Array) {\r\n        for (let item of investmentsData) {\r\n          const createdBy = new User(item.createdBy.name, item.createdBy.email, item.createdBy.gravatar);\r\n          const team = item.team ? new Team(item.team.name, item.team.description, item.team.slug) : null;\r\n\r\n          if (item.investmentType === 'currency' || item.investmentType === 'crypto') {\r\n            investments.push(new CurrencyInvestment(item._id, item.amount, item.amountUnit, createdBy, team, item.investmentDistribution, item.currencyInvestmentData.amountUnit, \r\n                item.currencyInvestmentData.amount, item.currencyInvestmentData.buyingPrice, item.currencyInvestmentData.buyingPriceUnit, item.currencyInvestmentData.buyingDate, item.investmentType));\r\n          }\r\n        }\r\n      } else {\r\n        this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`);\r\n      }\r\n\r\n      return Observable.of(investments);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Server call to delete an investment from the server\r\n   * @param {string} id . The team slug\r\n   * @param {string} email . The current user email.\r\n   */\r\n  delete(id : string, email : string) : Observable<any> {\r\n    let methodTrace = `${this.constructor.name} > delete() > `; //for debugging\r\n\r\n    return this.http.delete(`${this.serverHost}/delete/${id}`, {headers : this.headers, body : { email } } )\r\n        .map(this.appService.extractData)\r\n        .catch(this.appService.handleError);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/investments/investments.service.ts","import { Investment } from \"./investment\";\r\nimport { Team } from \"../../teams/models/team\";\r\nimport { User } from \"../../users/models/user\";\r\n\r\nexport class CurrencyInvestment extends Investment {\r\n  type : 'crypto' | 'currency';\r\n  unit : string;\r\n  amount : number;\r\n  buyingPrice : number;\r\n  buyingDate : Date;\r\n  buyingPriceUnit : string;\r\n\r\n  constructor (id : string, investmentAmount : number, investmentAmountUnit : string, createdBy : User, team : Team = null, investmentDistribution : any[] = [],\r\n      unit : string, amount : number, buyingPrice : number, buyingPriceUnit : string, buyingDate : Date, type : 'crypto' | 'currency' = 'currency') {\r\n    \r\n    super(id, investmentAmount, investmentAmountUnit, createdBy, team, investmentDistribution);\r\n    this.type = type;\r\n    this.unit = unit;\r\n    this.amount = amount;\r\n    this.buyingDate = buyingDate;\r\n    this.buyingPrice = buyingPrice;\r\n    this.buyingPriceUnit = buyingPriceUnit;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/investments/models/currencyInvestment.ts","import { User } from \"../../users/models/user\";\r\nimport { Team } from \"../../teams/models/team\";\r\n\r\nexport class Investment {\r\n\r\n  id : string;\r\n  createdBy : User;\r\n  team : Team;\r\n  investmentDistribution : any[];\r\n  investmentAmount : number;\r\n  investmentAmountUnit : string;\r\n\r\n  constructor(id : string, investmentAmount : number, investmentAmountUnit : string, createdBy : User, team : Team = null, investmentDistribution : any[] = []) {\r\n    this.investmentAmount = investmentAmount;\r\n    this.investmentAmountUnit = investmentAmountUnit;\r\n    this.team = team;\r\n    this.investmentDistribution = investmentDistribution;\r\n    this.createdBy = createdBy;\r\n    this.id = id;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/investments/models/investment.ts","module.exports = \"<mat-form-field class=\\\"form__field\\\">\\r\\n  <mat-select *ngIf=\\\"type === 'currency'\\\" id=\\\"{{id}}\\\" placeholder=\\\"{{placeHolder}}\\\" value=\\\"{{value}}\\\" (change)=\\\"onChange($event)\\\">\\r\\n    <mat-option value=\\\"AUD\\\">{{view === 'narrow' ? 'AUD' : 'Australian Dollar'}}</mat-option>\\r\\n    <mat-option value=\\\"EUR\\\">{{view === 'narrow' ? 'EUR' : 'Euro'}}</mat-option>\\r\\n    <mat-option value=\\\"NZD\\\">{{view === 'narrow' ? 'NZD' : 'New Zealand Dollar'}}</mat-option>\\r\\n    <mat-option value=\\\"USD\\\">{{view === 'narrow' ? 'USD' : 'US Dollar'}}</mat-option>\\r\\n  </mat-select>\\r\\n\\r\\n  <mat-select *ngIf=\\\"type === 'crypto'\\\" id=\\\"{{id}}\\\" placeholder=\\\"{{placeHolder}}\\\" value=\\\"{{value}}\\\" (change)=\\\"onChange($event)\\\">\\r\\n    <mat-option value=\\\"BTC\\\">{{view === 'narrow' ? 'BTC' : 'Bitcoin'}}</mat-option>\\r\\n    <mat-option value=\\\"XMR\\\">{{view === 'narrow' ? 'XMR' : 'Monero'}}</mat-option>\\r\\n  </mat-select>\\r\\n  \\r\\n  <mat-hint align=\\\"start\\\">{{hint}}</mat-hint>\\r\\n</mat-form-field>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/shared/components/currency-unit/currency-unit.component.html\n// module id = ../../../../../src/app/modules/shared/components/currency-unit/currency-unit.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/shared/components/currency-unit/currency-unit.component.scss\n// module id = ../../../../../src/app/modules/shared/components/currency-unit/currency-unit.component.scss\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { MatSelectChange } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'currency-unit',\r\n  templateUrl: './currency-unit.component.html',\r\n  styleUrls: ['./currency-unit.component.scss']\r\n})\r\nexport class CurrencyUnitComponent implements OnInit {\r\n\r\n  @Input() id : string;\r\n  @Input() hint : string;\r\n  @Input() view : string = 'normal';\r\n  @Input() type : string = 'currency';\r\n  @Input() placeHolder : string;\r\n  @Input() value : string;\r\n  @Output() newValue: EventEmitter<MatSelectChange> = new EventEmitter();\r\n\r\n  model : any = {};\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n  onChange(matSelectChange : MatSelectChange) {\r\n    this.newValue.emit(matSelectChange);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/shared/components/currency-unit/currency-unit.component.ts","module.exports = \"<nav class=\\\"navigation--main\\\">\\r\\n  <mat-chip-list>\\r\\n    <mat-chip *ngFor=\\\"let link of links\\\" [routerLink]=\\\"link.url\\\" [selected]=\\\"link.selected\\\">{{link.displayName}}</mat-chip>\\r\\n  </mat-chip-list>      \\r\\n</nav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/shared/components/main-navigator/main-navigator.component.html\n// module id = ../../../../../src/app/modules/shared/components/main-navigator/main-navigator.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/shared/components/main-navigator/main-navigator.component.scss\n// module id = ../../../../../src/app/modules/shared/components/main-navigator/main-navigator.component.scss\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { MainNavigatorService } from './main-navigator.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { AppService } from '../../../../app.service';\r\n\r\n@Component({\r\n  selector: 'main-navigator',\r\n  templateUrl: './main-navigator.component.html',\r\n  styleUrls: ['./main-navigator.component.scss']\r\n})\r\nexport class MainNavigatorComponent implements OnInit, OnDestroy {\r\n  \r\n  links : any;\r\n  subscription : Subscription = new Subscription();\r\n  \r\n  constructor(private mainNavigatorService : MainNavigatorService, private appService : AppService) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription = this.mainNavigatorService.links$.subscribe((links : any[]) => this.links = links);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    const methodTrace = `${this.constructor.name} > ngOnDestroy() > `; //for debugging\r\n    \r\n    //this.appService.consoleLog('info', `${methodTrace} Component destroyed.`);\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/shared/components/main-navigator/main-navigator.component.ts","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class MainNavigatorService {\r\n  \r\n  private linksSource : BehaviorSubject<any[]>; //Observable source\r\n  links$ : Observable<any[]>; //Observable stream\r\n\r\n  constructor() {\r\n    this.linksSource = new BehaviorSubject<any[]>(null);\r\n    this.links$ = this.linksSource.asObservable();\r\n  }\r\n\r\n  //links source feeder\r\n  setLinks(newLinks : any[]) {\r\n    this.linksSource.next(newLinks);\r\n  }\r\n\r\n  //add a link to the source feeder\r\n  appendLink(link : any) {\r\n    let currentLinks : any[] = this.linksSource.getValue();\r\n    currentLinks.push(link);\r\n    this.setLinks(currentLinks);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/shared/components/main-navigator/main-navigator.service.ts","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutWrap fxLayoutAlign=\\\"space-around center\\\" class=\\\"snackbar--simple\\\">\\r\\n  <p fxFlex class=\\\"message\\\">{{data.message}}</p>\\r\\n  <mat-icon class=\\\"icon\\\" aria-label=\\\"Close\\\" (click)=\\\"actionClicked()\\\">clear</mat-icon>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/shared/components/snackbar-simple/snackbar-simple.component.html\n// module id = ../../../../../src/app/modules/shared/components/snackbar-simple/snackbar-simple.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".snackbar--simple {\\n  font-size: 12px;\\n  cursor: default; }\\n  .snackbar--simple .icon {\\n    cursor: pointer; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/shared/components/snackbar-simple/snackbar-simple.component.scss\n// module id = ../../../../../src/app/modules/shared/components/snackbar-simple/snackbar-simple.component.scss\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatSnackBarRef, MAT_SNACK_BAR_DATA} from '@angular/material';\r\n@Component({\r\n  selector: 'app-snackbar-simple',\r\n  templateUrl: './snackbar-simple.component.html',\r\n  styleUrls: ['./snackbar-simple.component.scss']\r\n})\r\nexport class SnackbarSimpleComponent implements OnInit {\r\n\r\n  constructor(public snackBarRef : MatSnackBarRef<SnackbarSimpleComponent>, @Inject(MAT_SNACK_BAR_DATA) public data: any) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  actionClicked() {\r\n    this.snackBarRef.dismiss();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/shared/components/snackbar-simple/snackbar-simple.component.ts","module.exports = \"<h2 mat-dialog-title>Delete team</h2>\\r\\n\\r\\n<mat-dialog-content>\\r\\n  <div fxLayout=\\\"column\\\" class=\\\"container__yes-no-dialog\\\">\\r\\n    {{data.message}}\\r\\n  </div>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"space-around center\\\">\\r\\n  <button mat-mini-fab color=\\\"warn\\\" mat-dialog-close=\\\"no\\\">\\r\\n    <mat-icon aria-label=\\\"No\\\">clear</mat-icon>\\r\\n  </button>\\r\\n  <button mat-mini-fab color=\\\"accent\\\" mat-dialog-close=\\\"yes\\\">\\r\\n    <mat-icon aria-label=\\\"Yes\\\">done</mat-icon>\\r\\n  </button>\\r\\n</mat-dialog-actions>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/shared/components/yes-no-dialog/yes-no-dialog.component.html\n// module id = ../../../../../src/app/modules/shared/components/yes-no-dialog/yes-no-dialog.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/shared/components/yes-no-dialog/yes-no-dialog.component.scss\n// module id = ../../../../../src/app/modules/shared/components/yes-no-dialog/yes-no-dialog.component.scss\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-yes-no-dialog',\r\n  templateUrl: './yes-no-dialog.component.html',\r\n  styleUrls: ['./yes-no-dialog.component.scss']\r\n})\r\nexport class YesNoDialogComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<YesNoDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n  \r\n  ngOnInit() { }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/shared/components/yes-no-dialog/yes-no-dialog.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  MatButtonModule, \r\n  MatCheckboxModule, \r\n  MatSnackBarModule, \r\n  MatChipsModule, \r\n  MatDatepickerModule,\r\n  MatSlideToggleModule,\r\n  MatMenuModule,\r\n  MatToolbarModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatCardModule, \r\n  MatNativeDateModule,\r\n  MatTabsModule,\r\n  MatExpansionModule,\r\n  MatTooltipModule,\r\n  MatDialogModule,\r\n  MatSelectModule,\r\n  MatButtonToggleModule,\r\n  MatRadioModule\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule, \r\n    MatButtonModule, \r\n    MatCheckboxModule, \r\n    MatSnackBarModule, \r\n    MatChipsModule, \r\n    MatDatepickerModule,\r\n    MatSlideToggleModule,\r\n    MatMenuModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatCardModule,\r\n    MatNativeDateModule,\r\n    MatTabsModule,\r\n    MatExpansionModule,\r\n    MatTooltipModule,\r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    MatButtonToggleModule,\r\n    MatRadioModule\r\n  ],\r\n  exports: [\r\n    MatButtonModule, \r\n    MatCheckboxModule, \r\n    MatSnackBarModule, \r\n    MatChipsModule, \r\n    MatDatepickerModule,\r\n    MatSlideToggleModule,\r\n    MatMenuModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatCardModule,\r\n    MatNativeDateModule,\r\n    MatTabsModule,\r\n    MatExpansionModule,\r\n    MatTooltipModule,\r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    MatButtonToggleModule,\r\n    MatRadioModule\r\n  ]\r\n})\r\nexport class CustomMaterialDesignModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/shared/custom-material-design.module.ts","import { Directive, Input, Attribute } from '@angular/core';\r\nimport { ValidatorFn, Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[equalvalidator]',\r\n  providers: [{provide: NG_VALIDATORS, useExisting: EqualValidatorDirective, multi: true}]\r\n})\r\nexport class EqualValidatorDirective implements Validator {\r\n  \r\n  constructor(@Attribute('equalvalidator') public equalFormControlName: string,\r\n      @Attribute('reverse') public reverse: string) {}\r\n  \r\n\r\n  private get isReverse() {\r\n    if (!this.reverse) {\r\n      return false;\r\n    }\r\n\r\n    return this.reverse === 'true' ? true : false;\r\n  }\r\n\r\n  validate(control : AbstractControl) : { [key : string] : any } {\r\n    const equalsFormControl = control.root.get(this.equalFormControlName);\r\n    if (equalsFormControl && equalsFormControl.value !== control.value) {\r\n      if (this.isReverse) {\r\n        equalsFormControl.setErrors({ 'equalvalidator' : true });\r\n      } else {\r\n        return { 'equalvalidator' : true };\r\n      }\r\n    } else if (equalsFormControl) {\r\n      //value is the same on both\r\n      if (this.reverse) {\r\n        delete equalsFormControl.errors['equalvalidator'];\r\n        if (!Object.keys(equalsFormControl.errors).length) {\r\n          equalsFormControl.setErrors(null);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/shared/directives/equal-validator.directive.ts","import { Directive, Input, Attribute } from '@angular/core';\r\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\nimport { validateConfig } from '@angular/router/src/config';\r\n\r\n@Directive({\r\n  selector: '[numberValidator]',\r\n  providers: [{provide: NG_VALIDATORS, useExisting: NumberValidatorDirective, multi: true}]\r\n})\r\nexport class NumberValidatorDirective {\r\n\r\n  \r\n\r\n  constructor(@Attribute('numberValidator') public validationType: string) {}\r\n\r\n  validate(control : AbstractControl) : { [key : string] : any } {\r\n    \r\n    let validationObj : any = {};\r\n    if (this.validationType) {\r\n      validationObj = JSON.parse(this.validationType);\r\n    }\r\n\r\n    //original pattern: ^[+-]?[0-9]{1,9}(?:\\.[0-9]{1,2})?$\r\n    let pattern = '^[+-]?[0-9]{1,';\r\n    pattern += !isNaN(validationObj.maxIntegerDigits) && validationObj.maxIntegerDigits > 1 ? validationObj.maxIntegerDigits : 9;\r\n    pattern += '}(?:\\.[0-9]{1,';\r\n    pattern += !isNaN(validationObj.maxFractionDigits) && validationObj.maxFractionDigits > 1 ? validationObj.maxFractionDigits : 2;\r\n    pattern += '})?$';\r\n\r\n    const numberRegExp = new RegExp(pattern);\r\n\r\n    const val: number = control.value;\r\n\r\n    if(!numberRegExp.test(val + '')) {\r\n      return {\"numberValidator\": true};\r\n    }\r\n    \r\n    let result : any = {};\r\n    if(!isNaN(validationObj.min) && val < validationObj.min) {\r\n      result.numberValidatorMin = true;\r\n    }\r\n    \r\n    if(!isNaN(validationObj.max) && val > validationObj.max) {\r\n      result.numberValidatorMax = true;\r\n    }\r\n\r\n    return Object.keys(result).length ? result : null;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/shared/directives/number-validator.directive.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MainNavigatorComponent } from './components/main-navigator/main-navigator.component';\r\nimport { CurrencyUnitComponent } from './components/currency-unit/currency-unit.component';\r\nimport { CustomMaterialDesignModule } from '../../modules/shared/custom-material-design.module';\r\nimport { YesNoDialogComponent } from './components/yes-no-dialog/yes-no-dialog.component';\r\nimport { SnackbarSimpleComponent } from './components/snackbar-simple/snackbar-simple.component';\r\nimport { EqualValidatorDirective } from './directives/equal-validator.directive';\r\nimport { NumberValidatorDirective } from './directives/number-validator.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    FlexLayoutModule,\r\n    CustomMaterialDesignModule\r\n  ],\r\n  declarations: [ \r\n    MainNavigatorComponent, \r\n    CurrencyUnitComponent, \r\n    YesNoDialogComponent, \r\n    SnackbarSimpleComponent, \r\n    EqualValidatorDirective, \r\n    NumberValidatorDirective \r\n  ],\r\n  exports: [ \r\n    MainNavigatorComponent, \r\n    CurrencyUnitComponent, \r\n    YesNoDialogComponent, \r\n    SnackbarSimpleComponent,\r\n    EqualValidatorDirective,\r\n    NumberValidatorDirective\r\n  ],\r\n  entryComponents: [\r\n    YesNoDialogComponent, //added as material doc suggest to allow AOT on this on the fly created class\r\n    SnackbarSimpleComponent\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/shared/shared.module.ts","module.exports = \"\\r\\n\\r\\n<h2 mat-dialog-title>Add team member</h2>\\r\\n\\r\\n<mat-dialog-content>\\r\\n  <div fxLayout=\\\"column\\\" class=\\\"container__add-person-to-team\\\">\\r\\n    <form class=\\\"form__container form__add-person-to-team\\\" #addPersonToTeamForm=\\\"ngForm\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n      \\r\\n      <section fxLayout=\\\"column\\\" class=\\\"form__fields\\\">\\r\\n        <div fxLayout=\\\"column\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- Member email -->\\r\\n          <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"tezt\\\" id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Member email\\\" \\r\\n                [(ngModel)]=\\\"model.email\\\"\\r\\n                required \\r\\n                email\\r\\n                #email=\\\"ngModel\\\">\\r\\n            <mat-error *ngIf=\\\"email.invalid && (email.dirty || email.touched) && email.errors.required\\\">Email is required</mat-error>\\r\\n            <mat-error *ngIf=\\\"email.invalid && (email.dirty || email.touched) && email.errors.email\\\">Email must be a valid email address</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </section>\\r\\n    </form>\\r\\n  </div>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"space-around center\\\">\\r\\n  <button mat-mini-fab color=\\\"warn\\\" mat-dialog-close>\\r\\n    <mat-icon aria-label=\\\"Cancel\\\">clear</mat-icon>\\r\\n  </button>\\r\\n  <button mat-mini-fab color=\\\"accent\\\" [mat-dialog-close]=\\\"email.value || null\\\" [disabled]=\\\"!addPersonToTeamForm.form.valid\\\">\\r\\n    <mat-icon aria-label=\\\"Add\\\">done</mat-icon>\\r\\n  </button>\\r\\n</mat-dialog-actions>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/teams/components/add-person-to-team-dialog/add-person-to-team-dialog.component.html\n// module id = ../../../../../src/app/modules/teams/components/add-person-to-team-dialog/add-person-to-team-dialog.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/teams/components/add-person-to-team-dialog/add-person-to-team-dialog.component.scss\n// module id = ../../../../../src/app/modules/teams/components/add-person-to-team-dialog/add-person-to-team-dialog.component.scss\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-add-person-to-team-dialog',\r\n  templateUrl: './add-person-to-team-dialog.component.html',\r\n  styleUrls: ['./add-person-to-team-dialog.component.scss']\r\n})\r\nexport class AddPersonToTeamDialogComponent implements OnInit {\r\n\r\n  model : any = { email : null };\r\n\r\n  constructor(public dialogRef: MatDialogRef<AddPersonToTeamDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/teams/components/add-person-to-team-dialog/add-person-to-team-dialog.component.ts","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"container__teams\\\">\\r\\n  <section fxLayoutWrap \\r\\n      fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" \\r\\n      fxLayoutGap.xs=\\\"10px\\\" \\r\\n      fxLayoutAlign=\\\"space-around center\\\" fxLayoutAlign.xs=\\\"none none\\\" >\\r\\n    \\r\\n    <div *ngIf=\\\"!teams.length && !getTeamsServiceRunning\\\" fxFlexAlign=\\\"center\\\">You are not member of any team yet.</div>\\r\\n    <!-- Team Cards -->\\r\\n    <mat-expansion-panel *ngFor=\\\"let team of teams; index as teamIndex\\\"\\r\\n        fxFlex.sm=\\\"45\\\" fxFlex.gt-sm=\\\"30\\\" \\r\\n        class=\\\"team-card\\\">\\r\\n      <mat-expansion-panel-header>\\r\\n        <mat-panel-title>\\r\\n          {{team.name}}\\r\\n        </mat-panel-title>\\r\\n        <mat-panel-description>\\r\\n          \\r\\n        </mat-panel-description>\\r\\n      </mat-expansion-panel-header>\\r\\n      \\r\\n      <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"team-card__content\\\">\\r\\n        <section *ngIf=\\\"team.description\\\" class=\\\"description\\\">\\r\\n          <p>{{team.description}}</p>\\r\\n        </section>\\r\\n\\r\\n        <section class=\\\"members\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n          <div *ngFor=\\\"let member of team.members\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" class=\\\"member\\\">\\r\\n            <img class=\\\"member__avatar\\\" [src]=\\\"member.avatar\\\"/>\\r\\n            <div class=\\\"member__info\\\" fxLayout=\\\"column\\\" [matTooltip]=\\\"member.email === team.admin.email ? 'Administrator' : ''\\\" matTooltipPosition=\\\"right\\\">\\r\\n              <p class=\\\"member__name\\\">{{member.name}} <mat-icon *ngIf=\\\"member.email === team.admin.email\\\" class=\\\"admin-icon\\\" aria-label=\\\"Admin\\\" >lock</mat-icon></p>\\r\\n              <p class=\\\"member__email\\\">{{member.email}}</p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </section>\\r\\n\\r\\n        <section *ngIf=\\\"team.admin.email === user.email\\\" class=\\\"actions\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end none\\\" fxLayoutGap=\\\"10px\\\">\\r\\n          <button *ngIf=\\\"!teamActionRunning[teamIndex]\\\" mat-mini-fab routerLink=\\\"/teams/edit/{{team.slug}}\\\" color=\\\"primary\\\" (click)=\\\"teamActionRunning[teamIndex] = true\\\">\\r\\n            <mat-icon aria-label=\\\"Edit team\\\">edit</mat-icon>\\r\\n          </button>\\r\\n\\r\\n          <button *ngIf=\\\"!teamActionRunning[teamIndex]\\\" mat-mini-fab color=\\\"warn\\\" (click)=\\\"openDeleteTeamDialog(teamIndex, team)\\\">\\r\\n            <mat-icon aria-label=\\\"Delete team\\\">delete</mat-icon>\\r\\n          </button>\\r\\n\\r\\n          <mat-progress-spinner *ngIf=\\\"teamActionRunning[teamIndex]\\\"\\r\\n            class=\\\"progress-spinner progress-spinner--delete-team\\\"\\r\\n            color=\\\"warn\\\"\\r\\n            [diameter]=\\\"40\\\" [strokeWidth]=\\\"7\\\"\\r\\n            mode=\\\"indeterminate\\\">\\r\\n          </mat-progress-spinner>\\r\\n        </section>\\r\\n      </div>\\r\\n      \\r\\n    </mat-expansion-panel>\\r\\n    <!-- EOF Team Cards -->\\r\\n  </section>\\r\\n\\r\\n  <mat-progress-bar *ngIf=\\\"getTeamsServiceRunning\\\"\\r\\n      fxFlexAlign=\\\"center\\\"\\r\\n      class=\\\"progress-bar progress-bar--get-teams\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      mode=\\\"indeterminate\\\">\\r\\n  </mat-progress-bar>\\r\\n\\r\\n  <section fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start end\\\">\\r\\n    <button mat-fab routerLink=\\\"create\\\" color=\\\"accent\\\">\\r\\n      <mat-icon class=\\\"mat-24\\\" aria-label=\\\"Create team\\\">group_add</mat-icon>\\r\\n    </button>\\r\\n  </section>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/teams/components/teams-dashboard/teams-dashboard.component.html\n// module id = ../../../../../src/app/modules/teams/components/teams-dashboard/teams-dashboard.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".container__teams .team-card {\\n  cursor: default; }\\n  .container__teams .team-card mat-panel-title {\\n    font-size: 18px; }\\n  .container__teams .team-card .team-card__content .description {\\n    margin-bottom: 20px;\\n    font-size: 13px; }\\n  .container__teams .team-card .team-card__content .members .member .member__avatar {\\n    border-radius: 50%;\\n    width: 40px;\\n    height: 40px;\\n    padding: 0 10px 0 0; }\\n  .container__teams .team-card .team-card__content .members .member .member__info .admin-icon {\\n    font-size: 14px;\\n    height: auto;\\n    width: auto; }\\n  .container__teams .team-card .team-card__content .members .member .member__info .member__email {\\n    font-size: 11px; }\\n  .container__teams .team-card .team-card__content .actions {\\n    margin: 0 8px 8px 0; }\\n\\n.container__teams .progress-bar--get-teams {\\n  width: 100%; }\\n\\n@media screen and (min-width: 600px) {\\n  .container__teams .team-card {\\n    margin-bottom: 10px; }\\n  .container__teams .progress-bar--get-teams {\\n    width: 300px; } }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/teams/components/teams-dashboard/teams-dashboard.component.scss\n// module id = ../../../../../src/app/modules/teams/components/teams-dashboard/teams-dashboard.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { MainNavigatorService } from '../../../shared/components/main-navigator/main-navigator.service';\r\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\r\nimport { TeamsService } from '../../teams.service';\r\nimport { AppService } from \"../../../../app.service\";\r\nimport { Team } from '../../models/team';\r\nimport { User } from '../../../users/models/user';\r\nimport { YesNoDialogComponent } from '../../../shared/components/yes-no-dialog/yes-no-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-teams-dashboard',\r\n  templateUrl: './teams-dashboard.component.html',\r\n  styleUrls: ['./teams-dashboard.component.scss']\r\n})\r\nexport class TeamsDashboardComponent implements OnInit {\r\n\r\n  user : User = null;\r\n  getTeamsServiceRunning : boolean = false;\r\n  teamActionRunning : boolean[] = [];\r\n  teams : Team[] = [];\r\n\r\n  constructor(private route : ActivatedRoute, private mainNavigatorService : MainNavigatorService, private teamsService : TeamsService,\r\n    private appService : AppService, private router : Router, public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    let methodTrace = `${this.constructor.name} > ngOnInit() > `; //for debugging\r\n    \r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: '/welcome', selected: false },\r\n      { displayName: 'Teams', url: null, selected: true }\r\n    ]);\r\n\r\n    //get authUser from resolver\r\n    this.route.data.subscribe((data: { authUser: User }) => {\r\n      this.user = data.authUser;\r\n    });\r\n    \r\n    if (!this.teams.length) {\r\n      this.getTeams();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get my teams from server\r\n   */\r\n  getTeams() {\r\n    const methodTrace = `${this.constructor.name} > getTeams() > `; //for debugging\r\n\r\n    this.teams = [];\r\n    this.getTeamsServiceRunning = true;\r\n\r\n    this.teamsService.getTeams(this.user.email).subscribe(\r\n      (teams : Team[]) => {\r\n        let index = 0;\r\n        this.teams = teams;\r\n        for (let item of teams) {\r\n          this.teamActionRunning[index] = false;\r\n          index += 1;\r\n        }\r\n\r\n        this.getTeamsServiceRunning = false;\r\n      },\r\n      (error : any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n        } else {\r\n          this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n        }\r\n\r\n        this.getTeamsServiceRunning = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  openDeleteTeamDialog(index : number, team : Team = null) {\r\n    const methodTrace = `${this.constructor.name} > openDeleteTeamDialog() > `; //for debugging\r\n    \r\n    if (!team) {\r\n      this.appService.consoleLog('error', `${methodTrace} Team is required to delete.`);\r\n      return false;\r\n    }\r\n\r\n    this.teamActionRunning[index] = true;\r\n    let yesNoDialogRef = this.dialog.open(YesNoDialogComponent, {\r\n      width: '250px',\r\n      data: { message : `Are you sure you want to delete forever the team \"${team.name}\"?`}\r\n    });\r\n\r\n    yesNoDialogRef.afterClosed().subscribe(result => {\r\n      if (result === 'yes') {\r\n        this.delete(index, team);\r\n      } else {\r\n        this.teamActionRunning[index] = false;\r\n      }\r\n    });\r\n\r\n    return false;\r\n  }\r\n\r\n  delete(index : number, team : Team = null) {\r\n    const methodTrace = `${this.constructor.name} > getTeams() > `; //for debugging\r\n\r\n    this.teamActionRunning[index] = true;\r\n\r\n    this.teamsService.delete(team.slug, this.user.email).subscribe(\r\n      (data : any) => {\r\n        if (data && data.removed > 0) {\r\n          this.teams.splice(index, 1);\r\n          this.teamActionRunning.splice(index, 1);\r\n          this.appService.showResults(`Team \"${team.name}\" successfully removed!`, 'success');\r\n        } else {\r\n          this.appService.showResults(`Team \"${team.name}\" could not be removed, please try again.`, 'error');\r\n        }\r\n\r\n        this.teamActionRunning[index] = false;\r\n      },\r\n      (error : any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n        } else {\r\n          this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n        }\r\n\r\n        this.teamActionRunning[index] = false;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/teams/components/teams-dashboard/teams-dashboard.component.ts","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"container__edit-team\\\">\\r\\n  <form *ngIf=\\\"!getTeamServiceRunning\\\" \\r\\n      class=\\\"form__container form__edit-team\\\" (ngSubmit)=\\\"editMode ? onUpdate() : onSubmit()\\\" #editTeamForm=\\\"ngForm\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n    \\r\\n    <section fxLayout=\\\"column\\\" class=\\\"form__fields\\\">\\r\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap.gt-xs=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"none end\\\" class=\\\"form__fields__row\\\">\\r\\n        <!-- Team name -->\\r\\n        <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n          <input matInput type=\\\"tezt\\\" id=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Team name\\\" \\r\\n              [(ngModel)]=\\\"model.name\\\" \\r\\n              value=\\\"model.name\\\"\\r\\n              required\\r\\n              minlength=\\\"4\\\"\\r\\n              #name=\\\"ngModel\\\">\\r\\n          <mat-error *ngIf=\\\"name.invalid && (name.dirty || name.touched) && name.errors.required\\\">Name is required</mat-error>\\r\\n          <mat-error *ngIf=\\\"name.invalid && (name.dirty || name.touched) && name.errors.minlength\\\">Value must be longer than 3 characters</mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <!-- Description -->\\r\\n        <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n          <textarea matInput id=\\\"description\\\" name=\\\"description\\\" placeholder=\\\"Description\\\"\\r\\n              [(ngModel)]=\\\"model.description\\\" \\r\\n              value=\\\"model.description\\\"\\r\\n              #description=\\\"ngModel\\\"></textarea>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </section>\\r\\n\\r\\n    <section *ngIf=\\\"editMode\\\" class=\\\"members\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutWrap>\\r\\n      <mat-card *ngFor=\\\"let member of team.members; index as memberIndex\\\" class=\\\"member\\\" [class.not-saved-yet]=\\\"!member.name && !member.avatar\\\">\\r\\n        <mat-card-content fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"none center\\\">\\r\\n          \\r\\n          <img *ngIf=\\\"member.avatar\\\" class=\\\"member__avatar\\\" [src]=\\\"member.avatar\\\"/>\\r\\n          <mat-icon *ngIf=\\\"!member.avatar\\\" class=\\\"member__avatar member__avatar--default\\\">account_circle</mat-icon>\\r\\n          \\r\\n          <div class=\\\"member__info\\\" fxLayout=\\\"column\\\" [matTooltip]=\\\"member.email === team.admin.email ? 'Administrator' : ''\\\" matTooltipPosition=\\\"right\\\">\\r\\n            <p *ngIf=\\\"member.name\\\" class=\\\"member__name\\\">\\r\\n              {{member.name}}\\r\\n              <mat-icon *ngIf=\\\"member.email === team.admin.email\\\" class=\\\"icon__admin\\\" aria-label=\\\"Admin\\\" >lock</mat-icon>\\r\\n            </p>\\r\\n            <p class=\\\"member__email\\\">{{member.email}}</p>\\r\\n          </div>\\r\\n\\r\\n          <mat-icon *ngIf=\\\"member.email !== team.admin.email\\\" matTooltip=\\\"Remove\\\" class=\\\"icon__remove-member\\\" (click)=\\\"removeMember(memberIndex)\\\">clear</mat-icon>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </section>\\r\\n\\r\\n    <section *ngIf=\\\"editMode\\\" class=\\\"add-members\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start end\\\">\\r\\n      <button mat-fab color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"openAddPersonDialog()\\\">\\r\\n        <mat-icon aria-label=\\\"Add new member\\\">person_add</mat-icon>\\r\\n      </button>\\r\\n    </section>\\r\\n\\r\\n    <section fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"center center\\\" class=\\\"form__actions form__actions--edit-team\\\">\\r\\n      <button *ngIf=\\\"!editTeamServiceRunning\\\" \\r\\n          class=\\\"form__action mat-raised-button\\\" \\r\\n          mat-raised-button \\r\\n          type=\\\"submit\\\" \\r\\n          color=\\\"accent\\\" \\r\\n          [disabled]=\\\"!editTeamForm.form.valid\\\">Save</button>\\r\\n      \\r\\n      <mat-progress-bar *ngIf=\\\"editTeamServiceRunning\\\"\\r\\n          class=\\\"progress-bar progress-bar--edit-team\\\"\\r\\n          color=\\\"primary\\\"\\r\\n          mode=\\\"indeterminate\\\">\\r\\n      </mat-progress-bar>\\r\\n    </section>\\r\\n    \\r\\n  </form>\\r\\n\\r\\n  <mat-progress-bar *ngIf=\\\"getTeamServiceRunning\\\"\\r\\n      fxFlexAlign=\\\"center\\\"\\r\\n      class=\\\"progress-bar progress-bar--get-team\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      mode=\\\"indeterminate\\\">\\r\\n  </mat-progress-bar>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/teams/components/teams-edit/teams-edit.component.html\n// module id = ../../../../../src/app/modules/teams/components/teams-edit/teams-edit.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"form .form__actions .progress-bar {\\n  width: 100%; }\\n\\n.form__edit-team .form__actions--edit-team {\\n  margin: 20px 0; }\\n\\n.members .member {\\n  margin-bottom: 10px;\\n  padding: 14px;\\n  border-radius: 50px;\\n  cursor: default; }\\n  .members .member .member__avatar {\\n    border-radius: 50%;\\n    width: 40px;\\n    height: 40px; }\\n  .members .member .member__info .icon__admin {\\n    font-size: 14px;\\n    height: auto;\\n    width: auto; }\\n  .members .member .member__info .member__email {\\n    font-size: 11px; }\\n  .members .member .icon__remove-member {\\n    font-size: 16px;\\n    height: auto;\\n    width: auto;\\n    cursor: pointer; }\\n  .members .member.not-saved-yet .member__avatar--default {\\n    font-size: 40px;\\n    color: #f44336; }\\n\\n.progress-bar--get-team {\\n  width: 100%; }\\n\\n@media screen and (min-width: 600px) {\\n  form .form__actions .progress-bar {\\n    width: 88px; }\\n  .progress-bar--get-team {\\n    width: 300px; } }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/teams/components/teams-edit/teams-edit.component.scss\n// module id = ../../../../../src/app/modules/teams/components/teams-edit/teams-edit.component.scss\n// module chunks = main","import { Component, OnInit, OnDestroy} from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { MainNavigatorService } from '../../../shared/components/main-navigator/main-navigator.service';\r\nimport { AddPersonToTeamDialogComponent } from '../../components/add-person-to-team-dialog/add-person-to-team-dialog.component';\r\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\r\nimport { User } from '../../../users/models/user';\r\nimport { TeamsService } from '../../teams.service';\r\nimport { AppService } from \"../../../../app.service\";\r\nimport { Team } from '../../models/team';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n@Component({\r\n  selector: 'app-teams-edit',\r\n  templateUrl: './teams-edit.component.html',\r\n  styleUrls: ['./teams-edit.component.scss']\r\n})\r\nexport class TeamsEditComponent implements OnInit, OnDestroy {\r\n\r\n  editMode : boolean = false;\r\n  user : User = null;\r\n  team : Team = null;\r\n  editTeamServiceRunning : boolean = false;\r\n  getTeamServiceRunning : boolean = false;\r\n  model : any = {\r\n    name : null,\r\n    description : null,\r\n    email : null, //user email for api check\r\n    members : []\r\n  };\r\n  slug : string = null;\r\n  subscription : Subscription = new Subscription();\r\n\r\n  constructor(private route : ActivatedRoute, private mainNavigatorService : MainNavigatorService, private teamsService : TeamsService,\r\n      private appService : AppService, private router : Router, public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    let methodTrace = `${this.constructor.name} > ngOnInit() > `; //for debugging\r\n\r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: '/welcome', selected: false },\r\n      { displayName: 'Teams', url: '/teams', selected: false }\r\n    ]);\r\n\r\n    //generates a user source object from authUser from resolver\r\n    const user$ = this.route.data.map((data: { authUser: User }) => data.authUser);\r\n    \r\n    //generates an investment id source from id parameter in url\r\n    const slug$ = this.route.paramMap.map((params: ParamMap) => params.get('slug'));\r\n\r\n    //combine user$ and id$ sources into one object and start listen to it for changes\r\n    this.subscription = user$.combineLatest(slug$, (user, slug) => { \r\n      return { user, teamSlug : slug } \r\n    }).subscribe(data => {\r\n      this.user = data.user;\r\n      this.model.email = data.user.email;\r\n\r\n      this.editTeamServiceRunning = false;\r\n      this.getTeamServiceRunning = false;\r\n      \r\n      if (!data.teamSlug) {\r\n        //we are creating a new team\r\n        this.slug = null;\r\n        this.editMode = false;\r\n        this.mainNavigatorService.appendLink({ displayName: 'Create Team', url: '', selected : true });\r\n      } else {\r\n        if (this.slug) {\r\n          //if this is true means the user updated the name and we refresh the page to update the slug in the url\r\n          //in this case we don't want to append the edit team link to the navigation component because it is already there.\r\n        } else {\r\n          this.mainNavigatorService.appendLink({ displayName: 'Edit Team', url: '', selected : true });\r\n        }\r\n        //we are editing an existing investment\r\n        this.slug = data.teamSlug; //the new slug\r\n        this.editMode = true;\r\n        \r\n        this.getTeam(data.teamSlug); //get data\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    const methodTrace = `${this.constructor.name} > ngOnDestroy() > `; //for debugging\r\n\r\n    //this.appService.consoleLog('info', `${methodTrace} Component destroyed.`);\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onSubmit() {\r\n    const methodTrace = `${this.constructor.name} > onSubmit() > `; //for debugging\r\n\r\n    this.editTeamServiceRunning = true;\r\n    //call the team create service\r\n    const newSubscription = this.teamsService.create(this.model).subscribe(\r\n      (data : any) => {\r\n        if (data && data.slug) {\r\n          this.appService.showResults(`Team ${data.name} successfully created!`, 'success');\r\n          this.router.navigate(['/teams/edit', data.slug]);\r\n        } else {\r\n          this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`);\r\n          this.editTeamServiceRunning = false;\r\n        }\r\n      },\r\n      (error : any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error with the create/edit team service.`, error);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error with the team services, please try again in a few minutes.`, 'error');\r\n        }\r\n\r\n        this.editTeamServiceRunning = false;\r\n      }\r\n    );\r\n\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n  onUpdate() {\r\n    const methodTrace = `${this.constructor.name} > onUpdate() > `; //for debugging\r\n    \r\n    this.editTeamServiceRunning = true;\r\n\r\n    //add slug and members to service payload\r\n    this.model.slug = this.slug;\r\n    this.model.members = []; //reset the members array\r\n    for (let member of this.team.members) {\r\n      this.model.members.push(member.email);\r\n    }\r\n\r\n    //TODO check the new members are not duplicated, especially the admin\r\n\r\n    //call the team update service\r\n    const newSubscription = this.teamsService.update(this.model).subscribe(\r\n      (data : any) => {\r\n        if (data && data.team && data.team.slug) {\r\n          let messages : any[] = [\r\n            {\r\n              message : `Team \"${data.team.name}\" successfully updated!`,\r\n              type : 'success'\r\n            }\r\n          ];\r\n\r\n          if (data.usersNotRegistered.length) {\r\n            //handle not registered users\r\n            let message = {\r\n              message : `The following emails added to the team are not registered users in AtomiCoconut: `,\r\n              duration : 8000\r\n            };\r\n            \r\n            for (const email of data.usersNotRegistered) {\r\n              message.message += `\"${email}\", `;\r\n            }\r\n\r\n            message.message = message.message.slice(0, -2); //remove last comma char\r\n            message.message += '. We sent them an email to create an account. Once they do it try to add them again.';\r\n\r\n            messages.push(message);\r\n          }\r\n\r\n          this.appService.showManyResults(messages);\r\n          //TODO redirect to the new team slug name if changed\r\n          if (this.slug !== data.team.slug) {\r\n            //this means that the team name was update and therefore the slug too\r\n            this.router.navigate(['/teams/edit', data.team.slug]); //go home \r\n          } else {\r\n            this.populateTeam(data.team);\r\n            this.editTeamServiceRunning = false;  \r\n          }\r\n        } else {\r\n          this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`);\r\n          this.editTeamServiceRunning = false;\r\n        }\r\n      },\r\n      (error : any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n        } else {\r\n          this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n        }\r\n\r\n        this.editTeamServiceRunning = false;\r\n      }\r\n    );\r\n\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n  /**\r\n   * Get a team from server based on the slug provided\r\n   * @param {string} slug \r\n   */\r\n  getTeam(slug : string) {\r\n    const methodTrace = `${this.constructor.name} > getTeam() > `; //for debugging\r\n\r\n    if (!slug) {\r\n      this.appService.showResults(`Invalid team ID`, 'error');\r\n      this.appService.consoleLog('error', `${methodTrace} Slug parameter must be provided, but was: `, slug);\r\n      return false;\r\n    }\r\n\r\n    this.getTeamServiceRunning = true;\r\n\r\n    const newSubscription = this.teamsService.getMyTeamBySlug(this.user.email, slug).subscribe(\r\n      (data : any) => {\r\n        if (data && data.slug) {\r\n          this.populateTeam(data);\r\n        } else {\r\n          this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`);\r\n        }\r\n\r\n        this.getTeamServiceRunning = false;\r\n      },\r\n      (error : any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n        } else if (error.codeno === 462) {\r\n          this.appService.showResults(error.msg, 'error');\r\n          this.router.navigate(['/welcome']);\r\n        } else {\r\n          this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n        }\r\n\r\n        this.getTeamServiceRunning = false;\r\n      }\r\n    );\r\n\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n  /**\r\n   * Populates the team and model with a team object coming from a service\r\n   * @param {*} team . Team object retrieved from a service\r\n   */\r\n  populateTeam(team : any) {\r\n    //populate admin\r\n    const admin = new User(team.admin.name, team.admin.email, team.admin.gravatar);\r\n    //populate members\r\n    let members = [];\r\n    for (let member of team.members) {\r\n      const newMember = new User(member.name, member.email, member.gravatar);\r\n      members.push(newMember);\r\n    }\r\n    //create team\r\n    this.team = new Team(team.name, team.description || null, team.slug, admin, members);\r\n    //populate the model\r\n    this.model.name = this.team.name;\r\n    this.model.description = this.team.description;\r\n  }\r\n\r\n  openAddPersonDialog() {\r\n    let addPersonDialogRef = this.dialog.open(AddPersonToTeamDialogComponent, {\r\n      width: '250px',\r\n      data: {}\r\n    });\r\n\r\n    const newSubscription = addPersonDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        const newMember = new User('', result);\r\n        this.team.members.push(newMember);\r\n      }\r\n    });\r\n\r\n    this.subscription.add(newSubscription);\r\n\r\n    return false;\r\n  }\r\n\r\n  removeMember(index : number) {\r\n    this.team.members.splice(index, 1);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/teams/components/teams-edit/teams-edit.component.ts","import { User } from '../../users/models/user';\r\n\r\nexport class Team {\r\n\r\n  name : string;\r\n  description : string;\r\n  slug : string;\r\n  members : User[];\r\n  admin : User;\r\n\r\n  constructor(name : string = null, description : string = null, slug : string = null, admin : User = null, members : User[] = null) {\r\n    this.name = name;\r\n    this.slug = slug;\r\n    this.description = description;\r\n    this.admin = admin;\r\n    this.members = members;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/teams/models/team.ts","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TeamsDashboardComponent } from './components/teams-dashboard/teams-dashboard.component';\r\nimport { TeamsEditComponent } from './components/teams-edit/teams-edit.component';\r\nimport { AuthResolver } from '../../auth-resolver.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path : 'teams',\r\n    children : [\r\n      { \r\n        path : 'create', \r\n        component : TeamsEditComponent,\r\n        resolve : {\r\n          authUser : AuthResolver\r\n        } \r\n      },\r\n      { \r\n        path : 'edit/:slug', \r\n        component : TeamsEditComponent,\r\n        resolve : {\r\n          authUser : AuthResolver\r\n        } \r\n      },\r\n      { \r\n        path : '', \r\n        pathMatch : 'full',\r\n        component : TeamsDashboardComponent,\r\n        resolve : {\r\n          authUser : AuthResolver\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TeamsRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/teams/teams-routing.module.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { TeamsRoutingModule } from './teams-routing.module';\r\nimport { TeamsDashboardComponent } from './components/teams-dashboard/teams-dashboard.component';\r\nimport { CustomMaterialDesignModule } from '../../modules/shared/custom-material-design.module';\r\nimport { TeamsEditComponent } from './components/teams-edit/teams-edit.component';\r\nimport { TeamsService } from './teams.service';\r\nimport { AddPersonToTeamDialogComponent } from './components/add-person-to-team-dialog/add-person-to-team-dialog.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TeamsRoutingModule,\r\n    CustomMaterialDesignModule,\r\n    FormsModule,\r\n    FlexLayoutModule\r\n  ],\r\n  declarations: [\r\n    TeamsDashboardComponent, \r\n    TeamsEditComponent, \r\n    AddPersonToTeamDialogComponent\r\n  ],\r\n  entryComponents: [\r\n    AddPersonToTeamDialogComponent //added as material doc suggest to allow AOT on this on the fly created class\r\n  ],\r\n  providers : [ TeamsService ]\r\n})\r\nexport class TeamsModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/teams/teams.module.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport { HttpParams } from '@angular/common/http';\r\n\r\nimport {Observable} from \"rxjs/Rx\";\r\nimport {environment} from \"../../../environments/environment\";\r\nimport {AppService} from \"../../app.service\";\r\nimport { Team } from './models/team';\r\nimport { User } from '../users/models/user';\r\n\r\n\r\n@Injectable()\r\nexport class TeamsService {\r\n\r\n  private serverHost : string = environment.apiHost + '/api/teams';\r\n  private headers = new Headers({'Content-Type': 'application/json'});\r\n\r\n  constructor(private http : Http, private appService : AppService) {}\r\n\r\n  /**\r\n   * Server call to Create a new team in the system \r\n   * @param postData \r\n   */\r\n  create(postData : any = {}) : Observable<any> {\r\n    return this.http.post(`${this.serverHost}/create`, postData, { headers : this.headers })\r\n        .map(this.appService.extractData)\r\n        .catch(this.appService.handleError);\r\n  } \r\n  \r\n  /**\r\n   * Server call to Update a team in the system \r\n   * @param postData \r\n   */\r\n  update(postData : any = {}) : Observable<any> {\r\n    return this.http.post(`${this.serverHost}/update`, postData, { headers : this.headers })\r\n        .map(this.appService.extractData)\r\n        .catch(this.appService.handleError);\r\n  } \r\n\r\n  /**\r\n   * Server call to Get a team from the server based on its slug\r\n   * @param {string} slug . The team slug\r\n   */\r\n  getMyTeamBySlug(email : string, slug : string) : Observable<any> {\r\n    let methodTrace = `${this.constructor.name} > getMyTeamBySlug() > `; //for debugging\r\n\r\n    if (!slug) {\r\n      this.appService.consoleLog('error', `${methodTrace} Slug parameter must be provided, but was: `, slug);\r\n      return null;\r\n    }\r\n\r\n    return this.http.get(`${this.serverHost}/getMyTeamBySlug?${this.appService.getParamsAsQuerystring({slug, email})}`)\r\n        .map(this.appService.extractData)\r\n        .catch(this.appService.handleError);\r\n  }\r\n\r\n  /**\r\n   * Server call to Get all the teams for the current user from the server\r\n   * @param {string} slug . The team slug\r\n   */\r\n  getTeams(email : string) : Observable<any> {\r\n    let methodTrace = `${this.constructor.name} > getTeams() > `; //for debugging\r\n\r\n    const teamsData$ = this.http.get(`${this.serverHost}/getAll?${this.appService.getParamsAsQuerystring({email})}`)\r\n        .map(this.appService.extractData)\r\n        .catch(this.appService.handleError);\r\n    \r\n    return teamsData$.switchMap((teamsData) => {\r\n      let teams : Team[] = [];\r\n\r\n      if (teamsData && teamsData instanceof Array) {\r\n        for (let item of teamsData) {\r\n          let admin = null;\r\n          let members = [];\r\n          for (let member of item.members) {\r\n            const newMember = new User(member.name, member.email, member.gravatar);\r\n            members.push(newMember);\r\n            if (member.isAdmin) {\r\n              admin = newMember;\r\n            }\r\n          }\r\n          teams.push(new Team(item.name, item.description || null, item.slug, admin, members));\r\n        }\r\n      } else {\r\n        this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`);\r\n      }\r\n\r\n      return Observable.of(teams);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Server call to Get all the teams for the current user from the server\r\n   * @param {string} slug . The team slug\r\n   * @param {string} email . The current user email.\r\n   */\r\n  delete(slug : string, email : string) : Observable<any> {\r\n    let methodTrace = `${this.constructor.name} > delete() > `; //for debugging\r\n\r\n    return this.http.delete(`${this.serverHost}/delete/${slug}`, {headers : this.headers, body : { email } } )\r\n        .map(this.appService.extractData)\r\n        .catch(this.appService.handleError);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/teams/teams.service.ts","module.exports = \"<form class=\\\"form__container form__account-finance\\\" (ngSubmit)=\\\"onSubmit()\\\" #financeForm=\\\"ngForm\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" >\\r\\n\\r\\n  <section fxLayout=\\\"column\\\" fxLayoutAlign.gt-xs=\\\"center center\\\" class=\\\"form__fields\\\">\\r\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap.gt-xs=\\\"10px\\\" class=\\\"form__fields__row\\\">\\r\\n      <!-- Active income -->\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n        <currency-unit fxFlex=\\\"50px\\\"\\r\\n            [id]=\\\"'annualIncomeUnit'\\\" \\r\\n            [value]=\\\"model.annualIncomeUnit\\\"\\r\\n            [view]=\\\"'narrow'\\\"\\r\\n            (newValue)=\\\"onCurrencyUnitChange($event)\\\">\\r\\n        </currency-unit>\\r\\n        \\r\\n        <mat-form-field fxFlex fxFlex.gt-xs=\\\"300px\\\" class=\\\"form__field\\\">\\r\\n          <input matInput type=\\\"number\\\" id=\\\"annualIncome\\\" name=\\\"annualIncome\\\" placeholder=\\\"Annual Income\\\"\\r\\n              [(ngModel)]=\\\"model.annualIncome\\\" \\r\\n              value=\\\"model.annualIncome\\\"\\r\\n              numberValidator \\r\\n              #annualIncome=\\\"ngModel\\\">\\r\\n          <mat-hint align=\\\"start\\\">Annual income amount pre-tax.</mat-hint>\\r\\n          <mat-error *ngIf=\\\"annualIncome.invalid && (annualIncome.dirty || annualIncome.touched) && annualIncome.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n        </mat-form-field>\\r\\n        <!-- <pre>{{annualIncome.errors | json}}</pre> -->\\r\\n      </div>\\r\\n\\r\\n      <!-- Tax rate -->\\r\\n      <mat-form-field fxFlex fxFlex.gt-xs=\\\"150px\\\" class=\\\"form__field\\\">\\r\\n        <input matInput type=\\\"number\\\" id=\\\"incomeTaxRate\\\" name=\\\"incomeTaxRate\\\" placeholder=\\\"Income tax rate (%)\\\" \\r\\n            [(ngModel)]=\\\"model.incomeTaxRate\\\" \\r\\n            value=\\\"model.incomeTaxRate\\\"\\r\\n            numberValidator='{\\\"min\\\": 0, \\\"max\\\": 100}' \\r\\n            #incomeTaxRate=\\\"ngModel\\\">\\r\\n\\r\\n        <mat-error *ngIf=\\\"incomeTaxRate.invalid && (incomeTaxRate.dirty || incomeTaxRate.touched) && incomeTaxRate.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n        <mat-error *ngIf=\\\"incomeTaxRate.invalid && (incomeTaxRate.dirty || incomeTaxRate.touched) && incomeTaxRate.errors.numberValidatorMin\\\">Min value must be greater or equal than 0</mat-error>\\r\\n        <mat-error *ngIf=\\\"incomeTaxRate.invalid && (incomeTaxRate.dirty || incomeTaxRate.touched) && incomeTaxRate.errors.numberValidatorMax\\\">Max value must be less or equal than 100</mat-error>\\r\\n      </mat-form-field>\\r\\n      <!-- <pre>{{incomeTaxRate.errors | json}}</pre> -->\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap.gt-xs=\\\"10px\\\" class=\\\"form__fields__row\\\">\\r\\n      <!-- Savings -->\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n        <currency-unit fxFlex=\\\"50px\\\"\\r\\n            [id]=\\\"'savingsUnit'\\\" \\r\\n            [value]=\\\"model.savingsUnit\\\"\\r\\n            [view]=\\\"'narrow'\\\"\\r\\n            (newValue)=\\\"onCurrencyUnitChange($event)\\\">\\r\\n        </currency-unit>\\r\\n        \\r\\n        <mat-form-field fxFlex fxFlex.gt-xs=\\\"300px\\\" class=\\\"form__field\\\">\\r\\n          <input matInput type=\\\"number\\\" id=\\\"savings\\\" name=\\\"savings\\\" placeholder=\\\"Current savings\\\" \\r\\n              [(ngModel)]=\\\"model.savings\\\" \\r\\n              value=\\\"model.savings\\\"\\r\\n              numberValidator\\r\\n              #savings=\\\"ngModel\\\">\\r\\n\\r\\n          <mat-error *ngIf=\\\"savings.invalid && (savings.dirty || savings.touched) && savings.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex fxFlex.gt-xs=\\\"150px\\\" class=\\\"form__spacer\\\"></div>\\r\\n    </div>\\r\\n  </section>\\r\\n\\r\\n  <section fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"center center\\\" class=\\\"form__actions form__actions--account-finance\\\">\\r\\n    <button *ngIf=\\\"!accountFinanceServiceRunning\\\" \\r\\n        class=\\\"form__action mat-raised-button\\\" \\r\\n        mat-raised-button \\r\\n        type=\\\"submit\\\" \\r\\n        color=\\\"accent\\\" \\r\\n        [disabled]=\\\"!financeForm.form.valid\\\">Save</button>\\r\\n    \\r\\n    <mat-progress-bar *ngIf=\\\"accountFinanceServiceRunning\\\"\\r\\n        class=\\\"progress-bar progress-bar--account-finance\\\"\\r\\n        color=\\\"primary\\\"\\r\\n        mode=\\\"indeterminate\\\">\\r\\n    </mat-progress-bar>\\r\\n  </section>\\r\\n\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/account-finance-info/account-finance-info.component.html\n// module id = ../../../../../src/app/modules/users/components/account-finance-info/account-finance-info.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"form .form__actions .progress-bar {\\n  width: 100%; }\\n\\n@media screen and (min-width: 600px) {\\n  form .form__actions .progress-bar {\\n    width: 88px; } }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/account-finance-info/account-finance-info.component.scss\n// module id = ../../../../../src/app/modules/users/components/account-finance-info/account-finance-info.component.scss\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\r\nimport { MatSelectChange } from '@angular/material';\r\nimport { User } from '../../models/user';\r\nimport { AccountFinance } from '../../models/account-finance';\r\nimport { UsersService } from '../../users.service';\r\nimport { AppService } from '../../../../app.service';\r\nimport { CurrencyExchangeService } from '../../../../currency-exchange.service';\r\n\r\n@Component({\r\n  selector: 'account-finance-info',\r\n  templateUrl: './account-finance-info.component.html',\r\n  styleUrls: ['./account-finance-info.component.scss']\r\n})\r\nexport class AccountFinanceInfoComponent implements OnInit {\r\n\r\n  @Input() user : User;\r\n  model : any = { \r\n    email : null, \r\n    annualIncome : null,\r\n    annualIncomeUnit : null,\r\n    incomeTaxRate : null, \r\n    savings : null,\r\n    savingsUnit : null\r\n  };\r\n  accountFinanceServiceRunning : boolean = false;\r\n\r\n  \r\n  constructor(private usersService : UsersService, private appService : AppService, public currencyExchangeService : CurrencyExchangeService) {}\r\n\r\n  ngOnInit() {\r\n    const methodTrace = `${this.constructor.name} > ngOnInit() > `; //for debugging\r\n    \r\n    this.model.email = this.user.email;\r\n    this.model.annualIncomeUnit = this.user.currency;\r\n    this.model.savingsUnit = this.user.currency;\r\n\r\n    if (this.user.financialInfo) {\r\n      Object.assign(this.model, {\r\n        annualIncome : this.user.financialInfo.annualIncome,\r\n        annualIncomeUnit : this.user.financialInfo.annualIncomeUnit,\r\n        incomeTaxRate : this.user.financialInfo.incomeTaxRate,\r\n        savings : this.user.financialInfo.savings,\r\n        savingsUnit : this.user.financialInfo.savingsUnit\r\n      });\r\n    }\r\n  }\r\n\r\n  onCurrencyUnitChange($event : MatSelectChange) {\r\n    if ($event.source.id === 'annualIncomeUnit') {\r\n      this.model.annualIncomeUnit = $event.value;\r\n    } else if ($event.source.id === 'savingsUnit') {\r\n      this.model.savingsUnit = $event.value;\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    const methodTrace = `${this.constructor.name} > onSubmit() > `; //for debugging\r\n\r\n    this.accountFinanceServiceRunning = true;\r\n\r\n    //call the account service\r\n    this.usersService.updateFinancialInfo(this.model).subscribe(\r\n      (data : any) => {\r\n        if (data === null) {\r\n          let user = this.usersService.getUser();\r\n          user.financialInfo = new AccountFinance(this.model.annualIncome, this.model.annualIncomeUnit, \r\n            this.model.savings, this.model.savingsUnit, this.model.incomeTaxRate);\r\n          this.usersService.setUser(user);\r\n          this.appService.showResults(`Your personal information was successfully updated!.`, 'success');\r\n        } else {\r\n          this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`);\r\n        }\r\n\r\n        this.accountFinanceServiceRunning = false;\r\n      },\r\n      (error : any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n        } else {\r\n          this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n        }\r\n\r\n        this.accountFinanceServiceRunning = false;\r\n      }\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/account-finance-info/account-finance-info.component.ts","module.exports = \"<form class=\\\"form__container form__account-personal\\\" #personalInfoForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" >\\r\\n  \\r\\n    <section fxLayout=\\\"column\\\" fxLayoutAlign.gt-xs=\\\"center center\\\" class=\\\"form__fields\\\">\\r\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap.gt-xs=\\\"10px\\\" class=\\\"form__fields__row\\\">\\r\\n        \\r\\n        <!-- Birthday -->\\r\\n        <mat-form-field fxFlex fxFlex.gt-xs=\\\"300px\\\" class=\\\"form__field\\\">\\r\\n          <input \\r\\n              placeholder=\\\"Day of birth\\\"\\r\\n              id=\\\"birthday\\\"\\r\\n              name=\\\"birthday\\\"\\r\\n              readonly\\r\\n              required\\r\\n              #birthday=\\\"ngModel\\\"\\r\\n              matInput \\r\\n              [(ngModel)]=\\\"model.birthday\\\" \\r\\n              [matDatepicker]=\\\"pickerBirthday\\\"\\r\\n              (click)=\\\"pickerBirthday.open()\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"pickerBirthday\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker [touchUi]=\\\"utilService.isGtSm() ? false : true\\\" #pickerBirthday startView=\\\"year\\\" [startAt]=\\\"startAt\\\"></mat-datepicker>\\r\\n          <mat-error *ngIf=\\\"birthday.invalid && (birthday.dirty || birthday.touched) && birthday.errors.matDatepickerParse\\\">Day of birth is invalid or not follow the pattern \\\"mm/dd/yyyy\\\"</mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </section>\\r\\n    \\r\\n    <section fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"center center\\\" class=\\\"form__actions form__actions--account-personal\\\">\\r\\n      <button *ngIf=\\\"!accountPersonalServiceRunning\\\" \\r\\n          class=\\\"form__action mat-raised-button\\\" \\r\\n          mat-raised-button \\r\\n          type=\\\"submit\\\" \\r\\n          color=\\\"accent\\\" \\r\\n          [disabled]=\\\"!personalInfoForm.form.valid\\\">Save</button>\\r\\n      \\r\\n      <mat-progress-bar *ngIf=\\\"accountPersonalServiceRunning\\\"\\r\\n          class=\\\"progress-bar progress-bar--account-personal\\\"\\r\\n          color=\\\"primary\\\"\\r\\n          mode=\\\"indeterminate\\\">\\r\\n      </mat-progress-bar>\\r\\n    </section>\\r\\n  </form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/account-personal-info/account-personal-info.component.html\n// module id = ../../../../../src/app/modules/users/components/account-personal-info/account-personal-info.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"form .form__actions .progress-bar {\\n  width: 100%; }\\n\\n@media screen and (min-width: 600px) {\\n  form .form__actions .progress-bar {\\n    width: 88px; } }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/account-personal-info/account-personal-info.component.scss\n// module id = ../../../../../src/app/modules/users/components/account-personal-info/account-personal-info.component.scss\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\r\nimport { DateAdapter, NativeDateAdapter } from '@angular/material';\r\nimport {User} from '../../models/user';\r\nimport {AccountPersonal} from '../../models/account-personal';\r\nimport { UsersService } from '../../users.service';\r\nimport { AppService } from '../../../../app.service';\r\nimport { UtilService } from '../../../../util.service';\r\n\r\n@Component({\r\n  selector: 'account-personal-info',\r\n  templateUrl: './account-personal-info.component.html',\r\n  styleUrls: ['./account-personal-info.component.scss']\r\n})\r\nexport class AccountPersonalInfoComponent implements OnInit {\r\n\r\n  @Input() user : User;\r\n  model : any = { birthday : null, email : null };\r\n  startAt : Date = new Date(1990, 0, 1);\r\n  accountPersonalServiceRunning : boolean = false;\r\n\r\n  constructor(private dateAdapter: DateAdapter<NativeDateAdapter>, private usersService : UsersService, private appService : AppService, \r\n        public utilService : UtilService) {\r\n    this.dateAdapter.setLocale('en-GB');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.model.email = this.user.email;\r\n    \r\n    if (this.user.personalInfo) {\r\n      this.model.birthday = this.user.personalInfo.birthday;\r\n      \r\n      if (this.user.personalInfo.birthday) {\r\n        this.startAt = this.user.personalInfo.birthday;\r\n      }\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    const methodTrace = `${this.constructor.name} > onSubmit() > `; //for debugging\r\n\r\n    this.accountPersonalServiceRunning = true;\r\n    //call the account service\r\n    this.usersService.updatePersonalInfo(this.model).subscribe(\r\n      (data : any) => {\r\n        if (data === null) {\r\n          let user = this.usersService.getUser();\r\n          user.personalInfo = new AccountPersonal(this.model.birthday);\r\n          this.usersService.setUser(user);\r\n\r\n          this.appService.showResults(`Your personal information was successfully updated!.`, 'success');\r\n        } else {\r\n          this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`)\r\n        }\r\n\r\n        this.accountPersonalServiceRunning = false;\r\n      },\r\n      (error : any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n        } else {\r\n          this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n        }\r\n\r\n        this.accountPersonalServiceRunning = false;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/account-personal-info/account-personal-info.component.ts","module.exports = \"<form class=\\\"form__container\\\" (ngSubmit)=\\\"onSubmit()\\\" #accountForm=\\\"ngForm\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" >\\r\\n  \\r\\n  <div fxLayout=\\\"column\\\" class=\\\"form__fields\\\">\\r\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap.gt-xs=\\\"10px\\\" class=\\\"form__fields__row\\\" >\\r\\n      <!-- Name -->\\r\\n      <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n        <input matInput type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Name\\\" \\r\\n            [(ngModel)]=\\\"model.name\\\" \\r\\n            required minlength=\\\"4\\\"\\r\\n            value=\\\"model.name\\\"\\r\\n            #name=\\\"ngModel\\\">\\r\\n\\r\\n        <mat-error *ngIf=\\\"name.invalid && (name.dirty || name.touched) && name.errors.required\\\">Name is required</mat-error>\\r\\n        <mat-error *ngIf=\\\"name.invalid && (name.dirty || name.touched) && name.errors.minlength\\\">Name must contains more than 4 characters</mat-error>\\r\\n      </mat-form-field>\\r\\n      \\r\\n      <!-- Email -->\\r\\n      <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n        <input matInput type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Email address\\\" \\r\\n            [(ngModel)]=\\\"model.email\\\" \\r\\n            required email\\r\\n            value=\\\"model.email\\\"\\r\\n            #email=\\\"ngModel\\\">\\r\\n\\r\\n        <mat-error *ngIf=\\\"email.invalid && (email.dirty || email.touched) && email.errors.required\\\">Email is required</mat-error>\\r\\n        <mat-error *ngIf=\\\"email.invalid && (email.dirty || email.touched) && email.errors.email\\\">Email must be a valid email address</mat-error>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap.gt-xs=\\\"10px\\\" class=\\\"form__fields__row\\\" >\\r\\n      <!-- Preferred currency -->\\r\\n      <currency-unit fxFlex fxFlex.gt-xs=\\\"200px\\\"\\r\\n          [id]=\\\"'preferredCurrency'\\\"\\r\\n          [hint]=\\\"'Your preferred currency format to use across the platform'\\\" \\r\\n          [placeHolder]=\\\"'Preferred currency'\\\" \\r\\n          [value]=\\\"model.currency\\\"\\r\\n          (newValue)=\\\"onCurrencyUnitChange($event)\\\">\\r\\n      </currency-unit>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex class=\\\"form__spacer\\\"></div>\\r\\n  </div>\\r\\n\\r\\n  <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"center none\\\" class=\\\"form__actions\\\">\\r\\n    <button *ngIf=\\\"!updateAccountServiceRunning\\\" class=\\\"form__action mat-raised-button\\\" color=\\\"accent\\\" mat-raised-button type=\\\"submit\\\" \\r\\n        [disabled]=\\\"!accountForm.form.valid\\\">Save</button>\\r\\n\\r\\n    <mat-progress-bar *ngIf=\\\"updateAccountServiceRunning\\\"\\r\\n        class=\\\"progress-bar progress-bar--update-account\\\"\\r\\n        color=\\\"primary\\\"\\r\\n        mode=\\\"indeterminate\\\">\\r\\n    </mat-progress-bar>\\r\\n  </div>\\r\\n\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/account-user-info/account-user-info.component.html\n// module id = ../../../../../src/app/modules/users/components/account-user-info/account-user-info.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"form .form__actions .progress-bar {\\n  width: 100%; }\\n\\n@media screen and (min-width: 600px) {\\n  form .form__actions .progress-bar {\\n    width: 88px; } }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/account-user-info/account-user-info.component.scss\n// module id = ../../../../../src/app/modules/users/components/account-user-info/account-user-info.component.scss\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\r\nimport { MatSelectChange } from '@angular/material';\r\nimport {User} from '../../models/user';\r\nimport { UsersService } from '../../users.service';\r\nimport { AppService } from '../../../../app.service';\r\n\r\n@Component({\r\n  selector: 'account-user-info',\r\n  templateUrl: './account-user-info.component.html',\r\n  styleUrls: ['./account-user-info.component.scss']\r\n})\r\nexport class AccountUserInfoComponent implements OnInit {\r\n\r\n  @Input() user : User = null;\r\n  public model : any = {name : '', email : '', currency : ''};\r\n  public updateAccountServiceRunning : boolean = false;\r\n\r\n  \r\n  constructor(private usersService : UsersService, private appService : AppService) {}\r\n\r\n  ngOnInit() {\r\n    this.model = { name : this.user.name, email : this.user.email, currency : this.user.currency };\r\n  }\r\n\r\n  onCurrencyUnitChange($event : MatSelectChange) {\r\n    if ($event.source.id === 'preferredCurrency') {\r\n      this.model.currency = $event.value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When user submits the register form.\r\n   */\r\n  onSubmit() { \r\n    const methodTrace = `${this.constructor.name} > onSubmit() > `; //for debugging\r\n    this.updateAccountServiceRunning = true;\r\n    \r\n    //call the account service\r\n    this.usersService.updateAccount(this.model).subscribe(\r\n      (data : any) => {\r\n        if (data && data.email) {\r\n          let user = this.usersService.getUser();\r\n          user.name = data.name;\r\n          user.email = data.email;\r\n          user.currency = data.currency;\r\n          this.usersService.setUser(user);\r\n\r\n          this.appService.showResults(`Your profile was successfully updated!.`, 'success');\r\n        } else {\r\n          this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`);\r\n        }\r\n\r\n        this.updateAccountServiceRunning = false;\r\n      },\r\n      (error : any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n        } else {\r\n          this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n        }\r\n\r\n        this.updateAccountServiceRunning = false;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/account-user-info/account-user-info.component.ts","module.exports = \"<!-- SM and higher view -->\\r\\n<mat-tab-group *ngIf=\\\"utilService.isGtXs()\\\">\\r\\n  <mat-tab label=\\\"Account info\\\">\\r\\n    <account-user-info [user]=\\\"user\\\"></account-user-info>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Personal info\\\">\\r\\n    <account-personal-info [user]=\\\"user\\\"></account-personal-info>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Financial info\\\">\\r\\n    <account-finance-info [user]=\\\"user\\\"></account-finance-info>\\r\\n  </mat-tab>\\r\\n</mat-tab-group>\\r\\n\\r\\n<!-- XS view -->\\r\\n<mat-accordion *ngIf=\\\"utilService.isXs()\\\">  \\r\\n    <mat-expansion-panel>\\r\\n      <mat-expansion-panel-header>\\r\\n        Account info\\r\\n      </mat-expansion-panel-header>\\r\\n\\r\\n      <account-user-info [user]=\\\"user\\\"></account-user-info>\\r\\n    </mat-expansion-panel>\\r\\n  \\r\\n    <mat-expansion-panel>\\r\\n      <mat-expansion-panel-header>\\r\\n        Personal info\\r\\n      </mat-expansion-panel-header>\\r\\n\\r\\n      <account-personal-info [user]=\\\"user\\\"></account-personal-info>\\r\\n    </mat-expansion-panel>\\r\\n\\r\\n    <mat-expansion-panel>\\r\\n      <mat-expansion-panel-header>\\r\\n        Financial info\\r\\n      </mat-expansion-panel-header>\\r\\n\\r\\n      <account-finance-info [user]=\\\"user\\\"></account-finance-info>\\r\\n    </mat-expansion-panel>\\r\\n\\r\\n  </mat-accordion>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/account/account.component.html\n// module id = ../../../../../src/app/modules/users/components/account/account.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/account/account.component.scss\n// module id = ../../../../../src/app/modules/users/components/account/account.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UtilService } from '../../../../util.service';\r\nimport {User} from '../../models/user';\r\nimport { MainNavigatorService } from '../../../shared/components/main-navigator/main-navigator.service';\r\n\r\n@Component({\r\n  selector: 'app-account',\r\n  templateUrl: './account.component.html',\r\n  styleUrls: ['./account.component.scss']\r\n})\r\nexport class AccountComponent implements OnInit {\r\n\r\n  public user : User = null;\r\n\r\n  constructor(private mainNavigatorService : MainNavigatorService, private route : ActivatedRoute, public utilService : UtilService) { }\r\n\r\n  ngOnInit() {\r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: '/welcome', selected: false },\r\n      { displayName: 'My account', url: null, selected: true }]);\r\n    \r\n    //get authUser from resolver\r\n    this.route.data.subscribe((data: { authUser: User }) => {\r\n      this.user = data.authUser;\r\n    });\r\n  }\r\n\r\n  \r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/account/account.component.ts","module.exports = \"<form class=\\\"form__container form__login\\\" (ngSubmit)=\\\"onSubmit()\\\" #loginForm=\\\"ngForm\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" >\\r\\n  \\r\\n  <section fxLayout=\\\"column\\\" class=\\\"form__fields\\\">\\r\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap.gt-xs=\\\"10px\\\" class=\\\"form__fields__row\\\">\\r\\n      <!-- Email -->\\r\\n      <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n        <input matInput type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Email address\\\" \\r\\n            [(ngModel)]=\\\"model.email\\\" \\r\\n            required email\\r\\n            #email=\\\"ngModel\\\">\\r\\n  \\r\\n        <mat-error *ngIf=\\\"email.invalid && (email.dirty || email.touched) && email.errors.required\\\">Email is required</mat-error>\\r\\n        <mat-error *ngIf=\\\"email.invalid && (email.dirty || email.touched) && email.errors.email\\\">Email must be a valid email address</mat-error>\\r\\n      </mat-form-field>\\r\\n      \\r\\n      <!-- Password -->\\r\\n      <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n        <input matInput type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" \\r\\n            [(ngModel)]=\\\"model.password\\\" \\r\\n            required minlength=\\\"3\\\" maxlength=\\\"8\\\"\\r\\n            #password=\\\"ngModel\\\">\\r\\n  \\r\\n        <mat-error *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.required\\\">Password is required</mat-error>\\r\\n        <mat-error *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.minlength\\\">Password must be longer than 3 characters</mat-error>\\r\\n        <mat-error *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.maxlength\\\">Password must be shorter than 8 characters</mat-error>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n  </section>\\r\\n\\r\\n  <section fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"center center\\\" class=\\\"form__actions form__actions--login\\\">\\r\\n    <button *ngIf=\\\"!loginServiceRunning\\\" class=\\\"form__action mat-raised-button\\\" mat-raised-button type=\\\"submit\\\" \\r\\n        color=\\\"accent\\\" [disabled]=\\\"!loginForm.form.valid\\\">Login</button>\\r\\n    \\r\\n    <mat-progress-bar *ngIf=\\\"loginServiceRunning\\\"\\r\\n        class=\\\"progress-bar progress-bar--login\\\"\\r\\n        color=\\\"primary\\\"\\r\\n        mode=\\\"indeterminate\\\">\\r\\n    </mat-progress-bar>\\r\\n    \\r\\n    <mat-checkbox fxLayoutAlign.xs=\\\"center center\\\" class=\\\"form__action\\\" [(ngModel)]=\\\"forgotModel.forgot\\\" name=\\\"forgot\\\" id=\\\"forgot\\\">Forgot my password</mat-checkbox>\\r\\n  </section>\\r\\n\\r\\n  <section fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"form__actions form__actions--create-account\\\">\\r\\n    <a mat-button color=\\\"accent\\\" class=\\\"color__almost-white ac__link\\\" routerLink=\\\"/users/register\\\">Create an account</a>\\r\\n  </section>\\r\\n\\r\\n</form>\\r\\n\\r\\n<form class=\\\"form__container form__forgot\\\" (ngSubmit)=\\\"onForgotSubmit()\\\" #forgotForm=\\\"ngForm\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" *ngIf=\\\"forgotModel.forgot\\\">\\r\\n  \\r\\n  <section fxLayout=\\\"column\\\" class=\\\"form__fields\\\">\\r\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap.gt-xs=\\\"10px\\\" class=\\\"form__fields__row\\\">\\r\\n      <!-- Email -->\\r\\n      <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n        \\r\\n        <input matInput type=\\\"email\\\" id=\\\"emailForgot\\\" name=\\\"emailForgot\\\" placeholder=\\\"Email address\\\" \\r\\n            [(ngModel)]=\\\"forgotModel.email\\\" \\r\\n            required email\\r\\n            #emailForgot=\\\"ngModel\\\">\\r\\n        <mat-hint align=\\\"start\\\">Type your email and we will send you an email to reset your password.</mat-hint>\\r\\n        <mat-error *ngIf=\\\"emailForgot.invalid && (emailForgot.dirty || emailForgot.touched) && emailForgot.errors.required\\\">Email is required</mat-error>\\r\\n        <mat-error *ngIf=\\\"emailForgot.invalid && (emailForgot.dirty || emailForgot.touched) && emailForgot.errors.email\\\">Email must be a valid email address</mat-error>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n  </section>\\r\\n\\r\\n  <section fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"center none\\\" class=\\\"form__actions\\\">\\r\\n    <button *ngIf=\\\"!forgotServiceRunning\\\" class=\\\"form__action mat-raised-button\\\" \\r\\n        color=\\\"accent\\\" mat-raised-button type=\\\"submit\\\" [disabled]=\\\"!forgotForm.form.valid\\\">Send</button>\\r\\n\\r\\n    <mat-progress-bar *ngIf=\\\"forgotServiceRunning\\\"\\r\\n        class=\\\"progress-bar progress-bar--forgot\\\"\\r\\n        color=\\\"primary\\\"\\r\\n        mode=\\\"indeterminate\\\">\\r\\n    </mat-progress-bar>\\r\\n  </section>\\r\\n\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/login/login.component.html\n// module id = ../../../../../src/app/modules/users/components/login/login.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"form .form__actions .progress-bar {\\n  width: 100%; }\\n\\n.form__login .form__actions--create-account {\\n  margin: 20px 0; }\\n\\n.form__forgot {\\n  margin-top: 50px; }\\n\\n@media screen and (min-width: 600px) {\\n  form .form__actions .progress-bar {\\n    width: 88px; } }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/login/login.component.scss\n// module id = ../../../../../src/app/modules/users/components/login/login.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\r\n\r\nimport { UsersService } from '../../users.service';\r\nimport { AppService } from '../../../../app.service';\r\nimport {User} from '../../models/user';\r\nimport { MainNavigatorService } from '../../../shared/components/main-navigator/main-navigator.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  model : any = {email : '', password : ''};\r\n  forgotModel : any = { email : '', forgot : false };\r\n  loginServiceRunning : boolean = false;\r\n  forgotServiceRunning : boolean = false;\r\n\r\n  constructor(private usersService : UsersService, private appService : AppService,  \r\n    private mainNavigatorService : MainNavigatorService, private router : Router, private route : ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    const methodTrace = `${this.constructor.name} > ngOnInit() > `; //for debugging\r\n    \r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: '/welcome', selected: false },\r\n      { displayName: 'Login', url: null, selected: true }]);\r\n\r\n    this.route.paramMap.map((params: ParamMap) => params.get('state'))\r\n        .subscribe(state => {\r\n          if (state === 'reset-password-token-expired') {\r\n            this.appService.showResults('Reset password token has expired or is invalid. Click on \"Forgot my password\" again to create a new one.', 'error', 10000);\r\n          }\r\n        });\r\n  }\r\n\r\n  /**\r\n   * When user submits the login form\r\n   */\r\n  onSubmit() { \r\n    const methodTrace = `${this.constructor.name} > onSubmit() > `; //for debugging\r\n\r\n    this.loginServiceRunning = true;\r\n    this.usersService.setUser(null); //reset authenticated user. Register automatically authenticates the registered user.\r\n    //call the register service\r\n    this.usersService.login(this.model).subscribe(\r\n      (data : any) => {\r\n        if (data && data.email) {\r\n          const user = new User(data.name, data.email, data.avatar, data.accessToInvestments, null, null, data.currency);\r\n          this.usersService.setUser(user);\r\n          const redirectUrl = this.usersService.routerRedirectUrl ? this.usersService.routerRedirectUrl : '/';\r\n          this.usersService.routerRedirectUrl = null;\r\n          this.router.navigate([redirectUrl]); //go home\r\n        } else {\r\n          this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`);\r\n          this.loginServiceRunning = false;\r\n        }\r\n      },\r\n      (error : any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n        } else if (error.codeno === 451) {\r\n          this.appService.showResults(error.msg, 'error');\r\n        } else {\r\n          this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n        }\r\n\r\n        this.loginServiceRunning = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * When user submits the forgot password form\r\n   */\r\n  onForgotSubmit() { \r\n    const methodTrace = `${this.constructor.name} > onForgotSubmit() > `; //for debugging\r\n\r\n    this.forgotServiceRunning = true;\r\n    //call the register service\r\n    this.usersService.forgot(this.forgotModel).subscribe(\r\n      (data : any) => {\r\n        this.forgotServiceRunning = false;\r\n        this.appService.showResults(`You have been emailed a password reset link.`, 'info');\r\n      },\r\n      (error : any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n        } else if (error.codeno === 455) {\r\n          //invalid email\r\n          this.appService.showResults(error.msg, 'error');\r\n        } else {\r\n          this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n        }\r\n        this.forgotServiceRunning = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/login/login.component.ts","module.exports = \"<form class=\\\"form__container\\\" (ngSubmit)=\\\"onSubmit()\\\" #registerForm=\\\"ngForm\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" >\\r\\n  \\r\\n  <div fxLayout=\\\"column\\\" class=\\\"form__fields\\\">\\r\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap.gt-xs=\\\"10px\\\" class=\\\"form__fields__row\\\" >\\r\\n      <!-- Name -->\\r\\n      <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n        <input matInput type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Name\\\" \\r\\n            [(ngModel)]=\\\"model.name\\\" \\r\\n            required minlength=\\\"4\\\"\\r\\n            #name=\\\"ngModel\\\">\\r\\n\\r\\n        <mat-error *ngIf=\\\"name.invalid && (name.dirty || name.touched) && name.errors.required\\\">Name is required</mat-error>\\r\\n        <mat-error *ngIf=\\\"name.invalid && (name.dirty || name.touched) && name.errors.minlength\\\">Name must contains more than 4 characters</mat-error>\\r\\n      </mat-form-field>\\r\\n      \\r\\n      <!-- Email -->\\r\\n      <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n        <input matInput type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Email address\\\" \\r\\n            [(ngModel)]=\\\"model.email\\\" \\r\\n            required email\\r\\n            #email=\\\"ngModel\\\">\\r\\n\\r\\n        <mat-error *ngIf=\\\"email.invalid && (email.dirty || email.touched) && email.errors.required\\\">Email is required</mat-error>\\r\\n        <mat-error *ngIf=\\\"email.invalid && (email.dirty || email.touched) && email.errors.email\\\">Email must be a valid email address</mat-error>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap.gt-xs=\\\"10px\\\" class=\\\"form__fields__row\\\" >\\r\\n      <!-- Password -->\\r\\n      <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n        <input matInput type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" \\r\\n            [(ngModel)]=\\\"model.password\\\" \\r\\n            required minlength=\\\"3\\\" maxlength=\\\"8\\\" equalvalidator=\\\"passwordConfirm\\\" reverse=\\\"true\\\"\\r\\n            #password=\\\"ngModel\\\">\\r\\n\\r\\n        <mat-error *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.required\\\">Password is required</mat-error>\\r\\n        <mat-error *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.minlength\\\">Password must be longer than 3 characters</mat-error>\\r\\n        <mat-error *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.maxlength\\\">Password must be shorter than 8 characters</mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <!-- Password confirm -->\\r\\n      <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n        <input matInput type=\\\"password\\\" id=\\\"passwordConfirm\\\" name=\\\"passwordConfirm\\\" placeholder=\\\"Confirm password\\\" \\r\\n            [(ngModel)]=\\\"model['password-confirm']\\\" \\r\\n            required minlength=\\\"3\\\" maxlength=\\\"8\\\" equalvalidator=\\\"password\\\"\\r\\n            #passwordConfirm=\\\"ngModel\\\">\\r\\n\\r\\n        <mat-error *ngIf=\\\"passwordConfirm.invalid && (passwordConfirm.dirty || passwordConfirm.touched) && passwordConfirm.errors.required\\\">Confirm password is required</mat-error>\\r\\n        <mat-error *ngIf=\\\"passwordConfirm.invalid && (passwordConfirm.dirty || passwordConfirm.touched) && passwordConfirm.errors.minlength\\\">Confirm password must be longer than 3 characters</mat-error>\\r\\n        <mat-error *ngIf=\\\"passwordConfirm.invalid && (passwordConfirm.dirty || passwordConfirm.touched) && passwordConfirm.errors.maxlength\\\">Confirm password must be shorter than 8 characters</mat-error>\\r\\n        <mat-error *ngIf=\\\"passwordConfirm.invalid && (passwordConfirm.dirty || passwordConfirm.touched) && passwordConfirm.errors.equalvalidator\\\">Confirm password must match password</mat-error>\\r\\n      </mat-form-field>\\r\\n      <!-- <pre>{{passwordConfirm.errors | json}}</pre> -->\\r\\n    </div>\\r\\n    \\r\\n  </div>\\r\\n  \\r\\n  <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"center none\\\" class=\\\"form__actions\\\">\\r\\n    <button *ngIf=\\\"!registerServiceRunning\\\" class=\\\"form__action mat-raised-button\\\" color=\\\"accent\\\" mat-raised-button type=\\\"submit\\\" \\r\\n        [disabled]=\\\"!registerForm.form.valid\\\">Create account</button>\\r\\n\\r\\n    <mat-progress-bar *ngIf=\\\"registerServiceRunning\\\"\\r\\n        class=\\\"progress-bar progress-bar--register\\\"\\r\\n        color=\\\"primary\\\"\\r\\n        mode=\\\"indeterminate\\\">\\r\\n  </mat-progress-bar>\\r\\n  </div>\\r\\n\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/register/register.component.html\n// module id = ../../../../../src/app/modules/users/components/register/register.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"form .form__actions .progress-bar {\\n  width: 100%; }\\n\\n@media screen and (min-width: 600px) {\\n  form .form__actions .progress-bar {\\n    width: 127px; } }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/register/register.component.scss\n// module id = ../../../../../src/app/modules/users/components/register/register.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { UsersService } from '../../users.service';\r\nimport { AppService } from '../../../../app.service';\r\nimport {User} from '../../models/user';\r\nimport { MainNavigatorService } from '../../../shared/components/main-navigator/main-navigator.service';\r\n\r\n@Component({\r\n  selector: 'users-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  public model : any = {name : '', email : '', password : '', 'password-confirm' : ''};\r\n  public registerServiceRunning : boolean = false;\r\n  \r\n  constructor(private usersService : UsersService, private appService : AppService, private router : Router,\r\n      private mainNavigatorService : MainNavigatorService) {}\r\n\r\n  ngOnInit() {\r\n    const methodTrace = `${this.constructor.name} > ngOnInit() > `; //for debugging\r\n\r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: '/welcome', selected: false },\r\n      { displayName: 'Login', url: '/users/login', selected: false },\r\n      { displayName: 'Create account', url: null, selected: true }]);\r\n  }\r\n\r\n  /**\r\n   * When user submits the register form.\r\n   */\r\n  onSubmit() { \r\n    const methodTrace = `${this.constructor.name} > onSubmit() > `; //for debugging\r\n\r\n    this.registerServiceRunning = true;\r\n\r\n    //chech that the password and the confirmed password are the same\r\n    if (this.model.password !== this.model['password-confirm']) {\r\n      this.appService.consoleLog('error', `${methodTrace} Confirm password must match password.`);\r\n      this.registerServiceRunning = false;\r\n      return false;\r\n    }\r\n\r\n    this.usersService.setUser(null); //reset authenticated user. Register automatically authenticates the registered user.\r\n    //call the register service\r\n    this.usersService.register(this.model).subscribe(\r\n      (data : any) => {\r\n        if (data && data.email) {\r\n          const user = new User(data.name, data.email, data.avatar, data.accessToInvestments, null, null, data.currency)\r\n          this.usersService.setUser(user);\r\n          this.router.navigate(['/']); //go home\r\n          this.appService.showResults(`${user.name} welcome to AtomiCoconut!`, 'success');\r\n        } else {\r\n          this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`, data);\r\n        }\r\n\r\n        this.registerServiceRunning = false;\r\n      },\r\n      (error : any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n        if (error.codeno === 400) {\r\n          if (error.data && error.data.name === 'UserExistsError') {\r\n            //the mail system failed for external reasons\r\n            this.appService.showResults(`The selected email address already in use by another person, pick a different one please.`, 'error');\r\n          } else {\r\n            this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n          }\r\n        } else {\r\n          this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n        }\r\n\r\n        this.registerServiceRunning = false;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/register/register.component.ts","module.exports = \"<form class=\\\"form__container\\\" (ngSubmit)=\\\"onSubmit()\\\" #resetForm=\\\"ngForm\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" >\\r\\n  \\r\\n  <div fxLayout=\\\"column\\\" class=\\\"form__fields\\\">\\r\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap.gt-xs=\\\"10px\\\" class=\\\"form__fields__row\\\" >\\r\\n      <!-- Password -->\\r\\n      <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n        <input matInput type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" \\r\\n            [(ngModel)]=\\\"model.password\\\" \\r\\n            required minlength=\\\"3\\\" maxlength=\\\"8\\\" equalvalidator=\\\"passwordConfirm\\\" reverse=\\\"true\\\"\\r\\n            #password=\\\"ngModel\\\">\\r\\n\\r\\n        <mat-error *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.required\\\">Password is required</mat-error>\\r\\n        <mat-error *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.minlength\\\">Password must be longer than 3 characters</mat-error>\\r\\n        <mat-error *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.maxlength\\\">Password must be shorter than 8 characters</mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <!-- Password confirm -->\\r\\n      <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n        <input matInput type=\\\"password\\\" id=\\\"passwordConfirm\\\" name=\\\"passwordConfirm\\\" placeholder=\\\"Confirm password\\\" \\r\\n            [(ngModel)]=\\\"model['password-confirm']\\\" \\r\\n            required minlength=\\\"3\\\" maxlength=\\\"8\\\" equalvalidator=\\\"password\\\"\\r\\n            #passwordConfirm=\\\"ngModel\\\">\\r\\n\\r\\n        <mat-error *ngIf=\\\"passwordConfirm.invalid && (passwordConfirm.dirty || passwordConfirm.touched) && passwordConfirm.errors.required\\\">Confirm password is required</mat-error>\\r\\n        <mat-error *ngIf=\\\"passwordConfirm.invalid && (passwordConfirm.dirty || passwordConfirm.touched) && passwordConfirm.errors.minlength\\\">Confirm password must be longer than 3 characters</mat-error>\\r\\n        <mat-error *ngIf=\\\"passwordConfirm.invalid && (passwordConfirm.dirty || passwordConfirm.touched) && passwordConfirm.errors.maxlength\\\">Confirm password must be shorter than 8 characters</mat-error>\\r\\n        <mat-error *ngIf=\\\"passwordConfirm.invalid && (passwordConfirm.dirty || passwordConfirm.touched) && passwordConfirm.errors.equalvalidator\\\">Confirm password must match password</mat-error>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    \\r\\n    \\r\\n    \\r\\n  </div>\\r\\n  \\r\\n  <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"center none\\\" class=\\\"form__actions\\\">\\r\\n    <button *ngIf=\\\"!resetPasswordServiceRunning\\\" class=\\\"form__action mat-raised-button\\\" color=\\\"accent\\\" mat-raised-button type=\\\"submit\\\" \\r\\n        [disabled]=\\\"!resetForm.form.valid\\\">Reset password</button>\\r\\n\\r\\n    <mat-progress-bar *ngIf=\\\"resetPasswordServiceRunning\\\"\\r\\n        class=\\\"progress-bar progress-bar--reset-password\\\"\\r\\n        color=\\\"primary\\\"\\r\\n        mode=\\\"indeterminate\\\">\\r\\n    </mat-progress-bar>\\r\\n  </div>\\r\\n\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/reset-password/reset-password.component.html\n// module id = ../../../../../src/app/modules/users/components/reset-password/reset-password.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"form .form__actions .progress-bar {\\n  width: 100%; }\\n\\n@media screen and (min-width: 600px) {\\n  form .form__actions .progress-bar {\\n    width: 127px; } }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/reset-password/reset-password.component.scss\n// module id = ../../../../../src/app/modules/users/components/reset-password/reset-password.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, ParamMap  } from '@angular/router';\r\n\r\nimport { UsersService } from '../../users.service';\r\nimport {User} from '../../models/user';\r\nimport { MainNavigatorService } from '../../../shared/components/main-navigator/main-navigator.service';\r\nimport { AppService } from '../../../../app.service';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.scss']\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n\r\n  public model : any = { password : '', 'password-confirm' : ''};\r\n  private token : string = '';\r\n  public resetPasswordServiceRunning : boolean = false;\r\n\r\n  constructor(private appService : AppService, private usersService : UsersService, private router : Router, private route : ActivatedRoute,\r\n      private mainNavigatorService : MainNavigatorService ) { }\r\n\r\n  ngOnInit() {\r\n    const methodTrace = `${this.constructor.name} > ngOnInit() > `; //for debugging\r\n    \r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: '/welcome', selected: false },\r\n      { displayName: 'Login', url: '/users/login', selected: false },\r\n      { displayName: 'Reset password', url: null, selected: true }]);\r\n\r\n    this.route.paramMap.map((params: ParamMap) => params.get('token'))\r\n        .subscribe(token => { \r\n          if (token) {\r\n            this.token = token;\r\n          } else {\r\n            this.appService.consoleLog('error', `${methodTrace} Token must be set to reset a password.`);\r\n            this.router.navigate(['/']);\r\n          }\r\n        });\r\n  }\r\n\r\n  onSubmit() { \r\n    const methodTrace = `${this.constructor.name} > onSubmit() > `; //for debugging\r\n    this.resetPasswordServiceRunning = true;\r\n\r\n    //chech that the password and the confirmed password are the same\r\n    if (this.model.password !== this.model['password-confirm']) {\r\n      this.appService.consoleLog('error', `${methodTrace} Confirm password must match password.`);\r\n\r\n      this.resetPasswordServiceRunning = false;\r\n      return false;\r\n    }\r\n\r\n    //call the reset password service.\r\n    this.usersService.setUser(null); //reset authenticated user. Reset automatically authenticates the registered user.\r\n    this.usersService.reset(this.token, this.model).subscribe(\r\n      (data : any) => {\r\n        if (data) {\r\n          const user = new User(data.name, data.email, data.avatar, data.accessToInvestments, null, null, data.currency);\r\n          this.usersService.setUser(user);\r\n          this.appService.showResults('Your password was successfully updated!', 'success');\r\n          this.router.navigate(['/']); //go home\r\n        } else {\r\n          this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`)\r\n        }\r\n\r\n        this.resetPasswordServiceRunning = false;\r\n      },\r\n      (error : any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n        } else {\r\n          this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n        }\r\n        this.resetPasswordServiceRunning = false;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/components/reset-password/reset-password.component.ts","export class AccountFinance {\r\n  \r\n    annualIncome : number; //annual pre tax\r\n    annualIncomeUnit : string; //the unit of annual income\r\n    savings : number;\r\n    savingsUnit : string; //savings unit\r\n    incomeTaxRate : number; //percentage value\r\n  \r\n    constructor(annualIncome : number = null, annualIncomeUnit : string = 'USD', savings : number = null, savingsUnit : string = 'USD', incomeTaxRate : number = null) {\r\n      this.annualIncome = annualIncome;\r\n      this.annualIncomeUnit = annualIncomeUnit; \r\n      this.savings = savings;\r\n      this.savingsUnit = savingsUnit;\r\n      this.incomeTaxRate = incomeTaxRate; \r\n    }\r\n  }\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/models/account-finance.ts","export class AccountPersonal {\r\n  \r\n    birthday : Date = null\r\n  \r\n    constructor(birthday : Date = null) {\r\n      this.birthday = birthday;\r\n    }\r\n\r\n     get age() : number {\r\n      if (this.birthday) {\r\n        let ageDifMs = Date.now() - new Date(this.birthday).getTime();\r\n        let ageDate = new Date(ageDifMs); // miliseconds from epoch\r\n        return Math.abs(ageDate.getUTCFullYear() - 1970);\r\n      }\r\n\r\n      return 0;\r\n    }\r\n  }\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/models/account-personal.ts","import { AccountFinance } from './account-finance';\r\nimport { AccountPersonal } from './account-personal';\r\n\r\nexport class User {\r\n\r\n  name : string;\r\n  email : string;\r\n  avatar : string;\r\n  accessToInvestments : boolean;\r\n  financialInfo : AccountFinance;\r\n  personalInfo : AccountPersonal;\r\n  currency : string;\r\n\r\n  constructor(name : string = '', email : string = '', avatar : string = '', accessToInvestments = false, financialInfo : AccountFinance = null, \r\n      personalInfo : AccountPersonal = null, currency : string = 'USD') {\r\n    this.name = name;\r\n    this.email = email;\r\n    this.avatar = avatar;\r\n    this.accessToInvestments = accessToInvestments;\r\n    this.currency = currency;\r\n    \r\n    if (financialInfo) {\r\n      this.financialInfo = financialInfo;\r\n    } else {\r\n      this.financialInfo = null;\r\n    }\r\n\r\n    if (personalInfo) {\r\n      this.personalInfo = personalInfo;\r\n    } else {\r\n      this.personalInfo = null;\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/models/user.ts","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\r\nimport { AccountComponent } from './components/account/account.component';\r\nimport { AuthResolver } from '../../auth-resolver.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path : 'users',\r\n    children : [\r\n      { path : 'register', component : RegisterComponent },\r\n      { path : 'login/:state', component : LoginComponent },\r\n      { path : 'login', component : LoginComponent },\r\n      { \r\n        path : 'account', \r\n        component : AccountComponent,\r\n        resolve : {\r\n          authUser : AuthResolver\r\n        }\r\n      },\r\n      { \r\n        path : 'account/reset/expired',\r\n        redirectTo : 'login/reset-password-token-expired',\r\n        pathMatch : 'full'\r\n      },\r\n      { path : 'account/reset/:token', component : ResetPasswordComponent }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UsersRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/users-routing.module.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UsersRoutingModule } from './users-routing.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { CustomMaterialDesignModule } from '../../modules/shared/custom-material-design.module';\r\nimport { SharedModule } from '../../modules/shared/shared.module';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { UsersService } from './users.service';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\r\nimport { AccountComponent } from './components/account/account.component';\r\nimport { AccountFinanceInfoComponent } from './components/account-finance-info/account-finance-info.component';\r\nimport { AccountPersonalInfoComponent } from './components/account-personal-info/account-personal-info.component';\r\nimport { AccountUserInfoComponent } from './components/account-user-info/account-user-info.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UsersRoutingModule,\r\n    FormsModule,\r\n    FlexLayoutModule,\r\n    CustomMaterialDesignModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    ResetPasswordComponent,\r\n    AccountComponent,\r\n    AccountFinanceInfoComponent,\r\n    AccountPersonalInfoComponent,\r\n    AccountUserInfoComponent\r\n  ],\r\n  providers: [UsersService]\r\n})\r\nexport class UsersModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/users.module.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\n\r\nimport { Observable } from \"rxjs/Rx\";\r\nimport { environment } from \"../../../environments/environment\";\r\nimport { AppService } from \"../../app.service\";\r\nimport { User } from \"./models/user\";\r\n\r\n@Injectable()\r\nexport class UsersService {\r\n\r\n  private serverHost : string = environment.apiHost + '/api/users';\r\n  private headers = new Headers({'Content-Type': 'application/json'});\r\n  private userSource : BehaviorSubject<User>; //Observable user source\r\n  user$ : Observable<User>; //Observable user stream\r\n  routerRedirectUrl : string = null; //a route to redirect the user to when login is successfull\r\n\r\n  constructor(private http : Http, private appService : AppService) {\r\n    this.userSource = new BehaviorSubject<User>(null);\r\n    this.user$ = this.userSource.asObservable();\r\n  }\r\n\r\n  /**\r\n   * user source feeder\r\n   */\r\n  setUser(user : User = null) {\r\n    this.userSource.next(user);\r\n  }\r\n\r\n  /**\r\n   * get the current user from the source\r\n   */\r\n  getUser() : User {\r\n    return this.userSource.getValue();\r\n  }\r\n\r\n  /**\r\n   * Server call to Register a new user in the system \r\n   * @param postData \r\n   */\r\n  register(postData : any = {}) : Observable<any> {\r\n    return this.http.post(`${this.serverHost}/register`, postData, { headers : this.headers })\r\n        .map(this.appService.extractData)\r\n        .catch(this.appService.handleError);\r\n  }\r\n\r\n  /**\r\n   * Server call to update account user details \r\n   * @param postData \r\n   */\r\n  updateAccount(postData : any = {}) : Observable<any> {\r\n    return this.http.post(`${this.serverHost}/account`, postData, { headers : this.headers })\r\n        .map(this.appService.extractData)\r\n        .catch(this.appService.handleError);\r\n  }\r\n\r\n  /**\r\n   * Server call to update account personal details \r\n   * @param postData \r\n   */\r\n  updatePersonalInfo(postData : any = {}) : Observable<any> {\r\n    return this.http.post(`${this.serverHost}/accountPersonalInfo`, postData, { headers : this.headers })\r\n        .map(this.appService.extractData)\r\n        .catch(this.appService.handleError);\r\n  }\r\n\r\n  /**\r\n   * Server call to update account financial details \r\n   * @param postData \r\n   */\r\n  updateFinancialInfo(postData : any = {}) : Observable<any> {\r\n    return this.http.post(`${this.serverHost}/accountFinancialInfo`, postData, { headers : this.headers })\r\n        .map(this.appService.extractData)\r\n        .catch(this.appService.handleError);\r\n  }\r\n\r\n  /**\r\n   * Server call to retrieve the currently authenticated user, or null if nobody .\r\n   * @param {any} parameters . The parameters for the service call. Accepted are personalInfo (boolean), financeInfo (boolean)\r\n   */\r\n  getAuthenticatedUser(parameters : any = null) : Observable<any> {\r\n    return this.http.get(`${this.serverHost}/getUser?${this.appService.getParamsAsQuerystring(parameters)}`)\r\n        .map(this.appService.extractData)\r\n        .catch(this.appService.handleError);\r\n  }\r\n\r\n  /**\r\n   * Server call to login the provided user email and pass.\r\n   */\r\n  login(postData : any = {}) : Observable<any> {\r\n    return this.http.post(`${this.serverHost}/login`, postData, { headers : this.headers })\r\n        .map(this.appService.extractData)\r\n        .catch(this.appService.handleError);\r\n  }\r\n\r\n  /**\r\n   * Server call to forgot with the provided user email.\r\n   */\r\n  forgot(postData : any = {}) : Observable<any> {\r\n    return this.http.post(`${this.serverHost}/account/forgot`, postData, { headers : this.headers })\r\n        .map(this.appService.extractData)\r\n        .catch(this.appService.handleError);\r\n  }\r\n\r\n  /**\r\n   * Server call to reset password api with the provided new password.\r\n   */\r\n  reset(token : string, postData : any = {}) : Observable<any> {\r\n    return this.http.post(`${this.serverHost}/account/reset/${token}`, postData, { headers : this.headers })\r\n        .map(this.appService.extractData)\r\n        .catch(this.appService.handleError);\r\n  }\r\n\r\n  /**\r\n   * Server call to login the provided user email and pass.\r\n   */\r\n  logout() : Observable<any> {\r\n    return this.http.get(`${this.serverHost}/logout`)\r\n        .map(this.appService.extractData)\r\n        .catch(this.appService.handleError);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/modules/users/users.service.ts","import { Injectable } from '@angular/core';\r\nimport { environment } from '../environments/environment';\r\n\r\n@Injectable()\r\nexport class UtilService {\r\n\r\n  private settings : any = {\r\n    flexLayoutBkpts : {\r\n      xs : { min: 0, max: 599 },\r\n      sm : { min: 600, max: 959 },\r\n      md : { min: 960, max: 1279 },\r\n      lg : { min: 1280, max: 1919 },\r\n      xl : { min: 1920, max: 5000 }\r\n    }\r\n  };\r\n\r\n  constructor() {}\r\n\r\n  isXs() : boolean {\r\n    return window.innerWidth <= this.settings.flexLayoutBkpts.xs.max;\r\n  }\r\n\r\n  isSm() : boolean {\r\n    return window.innerWidth >= this.settings.flexLayoutBkpts.sm.min && window.innerWidth <= this.settings.flexLayoutBkpts.sm.max;\r\n  } \r\n  \r\n  isMd() : boolean {\r\n    return window.innerWidth >= this.settings.flexLayoutBkpts.md.min && window.innerWidth <= this.settings.flexLayoutBkpts.md.max;\r\n  }\r\n\r\n  isLg() : boolean {\r\n    return window.innerWidth >= this.settings.flexLayoutBkpts.lg.min && window.innerWidth <= this.settings.flexLayoutBkpts.lg.max;\r\n  }\r\n\r\n  isXl() : boolean {\r\n    return window.innerWidth >= this.settings.flexLayoutBkpts.xl.min && window.innerWidth <= this.settings.flexLayoutBkpts.xl.max;\r\n  }\r\n  \r\n  isGtXs() : boolean {\r\n    return window.innerWidth >= this.settings.flexLayoutBkpts.sm.min;\r\n  }\r\n\r\n  isGtSm() : boolean {\r\n    return window.innerWidth >= this.settings.flexLayoutBkpts.md.min;\r\n  }\r\n\r\n  /**\r\n   * Show logs in the console if enabled in the current environment\r\n   * @param type . Error type\r\n   * @param message . The message to show\r\n   * @param params . Any extra parameters to list in the log.\r\n   */\r\n  consoleLog(type : 'log' | 'debug' | 'warn' | 'info' | 'error', message : string, ...params) {\r\n    if (environment.showLogs) {\r\n      console[type](message, params);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/app/util.service.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\nexport const environment = {\r\n  production: true,\r\n  apiHost : '',\r\n  showLogs : true\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n  console.log('ENV: Production');\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// C:/workspacew3/atomiCoconut/client/src/main.ts"],"sourceRoot":"webpack:///"}