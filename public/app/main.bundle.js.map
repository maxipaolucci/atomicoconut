{"version":3,"sources":["C:/w3/atomiCoconut/client/src async","C:/w3/atomiCoconut/client/src/app/app.component.html","C:/w3/atomiCoconut/client/src/app/app.component.scss","C:/w3/atomiCoconut/client/src/app/app.component.ts","C:/w3/atomiCoconut/client/src/app/app.module.ts","C:/w3/atomiCoconut/client/src/app/app.service.ts","C:/w3/atomiCoconut/client/src/environments/environment.ts","C:/w3/atomiCoconut/client/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/w3/atomiCoconut/client/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div style=\\\"text-align:center\\\">\\r\\n\\r\\n  <div>\\r\\n    <div class=\\\"currency-box\\\">\\r\\n      <div class=\\\"currency-box__contents\\\">\\r\\n        <h3>Moneros ({{xmrCount}})</h3> \\r\\n        today at <strong>{{xmrCurrentPrice | currency}}</strong>\\r\\n        <br><br>\\r\\n\\r\\n        Investment: <strong>{{usdFromXmrWhenBought | currency }}</strong> \\r\\n        <br>\\r\\n\\r\\n        on {{xmrBuyDate | date}} at {{xmrBuyPrice | currency}}\\r\\n\\r\\n        <div [class.color__green]=\\\"usdFromXmr >= usdFromXmrWhenBought\\\" \\r\\n            [class.color__red]=\\\"usdFromXmr < usdFromXmrWhenBought\\\">\\r\\n          <br>\\r\\n          ROI: <strong>{{ usdFromXmr | currency }}</strong> ({{usdFromXmr / usdFromXmrWhenBought * 100 | number : '1.1-2'}}%)\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"currency-box\\\">\\r\\n      <div class=\\\"currency-box__contents\\\">\\r\\n        <h3>Bitcoins ({{btcCount}})</h3>\\r\\n        today at <strong>{{btcCurrentPrice | currency}}</strong>\\r\\n        <br><br>\\r\\n        \\r\\n        Investment: <strong>{{usdFromBtcWhenBought | currency }}</strong>\\r\\n        <br>\\r\\n        \\r\\n        on {{btcBuyDate | date}} at {{btcBuyPrice | currency}}\\r\\n\\r\\n        <div [class.color__green]=\\\"usdFromBtc >= usdFromBtcWhenBought\\\" \\r\\n            [class.color__red]=\\\"usdFromBtc < usdFromBtcWhenBought\\\">\\r\\n            <br>\\r\\n          ROI: <strong>{{ usdFromBtc | currency }}</strong> ({{usdFromBtc / usdFromBtcWhenBought * 100 | number : '1.1-2'}}%)\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"currency-box\\\">\\r\\n      <div class=\\\"currency-box__contents\\\">\\r\\n        <h3>Totals</h3>\\r\\n        <br>\\r\\n\\r\\n        Investment: <strong>{{totalInvestment | currency }}</strong>\\r\\n        <br>\\r\\n\\r\\n        <div [class.color__green]=\\\"totalReturn >= totalInvestment\\\" \\r\\n            [class.color__red]=\\\"totalReturn < totalInvestment\\\">\\r\\n          ROI: <strong>{{ totalReturn | currency }}</strong> ({{totalReturn / totalInvestment * 100 | number : '1.1-2'}}%)\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/w3/atomiCoconut/client/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".color__green {\\n  color: green; }\\n\\n.color__red {\\n  color: red; }\\n\\n.currency-box {\\n  width: 100%; }\\n  .currency-box .currency-box__contents {\\n    font-family: Arial, Helvetica, sans-serif;\\n    border: 1px solid blueviolet;\\n    padding: 20px;\\n    margin-bottom: 20px; }\\n    .currency-box .currency-box__contents h3 {\\n      margin: 0; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/w3/atomiCoconut/client/src/app/app.component.scss\n// module id = ../../../../../src/app/app.component.scss\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { AppService } from './app.service';\r\n\r\nimport {BehaviorSubject} from \"rxjs/BehaviorSubject\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  \r\n  title = 'app';\r\n  private xmr$ : BehaviorSubject<any>;\r\n  private xmrCount = 218;\r\n  private xmrBuyPrice = 50; //USD\r\n  private xmrBuyDate = new Date(2017, 5, 23);\r\n  private usdFromXmr = 0;\r\n  private usdFromXmrWhenBought = 0;\r\n  private xmrCurrentPrice = 0;\r\n\r\n  private btc$ : BehaviorSubject<any>;\r\n  private btcCount = 1.28129356;\r\n  private btcBuyPrice = 2359.99; //USD\r\n  private btcBuyDate = new Date(2017, 6, 19);\r\n  private usdFromBtc = 0;\r\n  private usdFromBtcWhenBought = 0;\r\n  private btcCurrentPrice = 0;\r\n\r\n  private totalInvestment = 0;\r\n  private totalReturn = 0;\r\n\r\n\r\n  constructor(private appService: AppService) {\r\n    \r\n    this.usdFromXmrWhenBought = this.xmrBuyPrice * this.xmrCount;\r\n    this.usdFromBtcWhenBought = this.btcBuyPrice * this.btcCount;\r\n    this.totalInvestment = this.usdFromBtcWhenBought + this.usdFromXmrWhenBought;\r\n\r\n    this.xmr$ = new BehaviorSubject<any>(null);\r\n    this.btc$ = new BehaviorSubject<any>(null);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    let methodTrace = `${this.constructor.name} > ngOnInit() > `; //for debugging\r\n    \r\n    this.appService.getPrices('xmr').subscribe(\r\n      (pricesData : any) => {\r\n        this.xmr$.next(pricesData);\r\n        this.xmrCurrentPrice = pricesData.price; \r\n        this.usdFromXmr = pricesData.price * this.xmrCount;\r\n        this.totalReturn += this.usdFromXmr; \r\n      },\r\n      (error : any) =>  console.error(`${methodTrace} There was an error trying to load Monero prices > ${error}`)\r\n    );\r\n\r\n    this.appService.getPrices().subscribe(\r\n      (pricesData : any) => {\r\n        this.btc$.next(pricesData);\r\n        this.btcCurrentPrice = pricesData.price;\r\n        this.usdFromBtc = pricesData.price * this.btcCount;\r\n        this.totalReturn += this.usdFromBtc;\r\n      },\r\n      (error : any) =>  console.error(`${methodTrace} There was an error trying to load Bitcoin prices > ${error}`)\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpModule } from '@angular/http';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AppService } from './app.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpModule\r\n  ],\r\n  providers: [AppService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/app.module.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\n\r\nimport {Observable} from \"rxjs/Rx\";\r\n\r\n@Injectable()\r\nexport class AppService {\r\n\r\n  private serverUrl : string = 'https://api.cryptonator.com/api/ticker/';\r\n  private serverUrl2 : string = '/node';\r\n  \r\n\r\n  constructor(private http : Http) {\r\n\r\n  }\r\n\r\n  getPrices(currency = 'btc') : Observable<any> {\r\n    \r\n    return this.http.get(`${this.serverUrl}${currency}-usd`)\r\n        .map(this.extractData)\r\n        .catch(this.handleError);\r\n  }\r\n\r\n  private extractData(res: Response) : any {\r\n    let body = res.json();\r\n    if (body.success === true) {\r\n      return body.ticker;\r\n    } else {\r\n      throw body;\r\n    }\r\n  }\r\n\r\n  private handleError (error: Response | any) {\r\n    // In a real world app, we might use a remote logging infrastructure\r\n    let errMsg: string;\r\n    if (error instanceof Response) {\r\n      const body = error.json() || '';\r\n      const err = body.error || JSON.stringify(body);\r\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\r\n    } else {\r\n      errMsg = error.message ? error.message : error.toString();\r\n    }\r\n    console.error(errMsg);\r\n    return Observable.throw(errMsg);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/app.service.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/main.ts"],"sourceRoot":"webpack:///"}