{"version":3,"sources":["C:/w3/atomiCoconut/client/configuration.ts","C:/w3/atomiCoconut/client/src/$_gendir lazy","C:/w3/atomiCoconut/client/src/app/app.component.html","C:/w3/atomiCoconut/client/src/app/app.component.scss","C:/w3/atomiCoconut/client/src/app/app.component.ts","C:/w3/atomiCoconut/client/src/app/app.module.ts","C:/w3/atomiCoconut/client/src/app/app.routing.module.ts","C:/w3/atomiCoconut/client/src/app/app.service.ts","C:/w3/atomiCoconut/client/src/app/auth-resolver.service.ts","C:/w3/atomiCoconut/client/src/app/auth.guard.ts","C:/w3/atomiCoconut/client/src/app/components/welcome/welcome.component.html","C:/w3/atomiCoconut/client/src/app/components/welcome/welcome.component.scss","C:/w3/atomiCoconut/client/src/app/components/welcome/welcome.component.ts","C:/w3/atomiCoconut/client/src/app/directives/equal-validator.directive.ts","C:/w3/atomiCoconut/client/src/app/modules/calculators/calculators-routing.module.ts","C:/w3/atomiCoconut/client/src/app/modules/calculators/calculators.module.ts","C:/w3/atomiCoconut/client/src/app/modules/calculators/components/calculators-dashboard/calculators-dashboard.component.html","C:/w3/atomiCoconut/client/src/app/modules/calculators/components/calculators-dashboard/calculators-dashboard.component.scss","C:/w3/atomiCoconut/client/src/app/modules/calculators/components/calculators-dashboard/calculators-dashboard.component.ts","C:/w3/atomiCoconut/client/src/app/modules/calculators/components/equity/equity.component.html","C:/w3/atomiCoconut/client/src/app/modules/calculators/components/equity/equity.component.scss","C:/w3/atomiCoconut/client/src/app/modules/calculators/components/equity/equity.component.ts","C:/w3/atomiCoconut/client/src/app/modules/custom-material-design/custom-material-design.module.ts","C:/w3/atomiCoconut/client/src/app/modules/investments/components/crypto-currency/crypto-currency.component.html","C:/w3/atomiCoconut/client/src/app/modules/investments/components/crypto-currency/crypto-currency.component.scss","C:/w3/atomiCoconut/client/src/app/modules/investments/components/crypto-currency/crypto-currency.component.ts","C:/w3/atomiCoconut/client/src/app/modules/investments/components/crypto-currency/crypto-currency.service.ts","C:/w3/atomiCoconut/client/src/app/modules/investments/components/investments-dashboard/investments-dashboard.component.html","C:/w3/atomiCoconut/client/src/app/modules/investments/components/investments-dashboard/investments-dashboard.component.scss","C:/w3/atomiCoconut/client/src/app/modules/investments/components/investments-dashboard/investments-dashboard.component.ts","C:/w3/atomiCoconut/client/src/app/modules/investments/investments-routing.module.ts","C:/w3/atomiCoconut/client/src/app/modules/investments/investments.module.ts","C:/w3/atomiCoconut/client/src/app/modules/shared/components/main-navigator/main-navigator.component.html","C:/w3/atomiCoconut/client/src/app/modules/shared/components/main-navigator/main-navigator.component.scss","C:/w3/atomiCoconut/client/src/app/modules/shared/components/main-navigator/main-navigator.component.ts","C:/w3/atomiCoconut/client/src/app/modules/shared/components/main-navigator/main-navigator.service.ts","C:/w3/atomiCoconut/client/src/app/modules/shared/shared.module.ts","C:/w3/atomiCoconut/client/src/app/modules/users/components/account-finance-info/account-finance-info.component.html","C:/w3/atomiCoconut/client/src/app/modules/users/components/account-finance-info/account-finance-info.component.scss","C:/w3/atomiCoconut/client/src/app/modules/users/components/account-finance-info/account-finance-info.component.ts","C:/w3/atomiCoconut/client/src/app/modules/users/components/account/account.component.html","C:/w3/atomiCoconut/client/src/app/modules/users/components/account/account.component.scss","C:/w3/atomiCoconut/client/src/app/modules/users/components/account/account.component.ts","C:/w3/atomiCoconut/client/src/app/modules/users/components/login/login.component.html","C:/w3/atomiCoconut/client/src/app/modules/users/components/login/login.component.scss","C:/w3/atomiCoconut/client/src/app/modules/users/components/login/login.component.ts","C:/w3/atomiCoconut/client/src/app/modules/users/components/register/register.component.html","C:/w3/atomiCoconut/client/src/app/modules/users/components/register/register.component.scss","C:/w3/atomiCoconut/client/src/app/modules/users/components/register/register.component.ts","C:/w3/atomiCoconut/client/src/app/modules/users/components/reset-password/reset-password.component.html","C:/w3/atomiCoconut/client/src/app/modules/users/components/reset-password/reset-password.component.scss","C:/w3/atomiCoconut/client/src/app/modules/users/components/reset-password/reset-password.component.ts","C:/w3/atomiCoconut/client/src/app/modules/users/models/account-finance.ts","C:/w3/atomiCoconut/client/src/app/modules/users/models/user.ts","C:/w3/atomiCoconut/client/src/app/modules/users/users-routing.module.ts","C:/w3/atomiCoconut/client/src/app/modules/users/users.module.ts","C:/w3/atomiCoconut/client/src/app/modules/users/users.service.ts","C:/w3/atomiCoconut/client/src/environments/environment.ts","C:/w3/atomiCoconut/client/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["export const configuration = {\r\n  defaultGravatarUrl : 'https://gravatar.com/avatar/7038663cc684aa330956752c7e6fe7d4?s=200'\r\n};\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/configuration.ts","function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/w3/atomiCoconut/client/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"inner mat-typography\\\">\\r\\n\\r\\n  <md-toolbar class=\\\"toolbar\\\" color=\\\"primary\\\">\\r\\n    <a class=\\\"toolbar__brand-name color__almost-white\\\" routerLink=\\\"/\\\"><span>AtomiCoconut</span></a>\\r\\n    <span class=\\\"example-spacer\\\"></span>\\r\\n    \\r\\n    <span *ngIf=\\\"!usersService.user\\\" fxLayoutAlign=\\\" center\\\">\\r\\n      <md-icon routerLink=\\\"/users/login\\\" class=\\\"toolbar__icon\\\">account_circle</md-icon>\\r\\n    </span>\\r\\n    <span *ngIf=\\\"usersService.user\\\" fxLayoutAlign=\\\" center\\\">\\r\\n      <img *ngIf=\\\"usersService.user.avatar\\\" \\r\\n          [mdMenuTriggerFor]=\\\"userMenu\\\" \\r\\n          class=\\\"toolbar__icon user__avatar\\\" \\r\\n          [src]=\\\"usersService.user.avatar\\\" \\r\\n      />\\r\\n      <md-icon *ngIf=\\\"!usersService.user.avatar\\\"\\r\\n          class=\\\"toolbar__icon user__icon--logged-in\\\" \\r\\n          [mdMenuTriggerFor]=\\\"userMenu\\\">\\r\\n        account_circle\\r\\n      </md-icon>\\r\\n      \\r\\n      <md-menu class=\\\"user__menu--logged-in\\\" #userMenu=\\\"mdMenu\\\" [overlapTrigger]=\\\"false\\\">\\r\\n        <button md-menu-item routerLink=\\\"/users/account\\\">\\r\\n          <md-icon>settings</md-icon>\\r\\n          <span>My account</span>\\r\\n        </button>\\r\\n        <button md-menu-item (click)=\\\"logout()\\\">\\r\\n          <md-icon>exit_to_app</md-icon>\\r\\n          <span>Logout</span>\\r\\n        </button>\\r\\n      </md-menu>\\r\\n    </span>\\r\\n    \\r\\n  </md-toolbar>\\r\\n  \\r\\n  <!-- Main navigator (chips) -->\\r\\n  <main-navigator></main-navigator>\\r\\n\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/w3/atomiCoconut/client/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".toolbar {\\n  margin-bottom: 10px; }\\n  .toolbar .toolbar__brand-name {\\n    text-decoration: none; }\\n  .toolbar .toolbar__icon {\\n    padding: 0 10px;\\n    cursor: pointer; }\\n  .toolbar .example-spacer {\\n    -ms-flex: 1 1 auto;\\n        flex: 1 1 auto; }\\n  .toolbar .user__avatar {\\n    border-radius: 50%;\\n    width: 30px;\\n    padding: 0 10px; }\\n  .toolbar .user__icon--logged-in {\\n    color: #28FE7C; }\\n\\n::ng-deep nav.navigation--main {\\n  margin-bottom: 20px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/w3/atomiCoconut/client/src/app/app.component.scss\n// module id = ../../../../../src/app/app.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { AppService } from './app.service';\r\nimport { UsersService } from './modules/users/users.service';\r\n\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { configuration } from \"../../configuration\";\r\nimport { User } from './modules/users/models/user';\r\nimport { Router } from '@angular/router';\r\nimport { MainNavigatorService } from './modules/shared/components/main-navigator/main-navigator.service';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  providers: [ MainNavigatorService ]\r\n})\r\nexport class AppComponent implements OnInit {\r\n  \r\n  title = 'app';\r\n  defaultGravatarUrl = configuration.defaultGravatarUrl;\r\n\r\n  constructor(private router : Router, private appService: AppService, private usersService : UsersService,\r\n    private mainNavigatorService : MainNavigatorService) { }\r\n\r\n  ngOnInit(): void {\r\n    let methodTrace = `${this.constructor.name} > ngOnInit() > `; //for debugging\r\n\r\n    //set the navigation links valid for this components\r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: null, selected: true },\r\n      { displayName: 'Investments', url: '/investments', selected: false },\r\n      { displayName: 'Calculators', url: '/calculators', selected: false }]);\r\n\r\n    this.usersService.getAuthenticatedUser().subscribe(\r\n      (data : any) => {\r\n        if (data && data.email) {\r\n          const user : User = new User(data.name, data.email, data.avatar, data.accessToInvestments);\r\n          this.usersService.user = user;\r\n        } else {\r\n          this.appService.consoleLog('info', `${methodTrace} User not logged in.`, data);\r\n          this.usersService.user = null;\r\n        }\r\n      }, \r\n      (error : any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error with the getAuthenticatedUser service.`, error);\r\n        this.usersService.user = null;\r\n      }\r\n    );\r\n  }\r\n\r\n  logout() : void {\r\n    let methodTrace = `${this.constructor.name} > logout() > `; //for debugging  \r\n    \r\n    this.usersService.logout().subscribe(\r\n      (data : any) => {\r\n        this.usersService.user = null;\r\n        this.router.navigate(['/']);\r\n      },\r\n      (error : any) =>  {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error with the logout service.`, error);\r\n      }\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpModule } from '@angular/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport 'hammerjs';\r\n\r\nimport { AppRoutingModule } from \"./app.routing.module\";\r\nimport { AppComponent } from './app.component';\r\nimport { AppService } from './app.service';\r\nimport { AuthResolver } from './auth-resolver.service';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { CustomMaterialDesignModule } from './modules/custom-material-design/custom-material-design.module';\r\nimport { UsersModule } from './modules/users/users.module';\r\nimport { InvestmentsModule } from './modules/investments/investments.module';\r\nimport { CalculatorsModule } from './modules/calculators/calculators.module';\r\nimport { WelcomeComponent } from './components/welcome/welcome.component';\r\nimport { SharedModule } from './modules/shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    HttpModule,\r\n    FlexLayoutModule,\r\n    CustomMaterialDesignModule,\r\n    UsersModule,\r\n    InvestmentsModule,\r\n    CalculatorsModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    WelcomeComponent\r\n  ],\r\n  providers: [AppService, AuthResolver, AuthGuard],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/app.module.ts","/**\r\n * Created by mpaoluc on 13/01/2017.\r\n */\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {AppComponent} from \"./app.component\";\r\nimport {AuthResolver} from './auth-resolver.service';\r\nimport { WelcomeComponent } from './components/welcome/welcome.component';\r\nconst appRoutes : Routes = [\r\n  {\r\n    path : '',\r\n    redirectTo : 'welcome',\r\n    pathMatch : 'full'\r\n  },\r\n  {\r\n    path : 'welcome',\r\n    component : WelcomeComponent\r\n  }\r\n  // {\r\n  //   path : 'page-not-found',\r\n  //   component : PageNotFoundComponent\r\n  // },\r\n  // {\r\n  //   path : '**',\r\n  //   component : PageNotFoundComponent\r\n  // }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(appRoutes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AppRoutingModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/app.routing.module.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\n\r\nimport {Observable} from \"rxjs/Rx\";\r\nimport { MdSnackBar } from '@angular/material';\r\nimport { environment } from '../environments/environment';\r\n\r\n@Injectable()\r\nexport class AppService {\r\n\r\n  constructor(private http : Http, public snackBar: MdSnackBar) {}\r\n\r\n  /**\r\n   * Extract data from a server response\r\n   * @param res \r\n   */\r\n  public extractData(res: Response) : any {\r\n    let body = res.json();\r\n\r\n    if (body.codeno === 200 && body.status === 'success') {\r\n      return body.data;\r\n    } else {\r\n      throw body;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle server service errors and parse the result in an object\r\n   * @param error \r\n   */\r\n  public handleError (error: Response | any) {\r\n    // In a real world app, we might use a remote logging infrastructure\r\n    let errObj: any = {};\r\n    if (error instanceof Response) {\r\n      errObj = error.json() || {};\r\n    } else {\r\n      errObj = error || {};\r\n    }\r\n    \r\n    return Observable.throw(errObj);\r\n  }\r\n\r\n  /**\r\n   * Shows messages in snackbar component\r\n   * @param message . The text to show\r\n   * @param duration . The duration in milliseconds . Optional\r\n   * @param actionName . An action name to close the message on click. Optional\r\n   */\r\n  showResults(message : string, duration : number = 5000, actionName : string = '') {\r\n    let snackBarRef = this.snackBar.open(message, actionName ? actionName : null, {\r\n      duration,\r\n      extraClasses: ['snack-bar--simple']\r\n    });\r\n\r\n    snackBarRef.onAction().subscribe(() => {\r\n      if (snackBarRef.instance.action === 'Close') {\r\n        snackBarRef.dismiss();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Show logs in the console if enabled in the current environment\r\n   * @param type . Error type\r\n   * @param message . The message to show\r\n   * @param params . Any extra parameters to list in the log.\r\n   */\r\n  consoleLog(type : 'log' | 'debug' | 'warn' | 'info' | 'error', message : string, ...params) {\r\n    if (environment.showLogs) {\r\n      console[type](message, params);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/app.service.ts","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Router, Resolve, RouterStateSnapshot, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from './modules/users/models/user';\r\nimport { UsersService } from './modules/users/users.service';\r\nimport { AppService } from './app.service';\r\n\r\n@Injectable()\r\nexport class AuthResolver implements Resolve<User> {\r\n  constructor(private appService : AppService, private usersService : UsersService, private router : Router) { }\r\n  \r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): User | Observable<User> | Promise<User> {\r\n    let methodTrace = `${this.constructor.name} > resolve() > `; //for debugging  \r\n    \r\n    return this.usersService.getAuthenticatedUser().map(\r\n      (data : any) => {\r\n        if (data && data.email) {\r\n          const user : User = new User(data.name, data.email, data.avatar, data.accessToInvestments);          \r\n          this.usersService.user = user;\r\n          return user;\r\n        } else {\r\n          this.appService.consoleLog('info', `${methodTrace} User not logged in.`, data);\r\n          this.usersService.user = null;\r\n          this.router.navigate(['/users/login']);\r\n          return null;\r\n        }\r\n      }, \r\n      (error : any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error with the getAuthenticatedUser service.`, error);\r\n        this.usersService.user = null;\r\n        this.router.navigate(['/users/login']);\r\n        return null;\r\n      }\r\n    );\r\n  }\r\n  \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/auth-resolver.service.ts","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { UsersService } from './modules/users/users.service';\r\nimport { User } from './modules/users/user';\r\nimport { AppService } from './app.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private appService : AppService, private usersService : UsersService, private router : Router) {}\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) : Observable<boolean> | Promise<boolean> | boolean {\r\n    let methodTrace = `${this.constructor.name} > canActivate() > `; //for debugging\r\n    this.usersService.routerRedirectUrl = state.url;\r\n    console.log(state, next);\r\n\r\n    return this.usersService.getAuthenticatedUser().map(\r\n      (data : any) => {\r\n        if (data && data.email) {\r\n          this.usersService.routerRedirectUrl = null; //we don't need this\r\n          return true;\r\n        } else {\r\n          this.appService.consoleLog('info', `${methodTrace} User not logged in.`, data);\r\n          this.router.navigate(['/users/login']);\r\n\r\n          return false;\r\n        }\r\n      }, \r\n      (error : any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error with the getAuthenticatedUser service.`, error);\r\n        this.router.navigate(['/users/login']);\r\n        return false;\r\n      }\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/auth.guard.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/w3/atomiCoconut/client/src/app/components/welcome/welcome.component.html\n// module id = ../../../../../src/app/components/welcome/welcome.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/w3/atomiCoconut/client/src/app/components/welcome/welcome.component.scss\n// module id = ../../../../../src/app/components/welcome/welcome.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { MainNavigatorService } from '../../modules/shared/components/main-navigator/main-navigator.service';\r\n\r\n@Component({\r\n  selector: 'app-welcome',\r\n  templateUrl: './welcome.component.html',\r\n  styleUrls: ['./welcome.component.scss']\r\n})\r\nexport class WelcomeComponent implements OnInit {\r\n\r\n  constructor(private mainNavigatorService : MainNavigatorService) { }\r\n\r\n  ngOnInit() {\r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: null, selected: true },\r\n      { displayName: 'Investments', url: '/investments', selected: false },\r\n      { displayName: 'Calculators', url: '/calculators', selected: false   }]);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/components/welcome/welcome.component.ts","import { Directive, Input, Attribute } from '@angular/core';\r\nimport { ValidatorFn, Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[equalvalidator]',\r\n  providers: [{provide: NG_VALIDATORS, useExisting: EqualValidatorDirective, multi: true}]\r\n})\r\nexport class EqualValidatorDirective implements Validator {\r\n  \r\n  constructor(@Attribute('equalvalidator') public equalFormControlName: string,\r\n      @Attribute('reverse') public reverse: string) {}\r\n  \r\n\r\n  private get isReverse() {\r\n    if (!this.reverse) {\r\n      return false;\r\n    }\r\n\r\n    return this.reverse === 'true' ? true : false;\r\n  }\r\n\r\n  validate(control : AbstractControl) : { [key : string] : any } {\r\n    const equalsFormControl = control.root.get(this.equalFormControlName);\r\n    if (equalsFormControl && equalsFormControl.value !== control.value) {\r\n      if (this.isReverse) {\r\n        equalsFormControl.setErrors({ 'equalvalidator' : true });\r\n      } else {\r\n        return { 'equalvalidator' : true };\r\n      }\r\n    } else if (equalsFormControl) {\r\n      //value is the same on both\r\n      if (this.reverse) {\r\n        delete equalsFormControl.errors['equalvalidator'];\r\n        if (!Object.keys(equalsFormControl.errors).length) {\r\n          equalsFormControl.setErrors(null);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/directives/equal-validator.directive.ts","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { EquityComponent } from './components/equity/equity.component';\r\nimport { CalculatorsDashboardComponent } from './components/calculators-dashboard/calculators-dashboard.component';\r\n\r\nconst routes: Routes = [{\r\n  path : 'calculators',\r\n  children : [\r\n    { path : '', component : CalculatorsDashboardComponent },\r\n    { path : 'equity', component : EquityComponent }\r\n  ]\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CalculatorsRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/modules/calculators/calculators-routing.module.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { CustomMaterialDesignModule } from '../../modules/custom-material-design/custom-material-design.module';\r\nimport { SharedModule } from '../../modules/shared/shared.module';\r\nimport { CalculatorsRoutingModule } from './calculators-routing.module';\r\nimport { EquityComponent } from './components/equity/equity.component';\r\nimport { CalculatorsDashboardComponent } from './components/calculators-dashboard/calculators-dashboard.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CalculatorsRoutingModule,\r\n    FormsModule,\r\n    FlexLayoutModule,\r\n    CustomMaterialDesignModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [EquityComponent, CalculatorsDashboardComponent]\r\n})\r\nexport class CalculatorsModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/modules/calculators/calculators.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/w3/atomiCoconut/client/src/app/modules/calculators/components/calculators-dashboard/calculators-dashboard.component.html\n// module id = ../../../../../src/app/modules/calculators/components/calculators-dashboard/calculators-dashboard.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/w3/atomiCoconut/client/src/app/modules/calculators/components/calculators-dashboard/calculators-dashboard.component.scss\n// module id = ../../../../../src/app/modules/calculators/components/calculators-dashboard/calculators-dashboard.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { MainNavigatorService } from '../../../shared/components/main-navigator/main-navigator.service';\r\n\r\n@Component({\r\n  selector: 'app-calculators-dashboard',\r\n  templateUrl: './calculators-dashboard.component.html',\r\n  styleUrls: ['./calculators-dashboard.component.scss']\r\n})\r\nexport class CalculatorsDashboardComponent implements OnInit {\r\n\r\n  constructor(private mainNavigatorService : MainNavigatorService) { }\r\n\r\n  ngOnInit() {\r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: '/welcome', selected: false },\r\n      { displayName: 'Calculators', url: null, selected: true },\r\n      { displayName: 'Equity', url: '/calculators/equity', selected: false }]);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/modules/calculators/components/calculators-dashboard/calculators-dashboard.component.ts","module.exports = \"<form class=\\\"form__container form__equity-calc\\\" (ngSubmit)=\\\"onSubmit()\\\" #equityForm=\\\"ngForm\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" >\\r\\n  \\r\\n  <section fxLayout=\\\"column\\\" class=\\\"form__fields\\\">\\r\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap.gt-xs=\\\"10px\\\" class=\\\"form__fields__row\\\">\\r\\n      <!-- Purchase price -->\\r\\n      <md-input-container fxFlex fxFlex.gt-xs=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n        <input mdInput type=\\\"number\\\" id=\\\"purchasePrice\\\" name=\\\"purchasePrice\\\" placeholder=\\\"Purchase price\\\" \\r\\n            [(ngModel)]=\\\"model.purchasePrice\\\" \\r\\n            required\\r\\n            value=\\\"model.purchasePrice\\\"\\r\\n            #purchasePrice=\\\"ngModel\\\">\\r\\n  \\r\\n        <md-error *ngIf=\\\"purchasePrice.invalid && (purchasePrice.dirty || purchasePrice.touched) && purchasePrice.errors.required\\\">Purchase price is required</md-error>\\r\\n      </md-input-container>\\r\\n      \\r\\n      <!-- Market value -->\\r\\n      <md-input-container fxFlex fxFlex.gt-xs=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n        <input mdInput type=\\\"number\\\" id=\\\"marketValue\\\" name=\\\"marketValue\\\" placeholder=\\\"Market value\\\" \\r\\n            [(ngModel)]=\\\"model.marketValue\\\" \\r\\n            required\\r\\n            value=\\\"model.marketValue\\\"\\r\\n            #marketValue=\\\"ngModel\\\">\\r\\n  \\r\\n        <md-error *ngIf=\\\"marketValue.invalid && (marketValue.dirty || marketValue.touched) && marketValue.errors.required\\\">Market value is required</md-error>\\r\\n      </md-input-container>\\r\\n    </div>\\r\\n  </section>\\r\\n\\r\\n  <section fxLayout=\\\"column\\\" class=\\\"form__fields\\\">\\r\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap.gt-xs=\\\"10px\\\" class=\\\"form__fields__row\\\">\\r\\n      <!-- Loan coverage -->\\r\\n      <md-input-container fxFlex fxFlex.gt-xs=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n        <input mdInput type=\\\"number\\\" id=\\\"loanCoverage\\\" name=\\\"loanCoverage\\\" placeholder=\\\"Loan coverage %\\\" \\r\\n            [(ngModel)]=\\\"model.loanCoverage\\\" \\r\\n            required loanCoverage\\r\\n            value=\\\"model.loanCoverage\\\"\\r\\n            #loanCoverage=\\\"ngModel\\\">\\r\\n  \\r\\n        <md-error *ngIf=\\\"loanCoverage.invalid && (loanCoverage.dirty || loanCoverage.touched) && loanCoverage.errors.required\\\">Loan coverage is required</md-error>\\r\\n      </md-input-container>\\r\\n\\r\\n      <!-- Savings -->\\r\\n      <md-input-container fxFlex fxFlex.gt-xs=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n        <input mdInput type=\\\"number\\\" id=\\\"savings\\\" name=\\\"savings\\\" placeholder=\\\"Current savings\\\" \\r\\n            [(ngModel)]=\\\"model.savings\\\" \\r\\n            value=\\\"model.savings\\\"\\r\\n            #savings=\\\"ngModel\\\">\\r\\n      </md-input-container>\\r\\n\\r\\n      <!-- Add renovations checkbox -->\\r\\n      <md-slide-toggle color=\\\"accent\\\" class=\\\"form__field form__field__toogle form__field__toogle--add-reno\\\"\\r\\n          [(ngModel)]=\\\"model.addRenovations\\\" name=\\\"addRenovations\\\" id=\\\"addRenovations\\\">\\r\\n        \\r\\n        Add renovations data\\r\\n      </md-slide-toggle>\\r\\n      <!-- <md-checkbox fxFlex fxFlex.gt-xs=\\\"200px\\\" class=\\\"form__action\\\" [(ngModel)]=\\\"model.addRenovations\\\" name=\\\"addRenovations\\\" id=\\\"addRenovations\\\">Add renovations data</md-checkbox> -->\\r\\n    </div>\\r\\n  </section>\\r\\n\\r\\n  <section fxLayout=\\\"column\\\" class=\\\"form__fields\\\" *ngIf=\\\"model.addRenovations\\\">\\r\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap.gt-xs=\\\"10px\\\" class=\\\"form__fields__row\\\">\\r\\n      <!-- Renovation cost -->\\r\\n      <md-input-container fxFlex fxFlex.gt-xs=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n        <input mdInput type=\\\"number\\\" id=\\\"renovationCost\\\" name=\\\"renovationCost\\\" placeholder=\\\"Renovation cost\\\" \\r\\n            [(ngModel)]=\\\"model.renovationCost\\\" \\r\\n            value=\\\"model.renovationCost\\\"\\r\\n            #renovationCost=\\\"ngModel\\\">\\r\\n      </md-input-container>\\r\\n      \\r\\n      <!-- New market value -->\\r\\n      <md-input-container fxFlex fxFlex.gt-xs=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n        <input mdInput type=\\\"number\\\" id=\\\"newMarketValue\\\" name=\\\"newMarketValue\\\" placeholder=\\\"After renovations market value\\\" \\r\\n            [(ngModel)]=\\\"model.newMarketValue\\\" \\r\\n            value=\\\"model.newMarketValue\\\"\\r\\n            #newMarketValue=\\\"ngModel\\\">\\r\\n      </md-input-container>\\r\\n      \\r\\n      <!-- First year repayment -->\\r\\n      <md-input-container fxFlex fxFlex.gt-xs=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n        <input mdInput type=\\\"number\\\" id=\\\"firstYearRepayment\\\" name=\\\"firstYearRepayment\\\" placeholder=\\\"First year loan repayments\\\" \\r\\n            [(ngModel)]=\\\"model.firstYearRepayment\\\" \\r\\n            value=\\\"model.firstYearRepayment\\\"\\r\\n            #firstYearRepayment=\\\"ngModel\\\">\\r\\n      </md-input-container>\\r\\n    </div>\\r\\n  </section>\\r\\n\\r\\n</form>\\r\\n\\r\\n<section  class=\\\"\\\">\\r\\n  <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxFlex fxFlex.gt-xs=\\\"620px\\\">\\r\\n    <md-card fxFlex>\\r\\n      <md-card-title class=\\\"md-card-title--ac\\\">Initial figures</md-card-title>\\r\\n      <md-card-content>\\r\\n        <div><label>Loan amount: </label><span>{{loanAmount}}</span></div>\\r\\n        <div><label>Deposit amount: </label><span>{{depositAmount}}</span></div>\\r\\n        <div><label>Discount: </label><span>{{discount}}</span></div>\\r\\n        <div><label>Equity: </label><span>{{equity}}</span></div>\\r\\n      </md-card-content>\\r\\n    </md-card>\\r\\n\\r\\n    <md-card fxFlex *ngIf=\\\"model.addRenovations\\\">\\r\\n      <md-card-title class=\\\"md-card-title--ac\\\">After renovations figures</md-card-title>\\r\\n      <md-card-content>\\r\\n        <div><label>Usable equity: </label><span>{{usableEquityAfterReno}}</span></div>\\r\\n      </md-card-content>\\r\\n    </md-card>\\r\\n  </div>\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/w3/atomiCoconut/client/src/app/modules/calculators/components/equity/equity.component.html\n// module id = ../../../../../src/app/modules/calculators/components/equity/equity.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".form__equity-calc .form__field__toogle--add-reno {\\n  margin-bottom: 20px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/w3/atomiCoconut/client/src/app/modules/calculators/components/equity/equity.component.scss\n// module id = ../../../../../src/app/modules/calculators/components/equity/equity.component.scss\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MainNavigatorService } from '../../../shared/components/main-navigator/main-navigator.service';\r\n\r\n@Component({\r\n  selector: 'app-equity',\r\n  templateUrl: './equity.component.html',\r\n  styleUrls: ['./equity.component.scss']\r\n})\r\nexport class EquityComponent implements OnInit {\r\n  @ViewChild('equityForm') form;\r\n\r\n  private loanAmount : number = 0;\r\n  private discount : number = 0;\r\n  private equity : number = 0;\r\n  private depositAmount : number = 0;\r\n  private usableEquityAfterReno : number = 0;\r\n\r\n  private model : any = { \r\n    purchasePrice : 0,\r\n    marketValue : 0,\r\n    loanCoverage : 0.8,\r\n    savings : 0,\r\n    renovationCost : 0,\r\n    newMarketValue : 0,\r\n    firstYearRepayment : 0,\r\n    addRenovations : false\r\n  }\r\n\r\n  constructor(private mainNavigatorService : MainNavigatorService) { }\r\n\r\n  ngOnInit() {\r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: '/welcome', selected: false },\r\n      { displayName: 'Calculators', url: '/calculators', selected: false },\r\n      { displayName: 'Equity', url: null, selected: true }]);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.form.valueChanges.debounceTime(500).subscribe(values => {\r\n      this.loanAmount = values.purchasePrice * values.loanCoverage;\r\n      this.discount = values.marketValue - values.purchasePrice;\r\n      this.depositAmount = values.purchasePrice - this.loanAmount;\r\n      this.equity = values.savings + this.discount + this.depositAmount;\r\n      if (values.addRenovations) {\r\n        this.usableEquityAfterReno = values.newMarketValue * 0.8 - this.loanAmount + values.firstYearRepayment;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/modules/calculators/components/equity/equity.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {MaterialModule} from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MaterialModule],\r\n  exports: [MaterialModule]\r\n})\r\nexport class CustomMaterialDesignModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/modules/custom-material-design/custom-material-design.module.ts","module.exports = \"<md-card class=\\\"currency-card\\\">\\r\\n  <md-card-header>\\r\\n    <div md-card-avatar \\r\\n        class=\\\"header-image\\\"\\r\\n        [class.header-image__xmr]=\\\"cryptoCurrency === 'xmr'\\\"\\r\\n        [class.header-image__btc]=\\\"cryptoCurrency === 'btc'\\\">\\r\\n    </div>\\r\\n    <md-card-title>{{cryptoCurrency === 'xmr' ? 'Monero' : 'Bitcoin' }} ({{cryptoCurrencyCount}})</md-card-title>\\r\\n    <md-card-subtitle>\\r\\n      today at <strong>{{cryptoCurrencyCurrentPrice | currency}}</strong>\\r\\n    </md-card-subtitle>\\r\\n  </md-card-header>\\r\\n  <md-card-content>\\r\\n    Investment: <strong>{{usdFromCryptoCurrencyWhenBought | currency }}</strong> \\r\\n    <br>\\r\\n\\r\\n    on {{cryptoCurrencyBuyDate | date}} at {{cryptoCurrencyBuyPrice | currency}}\\r\\n\\r\\n    <div [class.color__green]=\\\"usdFromCryptoCurrency >= usdFromCryptoCurrencyWhenBought\\\" \\r\\n        [class.color__red]=\\\"usdFromCryptoCurrency < usdFromCryptoCurrencyWhenBought\\\">\\r\\n      <br>\\r\\n      ROI: <strong>{{ usdFromCryptoCurrency | currency }}</strong> ({{usdFromCryptoCurrency / usdFromCryptoCurrencyWhenBought * 100 | number : '1.1-2'}}%)\\r\\n    </div>\\r\\n  </md-card-content>\\r\\n</md-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/w3/atomiCoconut/client/src/app/modules/investments/components/crypto-currency/crypto-currency.component.html\n// module id = ../../../../../src/app/modules/investments/components/crypto-currency/crypto-currency.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".currency-card {\\n  text-align: center; }\\n  .currency-card .header-image {\\n    background-size: cover; }\\n    .currency-card .header-image.header-image__xmr {\\n      background-image: url(\\\"/assets/images/xmr.png\\\"); }\\n    .currency-card .header-image.header-image__btc {\\n      background-image: url(\\\"/assets/images/btc.png\\\"); }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/w3/atomiCoconut/client/src/app/modules/investments/components/crypto-currency/crypto-currency.component.scss\n// module id = ../../../../../src/app/modules/investments/components/crypto-currency/crypto-currency.component.scss\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { CrytoCurrencyService } from './crypto-currency.service';\r\n\r\nimport {BehaviorSubject} from \"rxjs/BehaviorSubject\";\r\n\r\n@Component({\r\n  selector: 'crypto-currency',\r\n  templateUrl: './crypto-currency.component.html',\r\n  styleUrls: ['./crypto-currency.component.scss'],\r\n  providers: [ CrytoCurrencyService ]\r\n})\r\nexport class CryptoCurrencyComponent implements OnInit {\r\n\r\n  private cryptoCurrency$ : BehaviorSubject<any>;\r\n  @Input() cryptoCurrency : string;\r\n  @Input() cryptoCurrencyCount : number;\r\n  @Input() cryptoCurrencyBuyPrice : number; //USD\r\n  @Input() cryptoCurrencyBuyDate : Date;\r\n  private usdFromCryptoCurrency : number = 0;\r\n  private usdFromCryptoCurrencyWhenBought : number = 0;\r\n  private cryptoCurrencyCurrentPrice : number = 0;\r\n  @Output() totalReturns: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(private crytoCurrencyService: CrytoCurrencyService) {\r\n    this.cryptoCurrency$ = new BehaviorSubject<any>(null);\r\n  }\r\n\r\n  ngOnInit() : void {\r\n    let methodTrace = `${this.constructor.name} > ngOnInit() > `; //for debugging\r\n    \r\n    this.usdFromCryptoCurrencyWhenBought = this.cryptoCurrencyBuyPrice * this.cryptoCurrencyCount;\r\n    this.crytoCurrencyService.getPrices(this.cryptoCurrency).subscribe(\r\n      (pricesData : any) => {\r\n        this.cryptoCurrency$.next(pricesData);\r\n        this.cryptoCurrencyCurrentPrice = pricesData.price; \r\n        this.usdFromCryptoCurrency = pricesData.price * this.cryptoCurrencyCount;\r\n        this.totalReturns.emit({\r\n          usdFromCryptoCurrencyWhenBought : this.usdFromCryptoCurrencyWhenBought,\r\n          usdFromCryptoCurrency : this.usdFromCryptoCurrency\r\n        }); \r\n      },\r\n      (error : any) =>  console.error(`${methodTrace} There was an error trying to load Monero prices > ${error}`)\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/modules/investments/components/crypto-currency/crypto-currency.component.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\n\r\nimport {Observable} from \"rxjs/Rx\";\r\n\r\n@Injectable()\r\nexport class CrytoCurrencyService {\r\n\r\n  private serverUrl : string = 'https://api.cryptonator.com/api/ticker/';\r\n  \r\n\r\n  constructor(private http : Http) {}\r\n\r\n  getPrices(currency = 'btc') : Observable<any> {\r\n    \r\n    return this.http.get(`${this.serverUrl}${currency}-usd`)\r\n        .map(this.extractData)\r\n        .catch(this.handleError);\r\n  }\r\n\r\n  private extractData(res: Response) : any {\r\n    let body = res.json();\r\n    if (body.success === true) {\r\n      return body.ticker;\r\n    } else {\r\n      throw body;\r\n    }\r\n  }\r\n\r\n  private handleError (error: Response | any) {\r\n    // In a real world app, we might use a remote logging infrastructure\r\n    let errMsg: string;\r\n    if (error instanceof Response) {\r\n      const body = error.json() || '';\r\n      const err = body.error || JSON.stringify(body);\r\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\r\n    } else {\r\n      errMsg = error.message ? error.message : error.toString();\r\n    }\r\n    \r\n    return Observable.throw(errMsg);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/modules/investments/components/crypto-currency/crypto-currency.service.ts","module.exports = \"<div *ngIf=\\\"showInvestments\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n  <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n    <crypto-currency fxFlex \\r\\n      [cryptoCurrency]=\\\"'xmr'\\\"\\r\\n      [cryptoCurrencyCount]=\\\"218.85627651\\\"\\r\\n      [cryptoCurrencyBuyPrice]=\\\"50\\\"\\r\\n      [cryptoCurrencyBuyDate]=\\\"xmrBuyDate\\\"\\r\\n      (totalReturns)=\\\"setTotals($event)\\\">\\r\\n    </crypto-currency>\\r\\n\\r\\n    <crypto-currency fxFlex\\r\\n      [cryptoCurrency]=\\\"'btc'\\\"\\r\\n      [cryptoCurrencyCount]=\\\"1.28129356\\\"\\r\\n      [cryptoCurrencyBuyPrice]=\\\"2359.99\\\"\\r\\n      [cryptoCurrencyBuyDate]=\\\"btcBuyDate\\\"\\r\\n      (totalReturns)=\\\"setTotals($event)\\\">\\r\\n    </crypto-currency>\\r\\n  </div>\\r\\n\\r\\n  <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n    <crypto-currency fxFlex \\r\\n      [cryptoCurrency]=\\\"'xmr'\\\"\\r\\n      [cryptoCurrencyCount]=\\\"5.94093753\\\"\\r\\n      [cryptoCurrencyBuyPrice]=\\\"87.5282\\\"\\r\\n      [cryptoCurrencyBuyDate]=\\\"xmrBuyDate2\\\"\\r\\n      (totalReturns)=\\\"setTotals($event)\\\">\\r\\n    </crypto-currency>\\r\\n\\r\\n    <crypto-currency fxFlex \\r\\n      [cryptoCurrency]=\\\"'xmr'\\\"\\r\\n      [cryptoCurrencyCount]=\\\"5.72806551\\\"\\r\\n      [cryptoCurrencyBuyPrice]=\\\"90.9556\\\"\\r\\n      [cryptoCurrencyBuyDate]=\\\"xmrBuyDate3\\\"\\r\\n      (totalReturns)=\\\"setTotals($event)\\\">\\r\\n    </crypto-currency>\\r\\n  </div>\\r\\n\\r\\n  <md-card fxFlex class=\\\"totals-card\\\">\\r\\n    <md-card-content fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"10px\\\"\\r\\n        fxLayoutAlign=\\\"space-around center\\\">\\r\\n      <p>Total Investments: <strong>{{totalInvestment | currency }}</strong></p>\\r\\n      <p [class.color__green]=\\\"totalReturn >= totalInvestment\\\" \\r\\n          [class.color__red]=\\\"totalReturn < totalInvestment\\\">\\r\\n        Total ROI: <strong>{{ totalReturn | currency }}</strong> ({{totalReturn / totalInvestment * 100 | number : '1.1-2'}}%)\\r\\n      </p>\\r\\n    </md-card-content>\\r\\n  </md-card>\\r\\n  \\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"!showInvestments\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n  <md-card fxFlex class=\\\"totals-card\\\">\\r\\n    <md-card-content fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"10px\\\"\\r\\n        fxLayoutAlign=\\\"space-around center\\\">\\r\\n      <p>\\r\\n        You do not have any investment to show\\r\\n      </p>\\r\\n    </md-card-content>\\r\\n  </md-card>\\r\\n  \\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/w3/atomiCoconut/client/src/app/modules/investments/components/investments-dashboard/investments-dashboard.component.html\n// module id = ../../../../../src/app/modules/investments/components/investments-dashboard/investments-dashboard.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".totals-card {\\n  text-align: center; }\\n  .totals-card md-card-content p {\\n    margin-bottom: 0; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/w3/atomiCoconut/client/src/app/modules/investments/components/investments-dashboard/investments-dashboard.component.scss\n// module id = ../../../../../src/app/modules/investments/components/investments-dashboard/investments-dashboard.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { MainNavigatorService } from '../../../shared/components/main-navigator/main-navigator.service';\r\nimport {User} from '../../../users/user';\r\n\r\n@Component({\r\n  selector: 'investments-dashboard',\r\n  templateUrl: './investments-dashboard.component.html',\r\n  styleUrls: ['./investments-dashboard.component.scss']\r\n})\r\nexport class InvestmentsDashboardComponent implements OnInit {\r\n  private xmrBuyDate : Date = new Date(2017, 5, 23); //month minus 1, 5 = june\r\n  private xmrBuyDate2 : Date = new Date(2017, 8, 23);\r\n  private xmrBuyDate3 : Date = new Date(2017, 8, 25);\r\n  private btcBuyDate : Date = new Date(2017, 6, 19);\r\n  private totalInvestment = 0;\r\n  private totalReturn = 0;\r\n  private showInvestments = false;\r\n\r\n  constructor(private route : ActivatedRoute, private mainNavigatorService : MainNavigatorService) { }\r\n\r\n  ngOnInit() {\r\n    let methodTrace = `${this.constructor.name} > ngOnInit() > `; //for debugging\r\n\r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: '/welcome', selected: false },\r\n      { displayName: 'Investments', url: null, selected: true }\r\n    ]);\r\n\r\n    //get authUser from resolver\r\n    this.route.data.subscribe((data: { authUser: User }) => {\r\n      this.showInvestments = data.authUser.accessToInvestments;\r\n    });\r\n  }\r\n\r\n  setTotals(totalReturns : any) : void {\r\n    this.totalReturn += totalReturns.usdFromCryptoCurrency;\r\n    this.totalInvestment += totalReturns.usdFromCryptoCurrencyWhenBought;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/modules/investments/components/investments-dashboard/investments-dashboard.component.ts","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { InvestmentsDashboardComponent } from './components/investments-dashboard/investments-dashboard.component';\r\nimport { AuthGuard } from '../../auth.guard';\r\nimport { AuthResolver } from '../../auth-resolver.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path : 'investments',\r\n    canActivate: [ AuthGuard ],\r\n    children : [\r\n      { \r\n        path : '', \r\n        component : InvestmentsDashboardComponent,\r\n        resolve : {\r\n          authUser : AuthResolver\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class InvestmentsRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/modules/investments/investments-routing.module.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { InvestmentsRoutingModule } from './investments-routing.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport { CustomMaterialDesignModule } from '../../modules/custom-material-design/custom-material-design.module';\r\nimport { SharedModule } from '../../modules/shared/shared.module';\r\nimport { InvestmentsDashboardComponent } from './components/investments-dashboard/investments-dashboard.component';\r\nimport { CryptoCurrencyComponent } from './components/crypto-currency/crypto-currency.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    InvestmentsRoutingModule,\r\n    FormsModule,\r\n    FlexLayoutModule,\r\n    CustomMaterialDesignModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    CryptoCurrencyComponent,\r\n    InvestmentsDashboardComponent\r\n  ],\r\n  providers: []\r\n})\r\nexport class InvestmentsModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/modules/investments/investments.module.ts","module.exports = \"<nav class=\\\"navigation--main\\\">\\r\\n  <md-chip-list>\\r\\n    <md-chip *ngFor=\\\"let link of links\\\" [routerLink]=\\\"link.url\\\" [selected]=\\\"link.selected\\\">{{link.displayName}}</md-chip>\\r\\n  </md-chip-list>      \\r\\n</nav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/w3/atomiCoconut/client/src/app/modules/shared/components/main-navigator/main-navigator.component.html\n// module id = ../../../../../src/app/modules/shared/components/main-navigator/main-navigator.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/w3/atomiCoconut/client/src/app/modules/shared/components/main-navigator/main-navigator.component.scss\n// module id = ../../../../../src/app/modules/shared/components/main-navigator/main-navigator.component.scss\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\r\nimport { MainNavigatorService } from './main-navigator.service';\r\n@Component({\r\n  selector: 'main-navigator',\r\n  templateUrl: './main-navigator.component.html',\r\n  styleUrls: ['./main-navigator.component.scss']\r\n})\r\nexport class MainNavigatorComponent implements OnInit {\r\n  \r\n  links : any;\r\n  \r\n  constructor(private mainNavigatorService : MainNavigatorService) { }\r\n\r\n  ngOnInit() {\r\n    this.mainNavigatorService.links$.subscribe((links : any[]) => this.links = links);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/modules/shared/components/main-navigator/main-navigator.component.ts","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class MainNavigatorService {\r\n  \r\n  private linksSource : BehaviorSubject<any[]>; //Observable source\r\n  links$ : Observable<any[]>; //Observable stream\r\n\r\n  constructor() {\r\n    this.linksSource = new BehaviorSubject<any[]>(null);\r\n    this.links$ = this.linksSource.asObservable();\r\n  }\r\n\r\n  //links source feeder\r\n  setLinks(newLinks : any[]) {\r\n    this.linksSource.next(newLinks);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/modules/shared/components/main-navigator/main-navigator.service.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { MainNavigatorComponent } from './components/main-navigator/main-navigator.component';\r\nimport { CustomMaterialDesignModule } from '../../modules/custom-material-design/custom-material-design.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    CustomMaterialDesignModule\r\n  ],\r\n  exports: [ MainNavigatorComponent ],\r\n  declarations: [ MainNavigatorComponent ]\r\n})\r\nexport class SharedModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/modules/shared/shared.module.ts","module.exports = \"<form class=\\\"form__container form__account-finance\\\" (ngSubmit)=\\\"onSubmit()\\\" #financeForm=\\\"ngForm\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" >\\n\\n  <section fxLayout=\\\"column\\\" class=\\\"form__fields\\\">\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap.gt-xs=\\\"10px\\\" class=\\\"form__fields__row\\\">\\n      <!-- Active income -->\\n      <md-input-container fxFlex fxFlex.gt-xs=\\\"200px\\\" class=\\\"form__field\\\">\\n        <input mdInput type=\\\"number\\\" id=\\\"activeIncome\\\" name=\\\"activeIncome\\\" placeholder=\\\"Active Income\\\" \\n            [(ngModel)]=\\\"model.activeIncome\\\" \\n            value=\\\"model.activeIncome\\\"\\n            #activeIncome=\\\"ngModel\\\">\\n        <md-hint align=\\\"start\\\">Annual income amount pre-tax.</md-hint>\\n      </md-input-container>\\n      \\n      <!-- Tax rate -->\\n      <md-input-container fxFlex fxFlex.gt-xs=\\\"200px\\\" class=\\\"form__field\\\">\\n        <input mdInput type=\\\"number\\\" id=\\\"incomeTaxRate\\\" name=\\\"incomeTaxRate\\\" placeholder=\\\"Active income tax rate\\\" \\n            [(ngModel)]=\\\"model.incomeTaxRate\\\" \\n            value=\\\"model.incomeTaxRate\\\"\\n            #incomeTaxRate=\\\"ngModel\\\">\\n\\n        <md-hint align=\\\"start\\\">Income tax rate (%).</md-hint>\\n      </md-input-container>\\n      \\n      <!-- Net worth -->\\n      <md-input-container fxFlex fxFlex.gt-xs=\\\"200px\\\" class=\\\"form__field\\\">\\n        <input mdInput type=\\\"number\\\" id=\\\"netWorth\\\" name=\\\"netWorth\\\" placeholder=\\\"Net worth\\\" \\n            [(ngModel)]=\\\"model.netWorth\\\" \\n            value=\\\"model.netWorth\\\"\\n            #netWorth=\\\"ngModel\\\">\\n      </md-input-container>\\n    </div>\\n  </section>\\n\\n  <section fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"center center\\\" class=\\\"form__actions form__actions--account-finance\\\">\\n    <button *ngIf=\\\"!accountFinanceServiceRunning\\\" \\n        class=\\\"form__action mat-raised-button\\\" \\n        md-raised-button \\n        type=\\\"submit\\\" \\n        color=\\\"accent\\\" \\n        [disabled]=\\\"!financeForm.form.valid\\\">Save</button>\\n    \\n    <md-progress-bar *ngIf=\\\"accountFinanceServiceRunning\\\"\\n        class=\\\"progress-bar progress-bar--account-finance\\\"\\n        color=\\\"primary\\\"\\n        mode=\\\"indeterminate\\\">\\n    </md-progress-bar>\\n  </section>\\n\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/w3/atomiCoconut/client/src/app/modules/users/components/account-finance-info/account-finance-info.component.html\n// module id = ../../../../../src/app/modules/users/components/account-finance-info/account-finance-info.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/w3/atomiCoconut/client/src/app/modules/users/components/account-finance-info/account-finance-info.component.scss\n// module id = ../../../../../src/app/modules/users/components/account-finance-info/account-finance-info.component.scss\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport {User} from '../../models/user';\nimport {AccountFinance} from '../../models/account-finance';\n\n@Component({\n  selector: 'account-finance-info',\n  templateUrl: './account-finance-info.component.html',\n  styleUrls: ['./account-finance-info.component.scss']\n})\nexport class AccountFinanceInfoComponent implements OnInit {\n\n  @Input() user : User;\n  model : AccountFinance;\n\n  constructor() {\n    this.model = new AccountFinance();\n  }\n\n  ngOnInit() {\n    const methodTrace = `${this.constructor.name} > ngOnInit() > `; //for debugging\n    \n    this.model = this.user.finance;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/modules/users/components/account-finance-info/account-finance-info.component.ts","module.exports = \"<form class=\\\"form__container\\\" (ngSubmit)=\\\"onSubmit()\\\" #accountForm=\\\"ngForm\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" >\\r\\n  \\r\\n  <div fxLayout=\\\"column\\\" class=\\\"form__fields\\\">\\r\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxLayoutGap.gt-sm=\\\"10px\\\" class=\\\"form__fields__row\\\" >\\r\\n      <!-- Name -->\\r\\n      <md-input-container fxFlex class=\\\"form__field\\\">\\r\\n        <input mdInput type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Name\\\" \\r\\n            [(ngModel)]=\\\"model.name\\\" \\r\\n            required minlength=\\\"4\\\"\\r\\n            value=\\\"model.name\\\"\\r\\n            #name=\\\"ngModel\\\">\\r\\n\\r\\n        <md-error *ngIf=\\\"name.invalid && (name.dirty || name.touched) && name.errors.required\\\">Name is required</md-error>\\r\\n        <md-error *ngIf=\\\"name.invalid && (name.dirty || name.touched) && name.errors.minlength\\\">Name must contains more than 4 characters</md-error>\\r\\n      </md-input-container>\\r\\n      \\r\\n      <!-- Email -->\\r\\n      <md-input-container fxFlex class=\\\"form__field\\\">\\r\\n        <input mdInput type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Email address\\\" \\r\\n            [(ngModel)]=\\\"model.email\\\" \\r\\n            required email\\r\\n            value=\\\"model.email\\\"\\r\\n            #email=\\\"ngModel\\\">\\r\\n\\r\\n        <md-error *ngIf=\\\"email.invalid && (email.dirty || email.touched) && email.errors.required\\\">Email is required</md-error>\\r\\n        <md-error *ngIf=\\\"email.invalid && (email.dirty || email.touched) && email.errors.email\\\">Email must be a valid email address</md-error>\\r\\n      </md-input-container>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"center none\\\" class=\\\"form__actions\\\">\\r\\n    <button *ngIf=\\\"!updateAccountServiceRunning\\\" class=\\\"form__action mat-raised-button\\\" color=\\\"accent\\\" md-raised-button type=\\\"submit\\\" \\r\\n        [disabled]=\\\"!accountForm.form.valid\\\">Save</button>\\r\\n\\r\\n    <md-progress-bar *ngIf=\\\"updateAccountServiceRunning\\\"\\r\\n        class=\\\"progress-bar progress-bar--update-account\\\"\\r\\n        color=\\\"primary\\\"\\r\\n        mode=\\\"indeterminate\\\">\\r\\n    </md-progress-bar>\\r\\n  </div>\\r\\n\\r\\n</form>\\r\\n\\r\\n<account-finance-info [user]=\\\"user\\\"></account-finance-info>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/w3/atomiCoconut/client/src/app/modules/users/components/account/account.component.html\n// module id = ../../../../../src/app/modules/users/components/account/account.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"form .form__actions .progress-bar {\\n  width: 100%; }\\n\\n@media screen and (min-width: 600px) {\\n  form .form__actions .progress-bar {\\n    width: 88px; } }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/w3/atomiCoconut/client/src/app/modules/users/components/account/account.component.scss\n// module id = ../../../../../src/app/modules/users/components/account/account.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { UsersService } from '../../users.service';\r\nimport { AppService } from '../../../../app.service';\r\nimport {User} from '../../models/user';\r\nimport { MainNavigatorService } from '../../../shared/components/main-navigator/main-navigator.service';\r\n\r\n@Component({\r\n  selector: 'app-account',\r\n  templateUrl: './account.component.html',\r\n  styleUrls: ['./account.component.scss']\r\n})\r\nexport class AccountComponent implements OnInit {\r\n\r\n  private model : any = {name : '', email : ''};\r\n  private user : User = null;\r\n  private updateAccountServiceRunning : boolean = false;\r\n\r\n  constructor(private usersService : UsersService, private appService : AppService, \r\n      private mainNavigatorService : MainNavigatorService, private route : ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: '/welcome', selected: false },\r\n      { displayName: 'My account', url: null, selected: true }]);\r\n    \r\n    //get authUser from resolver\r\n    this.route.data.subscribe((data: { authUser: User }) => {\r\n      this.user = data.authUser;\r\n      this.model = { name : data.authUser.name, email : data.authUser.email };\r\n    });\r\n  }\r\n\r\n  /**\r\n   * When user submits the register form.\r\n   */\r\n  onSubmit() { \r\n    const methodTrace = `${this.constructor.name} > onSubmit() > `; //for debugging\r\n    this.updateAccountServiceRunning = true;\r\n    \r\n    //call the account service\r\n    this.usersService.updateAccount(this.model).subscribe(\r\n      (data : any) => {\r\n        if (data && data.email) {\r\n          const user = new User(data.name, data.email, data.avatar, data.accessToInvestments);\r\n          this.usersService.user = user;\r\n          this.appService.showResults(`Your profile was successfully updated!.`);\r\n        } else {\r\n          console.error(`${methodTrace} Unexpected data format.`)\r\n        }\r\n\r\n        this.updateAccountServiceRunning = false;\r\n      },\r\n      (error : any) => {\r\n        console.error(`${methodTrace} There was an error with the update account service > ${error}`);\r\n        if (error.codeno === 400) {\r\n          //the mail system failed for external reasons\r\n          this.appService.showResults(`There was an error with the update account service, please try again in a few minutes.`);\r\n        }\r\n\r\n        this.updateAccountServiceRunning = false;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/modules/users/components/account/account.component.ts","module.exports = \"<form class=\\\"form__container form__login\\\" (ngSubmit)=\\\"onSubmit()\\\" #loginForm=\\\"ngForm\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" >\\r\\n  \\r\\n  <section fxLayout=\\\"column\\\" class=\\\"form__fields\\\">\\r\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxLayoutGap.gt-sm=\\\"10px\\\" class=\\\"form__fields__row\\\">\\r\\n      <!-- Email -->\\r\\n      <md-input-container fxFlex class=\\\"form__field\\\">\\r\\n        <input mdInput type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Email address\\\" \\r\\n            [(ngModel)]=\\\"model.email\\\" \\r\\n            required email\\r\\n            #email=\\\"ngModel\\\">\\r\\n  \\r\\n        <md-error *ngIf=\\\"email.invalid && (email.dirty || email.touched) && email.errors.required\\\">Email is required</md-error>\\r\\n        <md-error *ngIf=\\\"email.invalid && (email.dirty || email.touched) && email.errors.email\\\">Email must be a valid email address</md-error>\\r\\n      </md-input-container>\\r\\n      \\r\\n      <!-- Password -->\\r\\n      <md-input-container fxFlex class=\\\"form__field\\\">\\r\\n        <input mdInput type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" \\r\\n            [(ngModel)]=\\\"model.password\\\" \\r\\n            required minlength=\\\"3\\\" maxlength=\\\"8\\\"\\r\\n            #password=\\\"ngModel\\\">\\r\\n  \\r\\n        <md-error *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.required\\\">Password is required</md-error>\\r\\n        <md-error *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.minlength\\\">Password must be longer than 3 characters</md-error>\\r\\n        <md-error *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.maxlength\\\">Password must be shorter than 8 characters</md-error>\\r\\n      </md-input-container>\\r\\n    </div>\\r\\n  </section>\\r\\n\\r\\n  <section fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"center center\\\" class=\\\"form__actions form__actions--login\\\">\\r\\n    <button *ngIf=\\\"!loginServiceRunning\\\" class=\\\"form__action mat-raised-button\\\" md-raised-button type=\\\"submit\\\" \\r\\n        color=\\\"accent\\\" [disabled]=\\\"!loginForm.form.valid\\\">Login</button>\\r\\n    \\r\\n    <md-progress-bar *ngIf=\\\"loginServiceRunning\\\"\\r\\n        class=\\\"progress-bar progress-bar--login\\\"\\r\\n        color=\\\"primary\\\"\\r\\n        mode=\\\"indeterminate\\\">\\r\\n    </md-progress-bar>\\r\\n    \\r\\n    <md-checkbox fxLayoutAlign.xs=\\\"center center\\\" class=\\\"form__action\\\" [(ngModel)]=\\\"forgotModel.forgot\\\" name=\\\"forgot\\\" id=\\\"forgot\\\">Forgot my password</md-checkbox>\\r\\n  </section>\\r\\n\\r\\n  <section fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"form__actions form__actions--create-account\\\">\\r\\n    <a md-button color=\\\"accent\\\" class=\\\"color__almost-white ac__link\\\" routerLink=\\\"/users/register\\\">Create an account</a>\\r\\n  </section>\\r\\n\\r\\n</form>\\r\\n\\r\\n<form class=\\\"form__container form__forgot\\\" (ngSubmit)=\\\"onForgotSubmit()\\\" #forgotForm=\\\"ngForm\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" *ngIf=\\\"forgotModel.forgot\\\">\\r\\n  \\r\\n  <section fxLayout=\\\"column\\\" class=\\\"form__fields\\\">\\r\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxLayoutGap.gt-sm=\\\"10px\\\" class=\\\"form__fields__row\\\">\\r\\n      <!-- Email -->\\r\\n      <md-input-container fxFlex class=\\\"form__field\\\">\\r\\n        \\r\\n        <input mdInput type=\\\"email\\\" id=\\\"emailForgot\\\" name=\\\"emailForgot\\\" placeholder=\\\"Email address\\\" \\r\\n            [(ngModel)]=\\\"forgotModel.email\\\" \\r\\n            required email\\r\\n            #emailForgot=\\\"ngModel\\\">\\r\\n        <md-hint align=\\\"start\\\">Type your email and we will send you an email to reset your password.</md-hint>\\r\\n        <md-error *ngIf=\\\"emailForgot.invalid && (emailForgot.dirty || emailForgot.touched) && emailForgot.errors.required\\\">Email is required</md-error>\\r\\n        <md-error *ngIf=\\\"emailForgot.invalid && (emailForgot.dirty || emailForgot.touched) && emailForgot.errors.email\\\">Email must be a valid email address</md-error>\\r\\n      </md-input-container>\\r\\n    </div>\\r\\n  </section>\\r\\n\\r\\n  <section fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"center none\\\" class=\\\"form__actions\\\">\\r\\n    <button *ngIf=\\\"!forgotServiceRunning\\\" class=\\\"form__action mat-raised-button\\\" \\r\\n        color=\\\"accent\\\" md-raised-button type=\\\"submit\\\" [disabled]=\\\"!forgotForm.form.valid\\\">Send</button>\\r\\n\\r\\n    <md-progress-bar *ngIf=\\\"forgotServiceRunning\\\"\\r\\n        class=\\\"progress-bar progress-bar--forgot\\\"\\r\\n        color=\\\"primary\\\"\\r\\n        mode=\\\"indeterminate\\\">\\r\\n    </md-progress-bar>\\r\\n  </section>\\r\\n\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/w3/atomiCoconut/client/src/app/modules/users/components/login/login.component.html\n// module id = ../../../../../src/app/modules/users/components/login/login.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"form .form__actions .progress-bar {\\n  width: 100%; }\\n\\n.form__login .form__actions--create-account {\\n  margin: 20px 0; }\\n\\n.form__forgot {\\n  margin-top: 50px; }\\n\\n@media screen and (min-width: 600px) {\\n  form .form__actions .progress-bar {\\n    width: 88px; } }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/w3/atomiCoconut/client/src/app/modules/users/components/login/login.component.scss\n// module id = ../../../../../src/app/modules/users/components/login/login.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\r\n\r\nimport { UsersService } from '../../users.service';\r\nimport { AppService } from '../../../../app.service';\r\nimport {User} from '../../models/user';\r\nimport { MainNavigatorService } from '../../../shared/components/main-navigator/main-navigator.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  model : any = {email : '', password : ''};\r\n  forgotModel : any = { email : '', forgot : false };\r\n  loginServiceRunning : boolean = false;\r\n  forgotServiceRunning : boolean = false;\r\n\r\n  constructor(private usersService : UsersService, private appService : AppService,  \r\n    private mainNavigatorService : MainNavigatorService, private router : Router, private route : ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    const methodTrace = `${this.constructor.name} > ngOnInit() > `; //for debugging\r\n    \r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: '/welcome', selected: false },\r\n      { displayName: 'Login', url: null, selected: true }]);\r\n\r\n    this.route.paramMap.map((params: ParamMap) => params.get('state'))\r\n        .subscribe(state => {\r\n          if (state === 'reset-password-token-expired') {\r\n            this.appService.showResults('Reset password url has expired or is invalid. Please go to Forgot my password again to create a new one.', 5000);\r\n          }\r\n        });\r\n  }\r\n\r\n  /**\r\n   * When user submits the login form\r\n   */\r\n  onSubmit() { \r\n    const methodTrace = `${this.constructor.name} > onSubmit() > `; //for debugging\r\n\r\n    this.loginServiceRunning = true;\r\n    this.usersService.user = null; //reset authenticated user. Register automatically authenticates the registered user.\r\n    //call the register service\r\n    this.usersService.login(this.model).subscribe(\r\n      (data : any) => {\r\n        if (data && data.email) {\r\n          const user = new User(data.name, data.email, data.avatar, data.accessToInvestments);\r\n          this.usersService.user = user;\r\n          const redirectUrl = this.usersService.routerRedirectUrl ? this.usersService.routerRedirectUrl : '/';\r\n          this.usersService.routerRedirectUrl = null;\r\n          this.router.navigate([redirectUrl]); //go home\r\n        } else {\r\n          console.error(`${methodTrace} Unexpected data format.`);\r\n          this.loginServiceRunning = false;\r\n        }\r\n      },\r\n      (error : any) => {\r\n        console.error(`${methodTrace} There was an error with the login service: `, error);\r\n\r\n        if (error.codeno === 451) {\r\n          this.appService.showResults(error.msg, 60000, 'Close');\r\n        }\r\n\r\n        this.loginServiceRunning = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * When user submits the forgot password form\r\n   */\r\n  onForgotSubmit() { \r\n    const methodTrace = `${this.constructor.name} > onForgotSubmit() > `; //for debugging\r\n\r\n    this.forgotServiceRunning = true;\r\n    //call the register service\r\n    this.usersService.forgot(this.forgotModel).subscribe(\r\n      (data : any) => {\r\n        this.forgotServiceRunning = false;\r\n        this.appService.showResults(`You have been emailed a password reset link.`);\r\n      },\r\n      (error : any) => {\r\n        console.error(`${methodTrace} There was an error with the forgot password service: `, error);\r\n        this.forgotServiceRunning = false;\r\n        \r\n        if (error.codeno === 455) {\r\n          //invalid email\r\n          this.appService.showResults(error.msg, 3000);\r\n        } else if (error.codeno === 400) {\r\n          //the mail system failed for external reasons\r\n          this.appService.showResults(`There was an issue sending the reset password email, please try again in a few minutes.`);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/modules/users/components/login/login.component.ts","module.exports = \"<form class=\\\"form__container\\\" (ngSubmit)=\\\"onSubmit()\\\" #registerForm=\\\"ngForm\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" >\\r\\n  \\r\\n  <div fxLayout=\\\"column\\\" class=\\\"form__fields\\\">\\r\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxLayoutGap.gt-sm=\\\"10px\\\" class=\\\"form__fields__row\\\" >\\r\\n      <!-- Name -->\\r\\n      <md-input-container fxFlex class=\\\"form__field\\\">\\r\\n        <input mdInput type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Name\\\" \\r\\n            [(ngModel)]=\\\"model.name\\\" \\r\\n            required minlength=\\\"4\\\"\\r\\n            #name=\\\"ngModel\\\">\\r\\n\\r\\n        <md-error *ngIf=\\\"name.invalid && (name.dirty || name.touched) && name.errors.required\\\">Name is required</md-error>\\r\\n        <md-error *ngIf=\\\"name.invalid && (name.dirty || name.touched) && name.errors.minlength\\\">Name must contains more than 4 characters</md-error>\\r\\n      </md-input-container>\\r\\n      \\r\\n      <!-- Email -->\\r\\n      <md-input-container fxFlex class=\\\"form__field\\\">\\r\\n        <input mdInput type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Email address\\\" \\r\\n            [(ngModel)]=\\\"model.email\\\" \\r\\n            required email\\r\\n            #email=\\\"ngModel\\\">\\r\\n\\r\\n        <md-error *ngIf=\\\"email.invalid && (email.dirty || email.touched) && email.errors.required\\\">Email is required</md-error>\\r\\n        <md-error *ngIf=\\\"email.invalid && (email.dirty || email.touched) && email.errors.email\\\">Email must be a valid email address</md-error>\\r\\n      </md-input-container>\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxLayoutGap.gt-sm=\\\"10px\\\" class=\\\"form__fields__row\\\" >\\r\\n      <!-- Password -->\\r\\n      <md-input-container fxFlex class=\\\"form__field\\\">\\r\\n        <input mdInput type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" \\r\\n            [(ngModel)]=\\\"model.password\\\" \\r\\n            required minlength=\\\"3\\\" maxlength=\\\"8\\\" equalvalidator=\\\"passwordConfirm\\\" reverse=\\\"true\\\"\\r\\n            #password=\\\"ngModel\\\">\\r\\n\\r\\n        <md-error *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.required\\\">Password is required</md-error>\\r\\n        <md-error *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.minlength\\\">Password must be longer than 3 characters</md-error>\\r\\n        <md-error *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.maxlength\\\">Password must be shorter than 8 characters</md-error>\\r\\n      </md-input-container>\\r\\n\\r\\n      <!-- Password confirm -->\\r\\n      <md-input-container fxFlex class=\\\"form__field\\\">\\r\\n        <input mdInput type=\\\"password\\\" id=\\\"passwordConfirm\\\" name=\\\"passwordConfirm\\\" placeholder=\\\"Confirm password\\\" \\r\\n            [(ngModel)]=\\\"model['password-confirm']\\\" \\r\\n            required minlength=\\\"3\\\" maxlength=\\\"8\\\" equalvalidator=\\\"password\\\"\\r\\n            #passwordConfirm=\\\"ngModel\\\">\\r\\n\\r\\n        <md-error *ngIf=\\\"passwordConfirm.invalid && (passwordConfirm.dirty || passwordConfirm.touched) && passwordConfirm.errors.required\\\">Confirm password is required</md-error>\\r\\n        <md-error *ngIf=\\\"passwordConfirm.invalid && (passwordConfirm.dirty || passwordConfirm.touched) && passwordConfirm.errors.minlength\\\">Confirm password must be longer than 3 characters</md-error>\\r\\n        <md-error *ngIf=\\\"passwordConfirm.invalid && (passwordConfirm.dirty || passwordConfirm.touched) && passwordConfirm.errors.maxlength\\\">Confirm password must be shorter than 8 characters</md-error>\\r\\n        <md-error *ngIf=\\\"passwordConfirm.invalid && (passwordConfirm.dirty || passwordConfirm.touched) && passwordConfirm.errors.equalvalidator\\\">Confirm password must match password</md-error>\\r\\n      </md-input-container>\\r\\n      <!-- <pre>{{passwordConfirm.errors | json}}</pre> -->\\r\\n    </div>\\r\\n    \\r\\n  </div>\\r\\n  \\r\\n  <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"center none\\\" class=\\\"form__actions\\\">\\r\\n    <button *ngIf=\\\"!registerServiceRunning\\\" class=\\\"form__action mat-raised-button\\\" color=\\\"accent\\\" md-raised-button type=\\\"submit\\\" \\r\\n        [disabled]=\\\"!registerForm.form.valid\\\">Create account</button>\\r\\n\\r\\n    <md-progress-bar *ngIf=\\\"registerServiceRunning\\\"\\r\\n        class=\\\"progress-bar progress-bar--register\\\"\\r\\n        color=\\\"primary\\\"\\r\\n        mode=\\\"indeterminate\\\">\\r\\n  </md-progress-bar>\\r\\n  </div>\\r\\n\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/w3/atomiCoconut/client/src/app/modules/users/components/register/register.component.html\n// module id = ../../../../../src/app/modules/users/components/register/register.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"form .form__actions .progress-bar {\\n  width: 100%; }\\n\\n@media screen and (min-width: 600px) {\\n  form .form__actions .progress-bar {\\n    width: 127px; } }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/w3/atomiCoconut/client/src/app/modules/users/components/register/register.component.scss\n// module id = ../../../../../src/app/modules/users/components/register/register.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { UsersService } from '../../users.service';\r\nimport { AppService } from '../../../../app.service';\r\nimport {User} from '../../models/user';\r\nimport { MainNavigatorService } from '../../../shared/components/main-navigator/main-navigator.service';\r\n\r\n@Component({\r\n  selector: 'users-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  private model : any = {name : '', email : '', password : '', 'password-confirm' : ''};\r\n  private registerServiceRunning : boolean = false;\r\n  \r\n  constructor(private usersService : UsersService, private appService : AppService, private router : Router,\r\n      private mainNavigatorService : MainNavigatorService) {}\r\n\r\n  ngOnInit() {\r\n    const methodTrace = `${this.constructor.name} > ngOnInit() > `; //for debugging\r\n\r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: '/welcome', selected: false },\r\n      { displayName: 'Login', url: '/users/login', selected: false },\r\n      { displayName: 'Create account', url: null, selected: true }]);\r\n  }\r\n\r\n  /**\r\n   * When user submits the register form.\r\n   */\r\n  onSubmit() { \r\n    const methodTrace = `${this.constructor.name} > onSubmit() > `; //for debugging\r\n\r\n    this.registerServiceRunning = true;\r\n\r\n    //chech that the password and the confirmed password are the same\r\n    if (this.model.password !== this.model['password-confirm']) {\r\n      console.error(`${methodTrace} Confirm password must match password.`);\r\n      this.registerServiceRunning = false;\r\n      return false;\r\n    }\r\n\r\n    this.usersService.user = null; //reset authenticated user. Register automatically authenticates the registered user.\r\n    //call the register service\r\n    this.usersService.register(this.model).subscribe(\r\n      (data : any) => {\r\n        if (data && data.email) {\r\n          const user = new User(data.name, data.email, data.avatar, data.accessToInvestments)\r\n          this.usersService.user = user;\r\n          this.router.navigate(['/']); //go home\r\n          this.appService.showResults(`${user.name} welcome to AtomiCoconut!`);\r\n        } else {\r\n          console.error(`${methodTrace} Unexpected data format.`, data);\r\n        }\r\n\r\n        this.registerServiceRunning = false;\r\n      },\r\n      (error : any) => {\r\n        console.error(`${methodTrace} There was an error with the register service.`, error);\r\n        if (error.codeno === 400) {\r\n          if (error.data && error.data.name === 'UserExistsError')\r\n          //the mail system failed for external reasons\r\n          this.appService.showResults(`The submitted email was already use by another person, pick a different one please.`);\r\n        }\r\n\r\n        this.registerServiceRunning = false;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/modules/users/components/register/register.component.ts","module.exports = \"<form class=\\\"form__container\\\" (ngSubmit)=\\\"onSubmit()\\\" #resetForm=\\\"ngForm\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" >\\r\\n  \\r\\n  <div fxLayout=\\\"column\\\" class=\\\"form__fields\\\">\\r\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxLayoutGap.gt-sm=\\\"10px\\\" class=\\\"form__fields__row\\\" >\\r\\n      <!-- Password -->\\r\\n      <md-input-container fxFlex class=\\\"form__field\\\">\\r\\n        <input mdInput type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" \\r\\n            [(ngModel)]=\\\"model.password\\\" \\r\\n            required minlength=\\\"3\\\" maxlength=\\\"8\\\" equalvalidator=\\\"passwordConfirm\\\" reverse=\\\"true\\\"\\r\\n            #password=\\\"ngModel\\\">\\r\\n\\r\\n        <md-error *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.required\\\">Password is required</md-error>\\r\\n        <md-error *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.minlength\\\">Password must be longer than 3 characters</md-error>\\r\\n        <md-error *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.maxlength\\\">Password must be shorter than 8 characters</md-error>\\r\\n      </md-input-container>\\r\\n\\r\\n      <!-- Password confirm -->\\r\\n      <md-input-container fxFlex class=\\\"form__field\\\">\\r\\n        <input mdInput type=\\\"password\\\" id=\\\"passwordConfirm\\\" name=\\\"passwordConfirm\\\" placeholder=\\\"Confirm password\\\" \\r\\n            [(ngModel)]=\\\"model['password-confirm']\\\" \\r\\n            required minlength=\\\"3\\\" maxlength=\\\"8\\\" equalvalidator=\\\"password\\\"\\r\\n            #passwordConfirm=\\\"ngModel\\\">\\r\\n\\r\\n        <md-error *ngIf=\\\"passwordConfirm.invalid && (passwordConfirm.dirty || passwordConfirm.touched) && passwordConfirm.errors.required\\\">Confirm password is required</md-error>\\r\\n        <md-error *ngIf=\\\"passwordConfirm.invalid && (passwordConfirm.dirty || passwordConfirm.touched) && passwordConfirm.errors.minlength\\\">Confirm password must be longer than 3 characters</md-error>\\r\\n        <md-error *ngIf=\\\"passwordConfirm.invalid && (passwordConfirm.dirty || passwordConfirm.touched) && passwordConfirm.errors.maxlength\\\">Confirm password must be shorter than 8 characters</md-error>\\r\\n        <md-error *ngIf=\\\"passwordConfirm.invalid && (passwordConfirm.dirty || passwordConfirm.touched) && passwordConfirm.errors.equalvalidator\\\">Confirm password must match password</md-error>\\r\\n      </md-input-container>\\r\\n    </div>\\r\\n    \\r\\n    \\r\\n    \\r\\n  </div>\\r\\n  \\r\\n  <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"center none\\\" class=\\\"form__actions\\\">\\r\\n    <button *ngIf=\\\"!resetPasswordServiceRunning\\\" class=\\\"form__action mat-raised-button\\\" color=\\\"accent\\\" md-raised-button type=\\\"submit\\\" \\r\\n        [disabled]=\\\"!resetForm.form.valid\\\">Reset password</button>\\r\\n\\r\\n    <md-progress-bar *ngIf=\\\"resetPasswordServiceRunning\\\"\\r\\n        class=\\\"progress-bar progress-bar--reset-password\\\"\\r\\n        color=\\\"primary\\\"\\r\\n        mode=\\\"indeterminate\\\">\\r\\n    </md-progress-bar>\\r\\n  </div>\\r\\n\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/w3/atomiCoconut/client/src/app/modules/users/components/reset-password/reset-password.component.html\n// module id = ../../../../../src/app/modules/users/components/reset-password/reset-password.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"form .form__actions .progress-bar {\\n  width: 100%; }\\n\\n@media screen and (min-width: 600px) {\\n  form .form__actions .progress-bar {\\n    width: 127px; } }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/w3/atomiCoconut/client/src/app/modules/users/components/reset-password/reset-password.component.scss\n// module id = ../../../../../src/app/modules/users/components/reset-password/reset-password.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, ParamMap  } from '@angular/router';\r\n\r\nimport { UsersService } from '../../users.service';\r\nimport {User} from '../../models/user';\r\nimport { MainNavigatorService } from '../../../shared/components/main-navigator/main-navigator.service';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.scss']\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n\r\n  private model : any = { password : '', 'password-confirm' : ''};\r\n  private token : string = '';\r\n  private resetPasswordServiceRunning : boolean = false;\r\n\r\n  constructor(private usersService : UsersService, private router : Router, private route : ActivatedRoute,\r\n      private mainNavigatorService : MainNavigatorService ) { }\r\n\r\n  ngOnInit() {\r\n    const methodTrace = `${this.constructor.name} > ngOnInit() > `; //for debugging\r\n    \r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: '/welcome', selected: false },\r\n      { displayName: 'Login', url: '/users/login', selected: false },\r\n      { displayName: 'Reset password', url: null, selected: true }]);\r\n\r\n    this.route.paramMap.map((params: ParamMap) => params.get('token'))\r\n        .subscribe(token => { \r\n          if (token) {\r\n            this.token = token;\r\n          } else {\r\n            console.error(`${methodTrace} Token must be set to reset a password.`);\r\n            this.router.navigate(['/']);\r\n          }\r\n        });\r\n  }\r\n\r\n  onSubmit() { \r\n    const methodTrace = `${this.constructor.name} > onSubmit() > `; //for debugging\r\n    this.resetPasswordServiceRunning = true;\r\n\r\n    //chech that the password and the confirmed password are the same\r\n    if (this.model.password !== this.model['password-confirm']) {\r\n      console.error(`${methodTrace} Confirm password must match password.`);\r\n\r\n      this.resetPasswordServiceRunning = false;\r\n      return false;\r\n    }\r\n\r\n    //call the reset password service.\r\n    this.usersService.user = null; //reset authenticated user. Reset automatically authenticates the registered user.\r\n    this.usersService.reset(this.token, this.model).subscribe(\r\n      (data : any) => {\r\n        if (data) {\r\n          const user = new User(data.name, data.email, data.avatar, data.accessToInvestments);\r\n          this.usersService.user = user;\r\n          this.router.navigate(['/']); //go home\r\n        } else {\r\n          console.error(`${methodTrace} Unexpected data format.`)\r\n        }\r\n\r\n        this.resetPasswordServiceRunning = false;\r\n      },\r\n      (error : any) => {\r\n        console.error(`${methodTrace} There was an error with the reset password service > ${error}`);\r\n        this.resetPasswordServiceRunning = false;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/modules/users/components/reset-password/reset-password.component.ts","export class AccountFinance {\r\n  \r\n    activeIncome : number = 0; //annual pre tax\r\n    netWorth : number = 0;\r\n    incomeTaxRate : number = 0; //percentage value\r\n  \r\n    constructor(activeIncome : number = 0, netWorth : number = 0, incomeTaxRate : number = 0) {\r\n      this.activeIncome = activeIncome; \r\n      this.netWorth = netWorth;\r\n      this.incomeTaxRate = incomeTaxRate; \r\n    }\r\n  }\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/modules/users/models/account-finance.ts","import { AccountFinance } from './account-finance';\r\n\r\nexport class User {\r\n\r\n  private _name : string;\r\n  private _email : string;\r\n  private _avatar : string;\r\n  private _accessToinvestments : boolean;\r\n  finance : AccountFinance;\r\n\r\n\r\n  constructor(name : string = '', email : string = '', avatar : string = '', accessToInvestments = false, accountFinance = null) {\r\n    this._name = name;\r\n    this._email = email;\r\n    this._avatar = avatar;\r\n    this._accessToinvestments = accessToInvestments;\r\n    this.finance = new AccountFinance();\r\n    if (accountFinance) {\r\n      this.setAccountFinance(accountFinance);\r\n    }\r\n  }\r\n\r\n  setAccountFinance(accountFinance) {\r\n    this.finance = new AccountFinance(accountFinance.activeIncome, accountFinance.netWorth, accountFinance.incomeTaxRate);\r\n  }\r\n\r\n  get name() {\r\n    return this._name; \r\n  }\r\n\r\n  set name(name) {\r\n    this._name = name;\r\n  }\r\n\r\n  get email() {\r\n    return this._email;\r\n  }\r\n\r\n  set email(email) {\r\n    this._email = email;\r\n  }\r\n\r\n  get avatar() {\r\n    return this._avatar; \r\n  }\r\n\r\n  set avatar(avatar) {\r\n    this._avatar = avatar;\r\n  }\r\n\r\n  get accessToInvestments() {\r\n    return this._accessToinvestments;\r\n  }\r\n\r\n  set accessToInvestments(accessToInvestments) {\r\n    this._accessToinvestments = accessToInvestments;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/modules/users/models/user.ts","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\r\nimport { AccountComponent } from './components/account/account.component';\r\nimport { AuthResolver } from '../../auth-resolver.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path : 'users',\r\n    children : [\r\n      { path : 'register', component : RegisterComponent },\r\n      { path : 'login/:state', component : LoginComponent },\r\n      { path : 'login', component : LoginComponent },\r\n      { \r\n        path : 'account', \r\n        component : AccountComponent,\r\n        resolve : {\r\n          authUser : AuthResolver\r\n        }\r\n      },\r\n      { \r\n        path : 'account/reset/expired',\r\n        redirectTo : 'login/reset-password-token-expired',\r\n        pathMatch : 'full'\r\n      },\r\n      { path : 'account/reset/:token', component : ResetPasswordComponent }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UsersRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/modules/users/users-routing.module.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UsersRoutingModule } from './users-routing.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { CustomMaterialDesignModule } from '../../modules/custom-material-design/custom-material-design.module';\r\nimport { SharedModule } from '../../modules/shared/shared.module';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { UsersService } from './users.service';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\r\nimport { EqualValidatorDirective } from '../../directives/equal-validator.directive';\r\nimport { AccountComponent } from './components/account/account.component';\nimport { AccountFinanceInfoComponent } from './components/account-finance-info/account-finance-info.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UsersRoutingModule,\r\n    FormsModule,\r\n    FlexLayoutModule,\r\n    CustomMaterialDesignModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    ResetPasswordComponent,\r\n    EqualValidatorDirective,\r\n    AccountComponent,\r\n    AccountFinanceInfoComponent\r\n  ],\r\n  providers: [UsersService]\r\n})\r\nexport class UsersModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/modules/users/users.module.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\n\r\nimport {Observable} from \"rxjs/Rx\";\r\nimport {environment} from \"../../../environments/environment\";\r\nimport {AppService} from \"../../app.service\";\r\nimport {User} from \"./models/user\";\r\n\r\n@Injectable()\r\nexport class UsersService {\r\n\r\n  private serverHost : string = environment.apiHost + '/api/users';\r\n  private headers = new Headers({'Content-Type': 'application/json'});\r\n  private _user : User;\r\n  routerRedirectUrl : string = null; //a route to redirect the user to when login is successfull\r\n\r\n  constructor(private http : Http, private appService : AppService) {\r\n    this._user = null;\r\n  }\r\n\r\n  /**\r\n   * Server call to Register a new user in the system \r\n   * @param postData \r\n   */\r\n  register(postData : any = {}) : Observable<any> {\r\n    return this.http.post(`${this.serverHost}/register`, postData, { headers : this.headers })\r\n        .map(this.appService.extractData)\r\n        .catch(this.appService.handleError);\r\n  }\r\n\r\n  /**\r\n   * Server call to Account to update account details \r\n   * @param postData \r\n   */\r\n  updateAccount(postData : any = {}) : Observable<any> {\r\n    return this.http.post(`${this.serverHost}/account`, postData, { headers : this.headers })\r\n        .map(this.appService.extractData)\r\n        .catch(this.appService.handleError);\r\n  }\r\n\r\n  /**\r\n   * Server call to retrieve the currently authenticated user, or null if nobody .\r\n   */\r\n  getAuthenticatedUser() : Observable<any> {\r\n    return this.http.get(`${this.serverHost}/getUser`)\r\n        .map(this.appService.extractData)\r\n        .catch(this.appService.handleError);\r\n  }\r\n\r\n  /**\r\n   * Server call to login the provided user email and pass.\r\n   */\r\n  login(postData : any = {}) : Observable<any> {\r\n    console.log('login service called');\r\n    return this.http.post(`${this.serverHost}/login`, postData, { headers : this.headers })\r\n        .map(this.appService.extractData)\r\n        .catch(this.appService.handleError);\r\n  }\r\n\r\n  /**\r\n   * Server call to forgot with the provided user email.\r\n   */\r\n  forgot(postData : any = {}) : Observable<any> {\r\n    return this.http.post(`${this.serverHost}/account/forgot`, postData, { headers : this.headers })\r\n        .map(this.appService.extractData)\r\n        .catch(this.appService.handleError);\r\n  }\r\n\r\n  /**\r\n   * Server call to reset password api with the provided new password.\r\n   */\r\n  reset(token : string, postData : any = {}) : Observable<any> {\r\n    return this.http.post(`${this.serverHost}/account/reset/${token}`, postData, { headers : this.headers })\r\n        .map(this.appService.extractData)\r\n        .catch(this.appService.handleError);\r\n  }\r\n\r\n  /**\r\n   * Server call to login the provided user email and pass.\r\n   */\r\n  logout() : Observable<any> {\r\n    return this.http.get(`${this.serverHost}/logout`)\r\n        .map(this.appService.extractData)\r\n        .catch(this.appService.handleError);\r\n  }\r\n  \r\n  /**\r\n   * Tells whether the user is logged in in the system. Checks the local user variable\r\n   */\r\n  isLoggedIn() : boolean {\r\n    return this.user && this.user.email ? true : false;\r\n  }\r\n\r\n  /**\r\n   * Sets the local user variable with the user provided as param\r\n   * @param user (User). The user to set\r\n   */\r\n  set user(user : User) {\r\n    this._user = user;\r\n  }\r\n\r\n  get user() {\r\n    return this._user;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/app/modules/users/users.service.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\nexport const environment = {\r\n  production: true,\r\n  apiHost : '',\r\n  showLogs : true\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n  console.log('ENV: Production');\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// C:/w3/atomiCoconut/client/src/main.ts"],"sourceRoot":"webpack:///"}