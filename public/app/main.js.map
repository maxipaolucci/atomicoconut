{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/auth-resolver.service.ts","webpack:///./src/app/components/page-not-found/page-not-found.component.html","webpack:///./src/app/components/page-not-found/page-not-found.component.scss","webpack:///./src/app/components/page-not-found/page-not-found.component.ts","webpack:///./src/app/components/welcome/welcome.component.html","webpack:///./src/app/components/welcome/welcome.component.scss","webpack:///./src/app/components/welcome/welcome.component.ts","webpack:///./src/app/constants.ts","webpack:///./src/app/modules/calculators/calculators-routing.module.ts","webpack:///./src/app/modules/calculators/calculators.module.ts","webpack:///./src/app/modules/calculators/components/calculators-dashboard/calculators-dashboard.component.html","webpack:///./src/app/modules/calculators/components/calculators-dashboard/calculators-dashboard.component.scss","webpack:///./src/app/modules/calculators/components/calculators-dashboard/calculators-dashboard.component.ts","webpack:///./src/app/modules/calculators/components/equity/equity.component.html","webpack:///./src/app/modules/calculators/components/equity/equity.component.scss","webpack:///./src/app/modules/calculators/components/equity/equity.component.ts","webpack:///./src/app/modules/calculators/components/house-figures-results/house-figures-results.component.html","webpack:///./src/app/modules/calculators/components/house-figures-results/house-figures-results.component.scss","webpack:///./src/app/modules/calculators/components/house-figures-results/house-figures-results.component.ts","webpack:///./src/app/modules/calculators/components/house-figures/house-figures.component.html","webpack:///./src/app/modules/calculators/components/house-figures/house-figures.component.scss","webpack:///./src/app/modules/calculators/components/house-figures/house-figures.component.ts","webpack:///./src/app/modules/investments/components/currency-investment-form/currency-investment-form.component.html","webpack:///./src/app/modules/investments/components/currency-investment-form/currency-investment-form.component.scss","webpack:///./src/app/modules/investments/components/currency-investment-form/currency-investment-form.component.ts","webpack:///./src/app/modules/investments/components/currency-investment/currency-investment.component.html","webpack:///./src/app/modules/investments/components/currency-investment/currency-investment.component.scss","webpack:///./src/app/modules/investments/components/currency-investment/currency-investment.component.ts","webpack:///./src/app/modules/investments/components/investment-selector-dialog/investment-selector-dialog.component.html","webpack:///./src/app/modules/investments/components/investment-selector-dialog/investment-selector-dialog.component.scss","webpack:///./src/app/modules/investments/components/investment-selector-dialog/investment-selector-dialog.component.ts","webpack:///./src/app/modules/investments/components/investments-dashboard/investments-dashboard.component.html","webpack:///./src/app/modules/investments/components/investments-dashboard/investments-dashboard.component.scss","webpack:///./src/app/modules/investments/components/investments-dashboard/investments-dashboard.component.ts","webpack:///./src/app/modules/investments/components/investments-edit/investments-edit.component.html","webpack:///./src/app/modules/investments/components/investments-edit/investments-edit.component.scss","webpack:///./src/app/modules/investments/components/investments-edit/investments-edit.component.ts","webpack:///./src/app/modules/investments/components/property-investment-form/property-investment-form.component.html","webpack:///./src/app/modules/investments/components/property-investment-form/property-investment-form.component.scss","webpack:///./src/app/modules/investments/components/property-investment-form/property-investment-form.component.ts","webpack:///./src/app/modules/investments/components/property-investment/property-investment.component.html","webpack:///./src/app/modules/investments/components/property-investment/property-investment.component.scss","webpack:///./src/app/modules/investments/components/property-investment/property-investment.component.ts","webpack:///./src/app/modules/investments/currency-exchange.service.ts","webpack:///./src/app/modules/investments/investments-routing.module.ts","webpack:///./src/app/modules/investments/investments.module.ts","webpack:///./src/app/modules/investments/investments.service.ts","webpack:///./src/app/modules/investments/models/PropertyInvestment.ts","webpack:///./src/app/modules/investments/models/currencyInvestment.ts","webpack:///./src/app/modules/investments/models/investment.ts","webpack:///./src/app/modules/properties/components/house-figures-dialog/house-figures-dialog.component.html","webpack:///./src/app/modules/properties/components/house-figures-dialog/house-figures-dialog.component.scss","webpack:///./src/app/modules/properties/components/house-figures-dialog/house-figures-dialog.component.ts","webpack:///./src/app/modules/properties/components/houses-edit/houses-edit.component.html","webpack:///./src/app/modules/properties/components/houses-edit/houses-edit.component.scss","webpack:///./src/app/modules/properties/components/houses-edit/houses-edit.component.ts","webpack:///./src/app/modules/properties/components/properties-dashboard/properties-dashboard.component.html","webpack:///./src/app/modules/properties/components/properties-dashboard/properties-dashboard.component.scss","webpack:///./src/app/modules/properties/components/properties-dashboard/properties-dashboard.component.ts","webpack:///./src/app/modules/properties/components/properties-edit/properties-edit.component.html","webpack:///./src/app/modules/properties/components/properties-edit/properties-edit.component.scss","webpack:///./src/app/modules/properties/components/properties-edit/properties-edit.component.ts","webpack:///./src/app/modules/properties/components/properties-table/properties-table.component.html","webpack:///./src/app/modules/properties/components/properties-table/properties-table.component.scss","webpack:///./src/app/modules/properties/components/properties-table/properties-table.component.ts","webpack:///./src/app/modules/properties/components/property-selector-dialog/property-selector-dialog.component.html","webpack:///./src/app/modules/properties/components/property-selector-dialog/property-selector-dialog.component.scss","webpack:///./src/app/modules/properties/components/property-selector-dialog/property-selector-dialog.component.ts","webpack:///./src/app/modules/properties/components/property-yields-dialog/property-yields-dialog.component.html","webpack:///./src/app/modules/properties/components/property-yields-dialog/property-yields-dialog.component.scss","webpack:///./src/app/modules/properties/components/property-yields-dialog/property-yields-dialog.component.ts","webpack:///./src/app/modules/properties/models/address.ts","webpack:///./src/app/modules/properties/models/house.ts","webpack:///./src/app/modules/properties/models/property.ts","webpack:///./src/app/modules/properties/properties-routing.module.ts","webpack:///./src/app/modules/properties/properties.module.ts","webpack:///./src/app/modules/properties/properties.service.ts","webpack:///./src/app/modules/shared/components/address-autocomplete/address-autocomplete.component.html","webpack:///./src/app/modules/shared/components/address-autocomplete/address-autocomplete.component.scss","webpack:///./src/app/modules/shared/components/address-autocomplete/address-autocomplete.component.ts","webpack:///./src/app/modules/shared/components/currency-unit/currency-unit.component.html","webpack:///./src/app/modules/shared/components/currency-unit/currency-unit.component.scss","webpack:///./src/app/modules/shared/components/currency-unit/currency-unit.component.ts","webpack:///./src/app/modules/shared/components/dynamic-map/dynamic-map.component.html","webpack:///./src/app/modules/shared/components/dynamic-map/dynamic-map.component.scss","webpack:///./src/app/modules/shared/components/dynamic-map/dynamic-map.component.ts","webpack:///./src/app/modules/shared/components/info-tooltip/info-tooltip.component.html","webpack:///./src/app/modules/shared/components/info-tooltip/info-tooltip.component.scss","webpack:///./src/app/modules/shared/components/info-tooltip/info-tooltip.component.ts","webpack:///./src/app/modules/shared/components/main-navigator/main-navigator.component.html","webpack:///./src/app/modules/shared/components/main-navigator/main-navigator.component.scss","webpack:///./src/app/modules/shared/components/main-navigator/main-navigator.component.ts","webpack:///./src/app/modules/shared/components/main-navigator/main-navigator.service.ts","webpack:///./src/app/modules/shared/components/progress-bar/progress-bar.component.html","webpack:///./src/app/modules/shared/components/progress-bar/progress-bar.component.scss","webpack:///./src/app/modules/shared/components/progress-bar/progress-bar.component.ts","webpack:///./src/app/modules/shared/components/snackbar-simple/snackbar-simple.component.html","webpack:///./src/app/modules/shared/components/snackbar-simple/snackbar-simple.component.scss","webpack:///./src/app/modules/shared/components/snackbar-simple/snackbar-simple.component.ts","webpack:///./src/app/modules/shared/components/yes-no-dialog/yes-no-dialog.component.html","webpack:///./src/app/modules/shared/components/yes-no-dialog/yes-no-dialog.component.scss","webpack:///./src/app/modules/shared/components/yes-no-dialog/yes-no-dialog.component.ts","webpack:///./src/app/modules/shared/custom-material-design.module.ts","webpack:///./src/app/modules/shared/directives/equal-validator.directive.ts","webpack:///./src/app/modules/shared/directives/number-validator.directive.ts","webpack:///./src/app/modules/shared/shared.module.ts","webpack:///./src/app/modules/teams/components/add-person-to-team-dialog/add-person-to-team-dialog.component.html","webpack:///./src/app/modules/teams/components/add-person-to-team-dialog/add-person-to-team-dialog.component.scss","webpack:///./src/app/modules/teams/components/add-person-to-team-dialog/add-person-to-team-dialog.component.ts","webpack:///./src/app/modules/teams/components/teams-dashboard/teams-dashboard.component.html","webpack:///./src/app/modules/teams/components/teams-dashboard/teams-dashboard.component.scss","webpack:///./src/app/modules/teams/components/teams-dashboard/teams-dashboard.component.ts","webpack:///./src/app/modules/teams/components/teams-edit/teams-edit.component.html","webpack:///./src/app/modules/teams/components/teams-edit/teams-edit.component.scss","webpack:///./src/app/modules/teams/components/teams-edit/teams-edit.component.ts","webpack:///./src/app/modules/teams/models/team.ts","webpack:///./src/app/modules/teams/teams-routing.module.ts","webpack:///./src/app/modules/teams/teams.module.ts","webpack:///./src/app/modules/teams/teams.service.ts","webpack:///./src/app/modules/users/components/account-finance-info/account-finance-info.component.html","webpack:///./src/app/modules/users/components/account-finance-info/account-finance-info.component.scss","webpack:///./src/app/modules/users/components/account-finance-info/account-finance-info.component.ts","webpack:///./src/app/modules/users/components/account-personal-info/account-personal-info.component.html","webpack:///./src/app/modules/users/components/account-personal-info/account-personal-info.component.scss","webpack:///./src/app/modules/users/components/account-personal-info/account-personal-info.component.ts","webpack:///./src/app/modules/users/components/account-user-info/account-user-info.component.html","webpack:///./src/app/modules/users/components/account-user-info/account-user-info.component.scss","webpack:///./src/app/modules/users/components/account-user-info/account-user-info.component.ts","webpack:///./src/app/modules/users/components/account/account.component.html","webpack:///./src/app/modules/users/components/account/account.component.scss","webpack:///./src/app/modules/users/components/account/account.component.ts","webpack:///./src/app/modules/users/components/login/login.component.html","webpack:///./src/app/modules/users/components/login/login.component.scss","webpack:///./src/app/modules/users/components/login/login.component.ts","webpack:///./src/app/modules/users/components/register/register.component.html","webpack:///./src/app/modules/users/components/register/register.component.scss","webpack:///./src/app/modules/users/components/register/register.component.ts","webpack:///./src/app/modules/users/components/reset-password/reset-password.component.html","webpack:///./src/app/modules/users/components/reset-password/reset-password.component.scss","webpack:///./src/app/modules/users/components/reset-password/reset-password.component.ts","webpack:///./src/app/modules/users/models/account-finance.ts","webpack:///./src/app/modules/users/models/account-personal.ts","webpack:///./src/app/modules/users/models/user.ts","webpack:///./src/app/modules/users/users-routing.module.ts","webpack:///./src/app/modules/users/users.module.ts","webpack:///./src/app/modules/users/users.service.ts","webpack:///./src/app/util.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"inner mat-typography\\\">  \\r\\n  <mat-toolbar fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"toolbar__primary mat-elevation-z1\\\" color=\\\"primary\\\">\\r\\n    <a class=\\\"toolbar__brand-name color__almost-white\\\" routerLink=\\\"/\\\"><span>AtomiCoconut</span></a>\\r\\n    \\r\\n    <span *ngIf=\\\"!user\\\" fxLayoutAlign=\\\" center\\\">\\r\\n      <mat-icon routerLink=\\\"/users/login\\\" class=\\\"toolbar__icon\\\">account_circle</mat-icon>\\r\\n    </span>\\r\\n    <span *ngIf=\\\"user\\\" fxLayoutAlign=\\\" center\\\">\\r\\n      <img *ngIf=\\\"user.avatar\\\" \\r\\n          [matMenuTriggerFor]=\\\"userMenu\\\" \\r\\n          class=\\\"toolbar__icon user__avatar\\\" \\r\\n          [src]=\\\"user.avatar\\\"/>\\r\\n      <mat-icon *ngIf=\\\"!user.avatar\\\"\\r\\n          class=\\\"toolbar__icon user__icon--logged-in\\\" \\r\\n          [matMenuTriggerFor]=\\\"userMenu\\\">\\r\\n        account_circle\\r\\n      </mat-icon>\\r\\n      \\r\\n      <mat-menu class=\\\"user__menu--logged-in\\\" #userMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\r\\n        <button mat-menu-item routerLink=\\\"/users/account\\\">\\r\\n          <mat-icon>settings</mat-icon>\\r\\n          <span>My account</span>\\r\\n        </button>\\r\\n        <button mat-menu-item routerLink=\\\"/teams\\\">\\r\\n          <mat-icon>group</mat-icon>\\r\\n          <span>Teams</span>\\r\\n        </button>\\r\\n        <button mat-menu-item (click)=\\\"logout()\\\">\\r\\n          <mat-icon>exit_to_app</mat-icon>\\r\\n          <span>Logout</span>\\r\\n        </button>\\r\\n      </mat-menu>\\r\\n    </span>\\r\\n  </mat-toolbar>\\r\\n  <div class=\\\"toolbar__primary__spacer\\\"><!-- This is a spacer with main toolbar height to avoid any content going behind the toolbar --></div>\\r\\n\\r\\n  <mat-toolbar fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"toolbar__secondary\\\" *ngIf=\\\"user && todayUserPrefRate !== null\\\">\\r\\n    <span>Preferred currency is <a class=\\\"color__almost-white\\\" routerLink=\\\"/users/account\\\" matTooltip=\\\"Change...\\\"><strong>{{user.currency}}</strong></a></span>\\r\\n    <span>1 USD = {{todayUserPrefRate | number : '1.0-3' }} {{user.currency}}</span>\\r\\n  </mat-toolbar>\\r\\n\\r\\n  <!-- Main navigator (chips) -->\\r\\n  <main-navigator></main-navigator>\\r\\n\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\"","module.exports = \".toolbar__primary {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  z-index: 100; }\\n  .toolbar__primary .toolbar__brand-name {\\n    text-decoration: none; }\\n  .toolbar__primary .toolbar__icon {\\n    padding: 0 10px;\\n    cursor: pointer; }\\n  .toolbar__primary .user__avatar {\\n    border-radius: 50%;\\n    width: 30px;\\n    padding: 0 10px; }\\n  .toolbar__primary .user__icon--logged-in {\\n    color: #28FE7C; }\\n  .toolbar__primary__spacer {\\n  height: 54px; }\\n  .toolbar__secondary {\\n  margin-bottom: 10px;\\n  background-color: #9c27b0;\\n  font-size: 12px;\\n  height: 30px; }\\n  /* Chip navigation */\\n  ::ng-deep nav.navigation--main {\\n  margin-bottom: 20px; }\\n  @media screen and (min-width: 600px) {\\n  .toolbar__primary__spacer {\\n    height: 62px; } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQzpcXHczXFxhdG9taUNvY29udXRcXGNsaWVudC9zcmNcXGFwcFxcYXBwLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9DOlxcdzNcXGF0b21pQ29jb251dFxcY2xpZW50L3NyY1xcX3ZhcmlhYmxlcy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0UsZ0JBQWU7RUFDZixPQUFNO0VBQ04sUUFBTztFQUNQLGFBQVksRUFvQmI7RUF4QkQ7SUFPSSxzQkFBcUIsRUFDdEI7RUFSSDtJQVdJLGdCQUFlO0lBQ2YsZ0JBQWUsRUFDaEI7RUFiSDtJQWdCSSxtQkFBa0I7SUFDbEIsWUFBVztJQUNYLGdCQUFlLEVBQ2hCO0VBbkJIO0lBc0JJLGVDWlcsRURhWjtFQUdIO0VBQ0UsYUFBWSxFQUNiO0VBRUQ7RUFDRSxvQkFBbUI7RUFDbkIsMEJDM0IyQjtFRDRCM0IsZ0JBQWU7RUFDZixhQUFZLEVBQ2I7RUFFRCxxQkFBcUI7RUFDckI7RUFDRSxvQkFBbUIsRUFDcEI7RUFFRDtFQUVFO0lBQ0UsYUFBWSxFQUNiLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICcuLi92YXJpYWJsZXMnO1xyXG5cclxuLnRvb2xiYXJfX3ByaW1hcnkge1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICB0b3A6IDA7XHJcbiAgbGVmdDogMDtcclxuICB6LWluZGV4OiAxMDA7XHJcbiAgXHJcbiAgLnRvb2xiYXJfX2JyYW5kLW5hbWUge1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gIH1cclxuXHJcbiAgLnRvb2xiYXJfX2ljb24ge1xyXG4gICAgcGFkZGluZzogMCAxMHB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIH1cclxuXHJcbiAgLnVzZXJfX2F2YXRhciB7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICB3aWR0aDogMzBweDtcclxuICAgIHBhZGRpbmc6IDAgMTBweDtcclxuICB9XHJcblxyXG4gIC51c2VyX19pY29uLS1sb2dnZWQtaW4ge1xyXG4gICAgY29sb3I6ICRncmVlbjtcclxuICB9XHJcbn1cclxuXHJcbi50b29sYmFyX19wcmltYXJ5X19zcGFjZXIge1xyXG4gIGhlaWdodDogNTRweDtcclxufVxyXG5cclxuLnRvb2xiYXJfX3NlY29uZGFyeSB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5O1xyXG4gIGZvbnQtc2l6ZTogMTJweDtcclxuICBoZWlnaHQ6IDMwcHg7XHJcbn1cclxuXHJcbi8qIENoaXAgbmF2aWdhdGlvbiAqL1xyXG46Om5nLWRlZXAgbmF2Lm5hdmlnYXRpb24tLW1haW4ge1xyXG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbn1cclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRzY3JlZW5HdFhzKSB7XHJcbiAgXHJcbiAgLnRvb2xiYXJfX3ByaW1hcnlfX3NwYWNlciB7XHJcbiAgICBoZWlnaHQ6IDYycHg7XHJcbiAgfVxyXG4gIFxyXG59XHJcbiIsIi8vQnJlYWtwb2ludHNcclxuJHNjcmVlbkd0WHM6IDYwMHB4O1xyXG4kc2NyZWVuR3RTbTogOTYwcHg7IFxyXG5cclxuXHJcbi8vQ29sb3JzXHJcbiRwcmltYXJ5OiAjN2IxZmEyO1xyXG4kc2Vjb25kYXJ5OiByZ2IoMTU2LCAzOSwgMTc2KTtcclxuJGFjY2VudDogIzY5ZjBhZTtcclxuJHdhcm4gOiAjZjQ0MzM2O1xyXG4kcHVycGxlIDogJHByaW1hcnk7XHJcbiRwdXJwbGVGb250cyA6ICNDMzUyRjM7XHJcbiRncmVlbjogIzI4RkU3QztcclxuJHJlZDogI2ZmNTI3MTtcclxuJGxpZ2h0T3JhbmdlIDogcmdiYSgyNTUsIDE4NywgMCwgMC44Nyk7XHJcbiRhbG1vc3RXaGl0ZSA6IHJnYmEoMjU1LDI1NSwyNTUsLjg3KTtcclxuJGFsbW9zdEJsYWNrIDogcmdiYSgwLDAsMCwuODcpOyJdfQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { AppService } from './app.service';\r\nimport { UsersService } from './modules/users/users.service';\r\nimport { User } from './modules/users/models/user';\r\nimport { Router } from '@angular/router';\r\nimport { MainNavigatorService } from './modules/shared/components/main-navigator/main-navigator.service';\r\nimport { CurrencyExchangeService } from './modules/investments/currency-exchange.service';\r\nimport { UtilService } from './util.service';\r\nimport { of, Subscription, interval } from 'rxjs';\r\nimport { flatMap } from 'rxjs/operators';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  providers: [ MainNavigatorService ]\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n\r\n  title = 'AtomiCoconut';\r\n  user: User = null;\r\n  todayUserPrefRate: number = null;\r\n  subscription: Subscription = new Subscription();\r\n\r\n  constructor(private router: Router, private appService: AppService, public usersService: UsersService, public currencyExchangeService: CurrencyExchangeService,\r\n      private utilService: UtilService) { }\r\n\r\n  ngOnInit() {\r\n    const methodTrace = `${this.constructor.name} > ngOnInit() > `; // for debugging\r\n\r\n    // On any user change let loads its preferred currency rate and show it in the currency secondary toolbar\r\n    const newSubcription: Subscription = this.usersService.user$.pipe(\r\n      flatMap((user: User) => {\r\n        if (!user) {\r\n          this.todayUserPrefRate = null;\r\n        }\r\n  \r\n        this.user = user;\r\n\r\n        if (this.user && this.user.currency && this.user.currency !== 'USD') {\r\n          return this.currencyExchangeService.getCurrencyRates$();\r\n        }\r\n\r\n        return of(null); // is the user had not configure a preferred currency then we don't need to show the currency toolbar\r\n      })\r\n    ).subscribe((currencyRates: any) => {\r\n      if (currencyRates === null) {\r\n        this.todayUserPrefRate = null;\r\n        return;\r\n      }\r\n\r\n      this.todayUserPrefRate = currencyRates[this.utilService.formatToday()][`USD${this.user.currency}`];\r\n      this.appService.consoleLog('info', `${methodTrace} Currency exchange rates successfully loaded!`);\r\n    },\r\n    (error: any) => {\r\n      this.appService.consoleLog('error', `${methodTrace} There was an error trying to get currency rates data > ${error}`);\r\n      this.appService.showResults(`There was an error trying to get currency rates data.`, 'error');\r\n    }); // start listening the source of user\r\n    this.subscription.add(newSubcription);\r\n\r\n    // start tracking user changes every 10min (600000ms)\r\n    this.usersService.updateSessionState(600000);\r\n\r\n    this.getCryptoRates('BTC');\r\n    this.getCryptoRates('XMR');\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    const methodTrace = `${this.constructor.name} > ngOnDestroy() > `; // for debugging\r\n\r\n    // this.appService.consoleLog('info', `${methodTrace} Component destroyed.`);\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  getCryptoRates(crypto: string = 'BTC') {\r\n    const methodTrace = `${this.constructor.name} > getCryptoRates() > `; // for debugging\r\n\r\n    const newSubscription: Subscription = this.currencyExchangeService.getCryptoRates$(crypto).subscribe(\r\n      (data: any) => {\r\n        this.appService.consoleLog('info', `${methodTrace} ${crypto} exchange rate successfully loaded!`);\r\n      },\r\n      (error: any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error trying to get ${crypto} rates data > ${error}`);\r\n        this.appService.showResults(`There was an error trying to get ${crypto} rates data, please try again in a few minutes.`, 'warn');\r\n      }\r\n    );\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n  logout(): void {\r\n    const methodTrace = `${this.constructor.name} > logout() > `; // for debugging\r\n\r\n    const newSubscription: Subscription = this.usersService.logout$().subscribe(\r\n      (result: any) => {\r\n        this.user = result;\r\n        this.router.navigate(['/']);\r\n      },\r\n      (error: any) =>  {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error with the logout service.`, error);\r\n      }\r\n    );\r\n    this.subscription.add(newSubscription);\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport 'hammerjs';\r\n\r\nimport { AppRoutingModule } from './app.routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AppService } from './app.service';\r\nimport { UtilService } from './util.service';\r\nimport { AuthResolver } from './auth-resolver.service';\r\nimport { CurrencyExchangeService } from './modules/investments/currency-exchange.service';\r\nimport { CustomMaterialDesignModule } from './modules/shared/custom-material-design.module';\r\nimport { UsersModule } from './modules/users/users.module';\r\nimport { TeamsModule } from './modules/teams/teams.module'; \r\nimport { InvestmentsModule } from './modules/investments/investments.module';\r\nimport { CalculatorsModule } from './modules/calculators/calculators.module';\r\nimport { WelcomeComponent } from './components/welcome/welcome.component';\r\nimport { SharedModule } from './modules/shared/shared.module';\r\nimport { PropertiesModule } from './modules/properties/properties.module';\r\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    FlexLayoutModule,\r\n    CustomMaterialDesignModule,\r\n    SharedModule,\r\n    UsersModule,\r\n    TeamsModule,\r\n    InvestmentsModule,\r\n    CalculatorsModule,\r\n    PropertiesModule,\r\n    AppRoutingModule\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    WelcomeComponent,\r\n    PageNotFoundComponent\r\n  ],\r\n  providers: [AppService, UtilService, CurrencyExchangeService, AuthResolver],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { WelcomeComponent } from './components/welcome/welcome.component';\r\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\r\nconst appRoutes: Routes = [\r\n  {\r\n    path : 'welcome',\r\n    component : WelcomeComponent\r\n  },\r\n  {\r\n    path : 'page-not-found',\r\n    component : PageNotFoundComponent\r\n  },\r\n  {\r\n    path : '',\r\n    redirectTo : 'welcome',\r\n    pathMatch : 'full'\r\n  },\r\n  {\r\n    path : '**',\r\n    component : PageNotFoundComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(appRoutes, { enableTracing: false })\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { environment } from '../environments/environment';\r\nimport { SnackbarSimpleComponent } from './modules/shared/components/snackbar-simple/snackbar-simple.component';\r\nimport { Response } from './models/response';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { throwError } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AppService {\r\n\r\n  constructor(public snackBar: MatSnackBar) {}\r\n\r\n  /**\r\n   * Extract data from a server response\r\n   * @param res\r\n   */\r\n  public extractData(res: Response): any {\r\n    if (res.codeno === 200 && res.status === 'success') {\r\n      return res.data;\r\n    } else {\r\n      throw res;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle server service errors and parse the result in an object\r\n   * @param operation (string). The operation performed\r\n   * @param result (T). Optional, a result to handle the fail. \r\n   */\r\n  public handleError(result: HttpErrorResponse) {\r\n    return throwError(result.error);\r\n  }\r\n\r\n  /**\r\n   * Shows messages in snackbar component\r\n   * @param message . The text to show\r\n   * @param duration . The duration in milliseconds . Optional\r\n   * @param actionName . An action name to close the message on click. Optional\r\n   * \r\n   * @return {MatSnackBar} . The snackbar ref\r\n   */\r\n  showResults(message: string, type: string = 'info', duration: number = 5000): any {\r\n    const snackBarRef = this.snackBar.openFromComponent(SnackbarSimpleComponent, {\r\n      data : {\r\n        type,\r\n        message\r\n      },\r\n      duration,\r\n      panelClass : ['snackbar--simple', `snackbar--${type}`]\r\n    });\r\n\r\n    return snackBarRef;\r\n  }\r\n\r\n  /**\r\n   * Shows multiple messages in snackbar component one after another\r\n   * @param {any[]} messages . The array of messages to show\r\n   * @param {number} index . The index where to start iterating the messages array\r\n   * \r\n   * @return {MatSnackBar} . The snackbar Ref\r\n   */\r\n  showManyResults(messages: any[], index: number = 0) {\r\n    let snackBarRef = null;\r\n    if (index < messages.length) {\r\n      snackBarRef = this.showResults(messages[index].message, messages[index].type, messages[index].duration);\r\n\r\n      snackBarRef.afterDismissed().subscribe(() => {\r\n        this.showManyResults(messages, index += 1);\r\n      });\r\n    } else {\r\n      return snackBarRef;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Show logs in the console if enabled in the current environment\r\n   * @param type . Error type\r\n   * @param message . The message to show\r\n   * @param params . Any extra parameters to list in the log.\r\n   */\r\n  consoleLog(type: 'log' | 'debug' | 'warn' | 'info' | 'error', message: string, ...params) {\r\n    if (environment.showLogs) {\r\n      console[type](message, params);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { Router, Resolve, RouterStateSnapshot, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from './modules/users/models/user';\r\nimport { UsersService } from './modules/users/users.service';\r\nimport { AppService } from './app.service';\r\n\r\n@Injectable()\r\nexport class AuthResolver implements Resolve<User> {\r\n  constructor(private appService: AppService, private usersService: UsersService, private router: Router) { }\r\n  \r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): User | Observable<User> | Promise<User> {\r\n    const methodTrace = `${this.constructor.name} > resolve() > `; // for debugging  \r\n\r\n    this.usersService.routerRedirectUrl = state.url;\r\n    const urlsForCompleteUserData: Array<string> = ['/investments', '/users/account'];\r\n    let params: any = null;\r\n    if (urlsForCompleteUserData.includes(state.url)) {\r\n      params = { personalInfo : true, financialInfo : true };\r\n    }\r\n\r\n    return this.usersService.getAuthenticatedUser$(params).pipe(\r\n      map((user: User): User => {\r\n        if (user) {\r\n          this.usersService.routerRedirectUrl = null;\r\n          return user;\r\n        } else {\r\n          this.router.navigate(['/users/login']);\r\n          return null;\r\n        }\r\n      }),\r\n      catchError((error: any): Observable<User> => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error with the getAuthenticatedUser service.`, error);\r\n        this.router.navigate(['/users/login']);\r\n        return null;\r\n      })\r\n    );\r\n  }\r\n  \r\n}\r\n","module.exports = \"<p>\\r\\n  404 Page not found\\r\\n</p>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGFnZS1ub3QtZm91bmQvcGFnZS1ub3QtZm91bmQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.scss']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div *ngIf=\\\"user\\\" class=\\\"container__net-worth\\\">\\r\\n  <!-- Net Worth Card -->\\r\\n  <mat-card *ngIf=\\\"expectedWealth && user.personalInfo.age\\\"\\r\\n      fxLayout=\\\"column\\\" class=\\\"totals-card\\\">\\r\\n    <mat-card-content fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n      <div class=\\\"wealth__container\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"none center\\\" fxLayoutAlign.gt-xs=\\\"space-between none\\\">\\r\\n        <span [class.color__accent]=\\\"wealthAmount >= expectedWealth\\\" \\r\\n            [class.color__red]=\\\"wealthAmount < expectedWealth\\\">\\r\\n          Current net worth is <strong>{{ wealthAmount | currency : 'USD' : 'code' : '1.2-2' }}</strong>\\r\\n        </span>\\r\\n        <span class=\\\"accent\\\">\\r\\n          Expected net worth at your age ({{user.personalInfo.age}}) is \\r\\n          <strong>{{ expectedWealth | currency : 'USD' : 'code' : '1.2-2' }}</strong>\\r\\n        </span>\\r\\n      </div>\\r\\n      <div>\\r\\n        <mat-progress-bar \\r\\n          class=\\\"progress-spinner progress-spinner--wealth\\\"\\r\\n          [color]=\\\"wealthAmount < expectedWealth ? 'warn' : 'accent'\\\"\\r\\n          [value]=\\\"progressBarWealthValue\\\"\\r\\n          mode=\\\"determinate\\\">\\r\\n        </mat-progress-bar>\\r\\n      </div>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n    <!-- EOF Net Worth Card -->\\r\\n\\r\\n  <!-- Net Worth Card when Personal and Financial info is incomplete -->\\r\\n  <mat-card *ngIf=\\\"!user.financialInfo || !user.personalInfo\\\"\\r\\n      fxFlex class=\\\"totals-card\\\">\\r\\n    <mat-card-content fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"10px\\\"\\r\\n        fxLayoutAlign=\\\"space-around center\\\">\\r\\n      <p>\\r\\n        <a class=\\\"color__almost-white\\\" routerLink=\\\"/users/account\\\">\\r\\n          <mat-icon class=\\\"icon--arrow_forward\\\">arrow_forward</mat-icon>\\r\\n          Go to your account and complete your Personal and Financial Info to see expected and current Net Worth\\r\\n        </a>\\r\\n      </p>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n  <!-- EOF Net Worth Card when Personal and Financial info is incomplete -->\\r\\n</div>\"","module.exports = \".container__net-worth {\\n  margin-bottom: 10px; }\\n  .container__net-worth .icon--arrow_forward {\\n    float: left; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy93ZWxjb21lL0M6XFx3M1xcYXRvbWlDb2NvbnV0XFxjbGllbnQvc3JjXFxhcHBcXGNvbXBvbmVudHNcXHdlbGNvbWVcXHdlbGNvbWUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxvQkFBbUIsRUFLcEI7RUFORDtJQUlJLFlBQVcsRUFDWiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvd2VsY29tZS93ZWxjb21lLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lcl9fbmV0LXdvcnRoIHtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG5cclxuICAuaWNvbi0tYXJyb3dfZm9yd2FyZCB7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICB9XHJcbn0iXX0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { MainNavigatorService } from '../../modules/shared/components/main-navigator/main-navigator.service';\r\nimport { UsersService } from '../../modules/users/users.service';\r\nimport { AppService } from '../../app.service';\r\nimport { User } from '../../modules/users/models/user';\r\nimport { InvestmentsService } from '../../modules/investments/investments.service';\r\nimport { CurrencyExchangeService } from '../../modules/investments/currency-exchange.service';\r\nimport { Investment } from '../../modules/investments/models/investment';\r\nimport { CurrencyInvestment } from '../../modules/investments/models/currencyInvestment';\r\nimport { Subscription, of, from, Observable } from 'rxjs';\r\nimport { flatMap, map } from 'rxjs/operators';\r\nimport { INVESTMENTS_TYPES } from '../../constants';\r\nimport { UtilService } from '../../util.service';\r\nimport { PropertyInvestment } from '../../modules/investments/models/PropertyInvestment';\r\n\r\n@Component({\r\n  selector: 'welcome',\r\n  templateUrl: './welcome.component.html',\r\n  styleUrls: ['./welcome.component.scss']\r\n})\r\nexport class WelcomeComponent implements OnInit, OnDestroy {\r\n\r\n  user: User = null;\r\n  wealthAmount = 0;\r\n  expectedWealth = 0;\r\n  progressBarWealthValue = 0;\r\n  subscription: Subscription = new Subscription();\r\n\r\n  constructor(private mainNavigatorService: MainNavigatorService, private usersService: UsersService, private appService: AppService, \r\n      private investmentsService: InvestmentsService, private currencyExchangeService: CurrencyExchangeService, private utilService: UtilService) { }\r\n\r\n  ngOnInit() {\r\n    const methodTrace = `${this.constructor.name} > ngOnInit() > `; // for debugging\r\n\r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: null, selected: true },\r\n      { displayName: 'Investments', url: '/investments', selected: false },\r\n      { displayName: 'Properties', url: '/properties', selected: false },\r\n      { displayName: 'Calculators', url: '/calculators', selected: false }\r\n    ]);\r\n    \r\n    this.generateWealthComponentInfo();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // this.appService.consoleLog('info', `${methodTrace} Component destroyed.`);\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  generateWealthComponentInfo() {\r\n    const methodTrace = `${this.constructor.name} > generateWealthComponentInfo() > `; // for debugging\r\n\r\n    let currentUserInvestments: Investment[] = [];\r\n    const newSubscription: Subscription = this.setUserAndGetInvestments$().pipe(\r\n      flatMap((userInvestments: Investment[]) => {\r\n        currentUserInvestments = userInvestments;\r\n        const investmentsDates: string[] = userInvestments.map((investment: Investment) => {\r\n          if (investment instanceof CurrencyInvestment) {  \r\n            return this.utilService.formatDate((<CurrencyInvestment>investment).buyingDate);\r\n          } else if (investment instanceof PropertyInvestment) {\r\n            return this.utilService.formatDate((<PropertyInvestment>investment).buyingDate);\r\n          }\r\n\r\n          return this.utilService.formatToday(); // this should never happen. BuyingDate is required in investments\r\n        });\r\n        \r\n        return this.currencyExchangeService.getCurrencyRates$(investmentsDates);\r\n      }),\r\n      flatMap((currencyRates: any): Observable<any> => {\r\n        const investmentsAndCurrencyRates: any[] = currentUserInvestments.map((investment: Investment) => {\r\n          return { currencyRates, investment };\r\n        });\r\n\r\n        return from(investmentsAndCurrencyRates);\r\n      }),\r\n      flatMap((investmentAndCurrencyRates: any): Observable<any> => {\r\n        const myPercentage = (investmentAndCurrencyRates.investment.investmentDistribution.filter(portion => portion.email === this.user.email)[0]).percentage;\r\n\r\n        if (investmentAndCurrencyRates.investment instanceof CurrencyInvestment) {\r\n          const investment: CurrencyInvestment = <CurrencyInvestment>investmentAndCurrencyRates.investment;\r\n\r\n          if (investment.type === INVESTMENTS_TYPES.CURRENCY) {\r\n            this.wealthAmount += ((investment.amount * (investmentAndCurrencyRates['currencyRates'][this.utilService.formatToday()][`USD${investment.unit}`] || 1)) \r\n                - (investment.loanAmount / (investmentAndCurrencyRates['currencyRates'][this.utilService.formatDate(investment.buyingDate)][`USD${investment.loanAmountUnit}`] || 1)))\r\n                * myPercentage / 100;\r\n            this.calculateProgressBarWealthValue();\r\n            return of(null);\r\n          } else if (investment.type === INVESTMENTS_TYPES.CRYPTO) {\r\n            return this.currencyExchangeService.getCryptoRates$(investment.unit).pipe(\r\n              map((cryptoRates) => {\r\n                return { cryptoRates, myPercentage, investment, currencyRates: investmentAndCurrencyRates.currencyRates };\r\n              })\r\n            );\r\n          } else {\r\n            this.appService.consoleLog('error', `${methodTrace} Currency Investment type not recognized by this component: ${investment.type}`);\r\n            return of(null); // should never happen\r\n          }\r\n        } else if (investmentAndCurrencyRates.investment instanceof PropertyInvestment) {\r\n          const investment: PropertyInvestment = <PropertyInvestment>investmentAndCurrencyRates.investment;\r\n          this.wealthAmount += (this.currencyExchangeService.getUsdValueOf(investment.property.marketValue, investment.property.marketValueUnit)\r\n              - (investment.loanAmount / (investmentAndCurrencyRates['currencyRates'][this.utilService.formatDate(investment.buyingDate)][`USD${investment.loanAmountUnit}`] || 1)))\r\n              * myPercentage / 100;\r\n          this.calculateProgressBarWealthValue();\r\n          return of(null);\r\n        } else {\r\n          this.appService.consoleLog('error', `${methodTrace} Investment type not recognized by this component: ${investmentAndCurrencyRates.investment.type}`);\r\n          return of(null); // should never happen\r\n        }\r\n        \r\n      })\r\n    ).subscribe((data) => {\r\n      if (data) {\r\n        // this is a crryptorate investment (all the others returns null)\r\n        this.wealthAmount += ((data.investment.amount * data.cryptoRates.price) \r\n            - (data.investment.loanAmount / (data['currencyRates'][this.utilService.formatDate(data.investment.buyingDate)][`USD${data.investment.loanAmountUnit}`] || 1)))\r\n            * data.myPercentage / 100;\r\n        this.calculateProgressBarWealthValue();\r\n      }\r\n      \r\n    },\r\n    (error: any) => {\r\n      this.appService.consoleLog('error', `${methodTrace} There was an error trying to get required data > `, error);\r\n      this.appService.showResults(`There was an error trying to get required data, please try again in a few minutes.`, 'error');\r\n    });\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n  /**\r\n   * Sets the user property with the current user or null if nobody logged in yet.\r\n   * \r\n   * @return { Observable<Investment[]> } . An observable with array of the logged in user investments or [] if nobody is logged in yet\r\n   */\r\n  setUserAndGetInvestments$(): Observable<Investment[]> {\r\n    const methodTrace = `${this.constructor.name} > setUserAndGetInvestments$() > `; // for debugging\r\n\r\n    return this.usersService.user$.pipe(\r\n      flatMap((user: User) => {\r\n        // reset all values to recalculate for this user \r\n        this.wealthAmount = 0;\r\n        this.expectedWealth = 0;\r\n        this.progressBarWealthValue = 0;\r\n        if (!user) {\r\n          return of(null);\r\n        } else if (!user.personalInfo || !user.financialInfo) {\r\n          return this.usersService.getAuthenticatedUser$({ personalInfo: true, financialInfo: true });\r\n        } else {\r\n          return of(user);\r\n        }\r\n      }),\r\n      flatMap((user: User) => {\r\n        this.user = user;\r\n\r\n        if (user) {\r\n          if (user.financialInfo) {\r\n            this.wealthAmount += this.currencyExchangeService.getUsdValueOf(user.financialInfo.savings || 0, user.financialInfo.savingsUnit);\r\n            \r\n            if (user.personalInfo && user.personalInfo.age) {\r\n              this.expectedWealth = this.currencyExchangeService.getUsdValueOf(user.financialInfo.annualIncome || 0, user.financialInfo.annualIncomeUnit) * user.personalInfo.age / 10;\r\n            } else {\r\n              this.expectedWealth = 0;\r\n            }\r\n            \r\n            this.calculateProgressBarWealthValue();\r\n          }\r\n  \r\n          return this.investmentsService.getInvestments$(user.email);\r\n        }\r\n        \r\n        return of([]);\r\n      })\r\n    );\r\n    \r\n  }\r\n\r\n  calculateProgressBarWealthValue() {\r\n    if (!this.expectedWealth) {\r\n      this.progressBarWealthValue = 0;\r\n      return;\r\n    }\r\n\r\n    const value = this.wealthAmount * 100 / this.expectedWealth;\r\n    this.progressBarWealthValue = value > 100 ? 100 : value;\r\n  }\r\n\r\n}\r\n","export const PROPERTY_TYPES = {\r\n  HOUSE: 'house'\r\n};\r\n\r\nexport const HOUSE_BUILDING_TYPES = {\r\n  HOUSE: 'house',\r\n  APARTMENT : 'apartment',\r\n  UNIT : 'unit'\r\n};\r\n\r\nexport const NZ_HOUSE_TITLE_TYPES = {\r\n  FEE_SIMPLE : 'feeSimple',\r\n  CROSS_LEASE : 'crossLease',\r\n  LEASE_HOLD : 'leaseHold'\r\n};\r\n\r\nexport const INVESTMENTS_TYPES = {\r\n  CURRENCY: 'currency',\r\n  CRYPTO : 'crypto',\r\n  PROPERTY : 'property'\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { EquityComponent } from './components/equity/equity.component';\r\nimport { CalculatorsDashboardComponent } from './components/calculators-dashboard/calculators-dashboard.component';\r\nimport { HouseFiguresComponent } from './components/house-figures/house-figures.component';\r\n\r\nconst routes: Routes = [{\r\n  path : 'calculators',\r\n  children : [\r\n    { path : '', component : CalculatorsDashboardComponent },\r\n    { path : 'equity', component : EquityComponent },\r\n    { path : 'house-figures', component : HouseFiguresComponent }\r\n  ]\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CalculatorsRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { CustomMaterialDesignModule } from '../../modules/shared/custom-material-design.module';\r\nimport { SharedModule } from '../../modules/shared/shared.module';\r\nimport { CalculatorsRoutingModule } from './calculators-routing.module';\r\nimport { EquityComponent } from './components/equity/equity.component';\r\nimport { CalculatorsDashboardComponent } from './components/calculators-dashboard/calculators-dashboard.component';\r\nimport { HouseFiguresComponent } from './components/house-figures/house-figures.component';\r\nimport { HouseFiguresResultsComponent } from './components/house-figures-results/house-figures-results.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CalculatorsRoutingModule,\r\n    FormsModule,\r\n    FlexLayoutModule,\r\n    CustomMaterialDesignModule,\r\n    SharedModule\r\n  ],\r\n  exports: [\r\n    HouseFiguresResultsComponent\r\n  ],\r\n  declarations: [\r\n    EquityComponent, \r\n    CalculatorsDashboardComponent, \r\n    HouseFiguresComponent, \r\n    HouseFiguresResultsComponent\r\n  ]\r\n})\r\nexport class CalculatorsModule { }\r\n","module.exports = \"\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY2FsY3VsYXRvcnMvY29tcG9uZW50cy9jYWxjdWxhdG9ycy1kYXNoYm9hcmQvY2FsY3VsYXRvcnMtZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { MainNavigatorService } from '../../../shared/components/main-navigator/main-navigator.service';\r\n\r\n@Component({\r\n  selector: 'app-calculators-dashboard',\r\n  templateUrl: './calculators-dashboard.component.html',\r\n  styleUrls: ['./calculators-dashboard.component.scss']\r\n})\r\nexport class CalculatorsDashboardComponent implements OnInit {\r\n\r\n  constructor(private mainNavigatorService: MainNavigatorService) { }\r\n\r\n  ngOnInit() {\r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: '/welcome', selected: false },\r\n      { displayName: 'Calculators', url: null, selected: true },\r\n      { displayName: 'Equity', url: '/calculators/equity', selected: false },\r\n      { displayName: 'House figures', url: '/calculators/house-figures', selected: false }]);\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"calculator__container\\\" fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-sm=\\\"center none\\\">\\r\\n  <!--  form  -->\\r\\n  <form class=\\\"form__container form__equity-calc\\\" #equityForm=\\\"ngForm\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" >\\r\\n    <section fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields\\\">\\r\\n      <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- Purchase price -->\\r\\n          <mat-form-field fxFlex  class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"number\\\" id=\\\"purchasePrice\\\" name=\\\"purchasePrice\\\" placeholder=\\\"Purchase price\\\" \\r\\n                [(ngModel)]=\\\"model.purchasePrice\\\" \\r\\n                numberValidator\\r\\n                [value]=\\\"model.purchasePrice\\\"\\r\\n                #purchasePrice=\\\"ngModel\\\">\\r\\n            \\r\\n            <mat-icon matPrefix>attach_money</mat-icon>\\r\\n            <mat-error *ngIf=\\\"purchasePrice.invalid && (purchasePrice.dirty || purchasePrice.touched) && purchasePrice.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n          </mat-form-field>\\r\\n          \\r\\n          <!-- Market value -->\\r\\n          <mat-form-field fxFlex  class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"number\\\" id=\\\"marketValue\\\" name=\\\"marketValue\\\" placeholder=\\\"Market value\\\" \\r\\n                [(ngModel)]=\\\"model.marketValue\\\" \\r\\n                numberValidator\\r\\n                [value]=\\\"model.marketValue\\\"\\r\\n                #marketValue=\\\"ngModel\\\">\\r\\n            \\r\\n            <mat-icon matPrefix>attach_money</mat-icon>\\r\\n            <mat-error *ngIf=\\\"marketValue.invalid && (marketValue.dirty || marketValue.touched) && marketValue.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- Loan coverage -->\\r\\n          <div fxFlex=\\\"none\\\" fxFlex.gt-xs fxLayout=\\\"column\\\" class=\\\"form__field slider__field\\\">\\r\\n            <label class=\\\"slider__label\\\">Loan coverage</label>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n              <mat-slider fxFlex id=\\\"loanCoverage\\\" name=\\\"loanCoverage\\\"\\r\\n                  color=\\\"accent\\\"\\r\\n                  [max]=\\\"100\\\"\\r\\n                  [min]=\\\"0\\\"\\r\\n                  [step]=\\\"1\\\"\\r\\n                  thumbLabel=\\\"true\\\"\\r\\n                  tickInterval=\\\"1\\\"\\r\\n                  [(ngModel)]=\\\"model.loanCoverage\\\"\\r\\n                  [value]=\\\"model.loanCoverage\\\"> \\r\\n              </mat-slider>\\r\\n              <span *ngIf=\\\"model.loanCoverage\\\">{{model.loanCoverage}}%</span>\\r\\n            </div>\\r\\n            <label class=\\\"mat-hint slider__label__hint\\\">Percentage of the purchase price covered by the loan.</label>\\r\\n          </div>\\r\\n\\r\\n          <!-- Savings -->\\r\\n          <mat-form-field fxFlex  class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"number\\\" id=\\\"savings\\\" name=\\\"savings\\\" placeholder=\\\"Savings\\\" \\r\\n                [(ngModel)]=\\\"model.savings\\\" \\r\\n                numberValidator\\r\\n                [value]=\\\"model.savings\\\"\\r\\n                #savings=\\\"ngModel\\\">\\r\\n\\r\\n            <mat-icon matPrefix>attach_money</mat-icon>\\r\\n            <mat-error *ngIf=\\\"savings.invalid && (savings.dirty || savings.touched) && savings.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n           <!-- Renovation cost -->\\r\\n           <mat-form-field fxFlex  class=\\\"form__field\\\">\\r\\n              <input matInput type=\\\"number\\\" id=\\\"renovationCost\\\" name=\\\"renovationCost\\\" placeholder=\\\"Renovation cost\\\" \\r\\n                  [(ngModel)]=\\\"model.renovationCost\\\" \\r\\n                  [value]=\\\"model.renovationCost\\\"\\r\\n                  numberValidator\\r\\n                  #renovationCost=\\\"ngModel\\\">\\r\\n  \\r\\n                  <mat-icon matPrefix>attach_money</mat-icon>\\r\\n                  <mat-hint align=\\\"start\\\">The cost to do all the renovations.</mat-hint>\\r\\n                  <mat-error *ngIf=\\\"renovationCost.invalid && (renovationCost.dirty || renovationCost.touched) && renovationCost.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <!-- Loan amount paid -->\\r\\n            <mat-form-field fxFlex  class=\\\"form__field\\\">\\r\\n              <input matInput type=\\\"number\\\" id=\\\"loanAmountPaid\\\" name=\\\"loanAmountPaid\\\" placeholder=\\\"Loan amount paid\\\" \\r\\n                  [(ngModel)]=\\\"model.loanAmountPaid\\\" \\r\\n                  [value]=\\\"model.loanAmountPaid\\\"\\r\\n                  numberValidator\\r\\n                  #loanAmountPaid=\\\"ngModel\\\">\\r\\n  \\r\\n                  <mat-icon matPrefix>attach_money</mat-icon>\\r\\n                  <mat-hint align=\\\"start\\\">The amount of money paid back to the lender.</mat-hint>\\r\\n                  <mat-error *ngIf=\\\"loanAmountPaid.invalid && (loanAmountPaid.dirty || loanAmountPaid.touched) && loanAmountPaid.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- Second loan coverage -->\\r\\n          <div fxFlex=\\\"none\\\" fxFlex.gt-xs fxLayout=\\\"column\\\" class=\\\"form__field slider__field\\\">\\r\\n            <label class=\\\"slider__label\\\">Second loan coverage</label>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n              <mat-slider fxFlex id=\\\"secondLoanCoverage\\\" name=\\\"secondLoanCoverage\\\"\\r\\n                  color=\\\"accent\\\"\\r\\n                  [max]=\\\"100\\\"\\r\\n                  [min]=\\\"0\\\"\\r\\n                  [step]=\\\"1\\\"\\r\\n                  thumbLabel=\\\"true\\\"\\r\\n                  tickInterval=\\\"1\\\"\\r\\n                  [(ngModel)]=\\\"model.secondLoanCoverage\\\"\\r\\n                  [value]=\\\"model.secondLoanCoverage\\\"> \\r\\n              </mat-slider>\\r\\n              <span *ngIf=\\\"model.secondLoanCoverage\\\">{{model.secondLoanCoverage}}%</span>\\r\\n            </div>\\r\\n            <label class=\\\"mat-hint slider__label__hint\\\">Percentage of the purchase price of a new property covered by a second loan.</label>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </section>\\r\\n  </form>\\r\\n\\r\\n  <!-- Results -->\\r\\n  <section fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" fxFlex fxFlex.gt-sm=\\\"300px\\\" class=\\\"calculator__results\\\">\\r\\n    <mat-card>\\r\\n      <mat-card-title class=\\\"mat-card-title--ac\\\">Results</mat-card-title>\\r\\n\\r\\n      <mat-card-content fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n\\r\\n        <div fxLayout.xs=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayout.gt-sm=\\\"column\\\" \\r\\n            fxLayoutGap.xs=\\\"10px\\\"fxLayoutGap.gt-xs=\\\"50px\\\" fxLayoutGap.gt-sm=\\\"10px\\\"\\r\\n            fxLayoutAlign.xs=\\\"start none\\\" fxLayoutAlign.gt-xs=\\\"space-between none\\\" fxLayoutAlign.gt-sm=\\\"start none\\\">\\r\\n\\r\\n          <div fxFlex.xs=\\\"none\\\" fxFlex.gt-xs fxFlex.gt-sm=\\\"none\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n            <info-tooltip\\r\\n                title=\\\"Loan amount\\\"></info-tooltip>\\r\\n            <span>{{loanAmount | currency : 'USD' : 'symbol' : '1.2-2'}}</span>\\r\\n          </div>\\r\\n  \\r\\n          <div fxFlex.xs=\\\"none\\\" fxFlex.gt-xs fxFlex.gt-sm=\\\"none\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n            <info-tooltip\\r\\n                title=\\\"Deposit amount\\\"></info-tooltip>\\r\\n            <span>{{depositAmount | currency : 'USD' : 'symbol' : '1.2-2'}}</span>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout.xs=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayout.gt-sm=\\\"column\\\" \\r\\n            fxLayoutGap.xs=\\\"10px\\\"fxLayoutGap.gt-xs=\\\"50px\\\" fxLayoutGap.gt-sm=\\\"10px\\\"\\r\\n            fxLayoutAlign.xs=\\\"start none\\\" fxLayoutAlign.gt-xs=\\\"space-between none\\\" fxLayoutAlign.gt-sm=\\\"start none\\\">\\r\\n\\r\\n          <div fxFlex.xs=\\\"none\\\" fxFlex.gt-xs fxFlex.gt-sm=\\\"none\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n            <info-tooltip\\r\\n                title=\\\"Discount\\\"></info-tooltip>\\r\\n            <span>{{discount | currency : 'USD' : 'symbol' : '1.2-2'}}</span>\\r\\n          </div>\\r\\n  \\r\\n          <div fxFlex.xs=\\\"none\\\" fxFlex.gt-xs fxFlex.gt-sm=\\\"none\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n            <info-tooltip\\r\\n                title=\\\"Equity\\\"></info-tooltip>\\r\\n            <span>{{equity | currency : 'USD' : 'symbol' : '1.2-2'}}</span>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout.xs=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayout.gt-sm=\\\"column\\\" \\r\\n            fxLayoutGap.xs=\\\"10px\\\"fxLayoutGap.gt-xs=\\\"50px\\\" fxLayoutGap.gt-sm=\\\"10px\\\"\\r\\n            fxLayoutAlign.xs=\\\"start none\\\" fxLayoutAlign.gt-xs=\\\"space-between none\\\" fxLayoutAlign.gt-sm=\\\"start none\\\">\\r\\n  \\r\\n          <div fxFlex.xs=\\\"none\\\" fxFlex.gt-xs fxFlex.gt-sm=\\\"none\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n            <info-tooltip\\r\\n                title=\\\"Usable equity\\\"></info-tooltip>\\r\\n            <span>{{usableEquity | currency : 'USD' : 'symbol' : '1.2-2'}}</span>\\r\\n          </div>\\r\\n\\r\\n          <div fxFlex.xs=\\\"none\\\" fxFlex.gt-xs fxFlex.gt-sm=\\\"none\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n            <info-tooltip\\r\\n                title=\\\"Purchase capacity\\\"\\r\\n                text=\\\"Maximum purchase capacity based on the usable equity and the second loan coverage.\\\"></info-tooltip>\\r\\n            <span>{{purchaseCapacity | currency : 'USD' : 'symbol' : '1.2-2'}}</span>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </section>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY2FsY3VsYXRvcnMvY29tcG9uZW50cy9lcXVpdHkvZXF1aXR5LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, AfterViewInit, OnDestroy } from '@angular/core';\r\nimport { MainNavigatorService } from '../../../shared/components/main-navigator/main-navigator.service';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-equity',\r\n  templateUrl: './equity.component.html',\r\n  styleUrls: ['./equity.component.scss']\r\n})\r\nexport class EquityComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('equityForm') form;\r\n\r\n  loanAmount = 0;\r\n  discount = 0;\r\n  equity = 0;\r\n  depositAmount = 0;\r\n  usableEquity = 0;\r\n  purchaseCapacity = 0;\r\n\r\n  model: any = { \r\n    purchasePrice : 0,\r\n    marketValue : 0,\r\n    loanCoverage : 80,\r\n    savings : 0,\r\n    renovationCost : 0,\r\n    loanAmountPaid : 0,\r\n    secondLoanCoverage : 65\r\n  };\r\n\r\n  subscription: Subscription = new Subscription();\r\n\r\n  constructor(private mainNavigatorService: MainNavigatorService) { }\r\n\r\n  ngOnInit() {\r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: '/welcome', selected: false },\r\n      { displayName: 'Calculators', url: '/calculators', selected: false },\r\n      { displayName: 'Equity', url: null, selected: true },\r\n      { displayName: 'House figures', url: '/calculators/house-figures', selected: false }]);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    const methodTrace = `${this.constructor.name} > ngOnDestroy() > `; // for debugging\r\n\r\n    // this.appService.consoleLog('info', `${methodTrace} Component destroyed.`);\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const newSubscription = this.form.valueChanges.pipe(debounceTime(500)).subscribe(values => {\r\n      this.loanAmount = values.purchasePrice * (values.loanCoverage / 100);\r\n      this.discount = values.marketValue - values.purchasePrice - values.renovationCost;\r\n      this.depositAmount = values.purchasePrice - this.loanAmount;\r\n      this.equity = values.savings + this.discount + this.depositAmount;\r\n      this.usableEquity = values.marketValue * (this.model.loanCoverage / 100) - this.loanAmount + values.loanAmountPaid + values.savings;\r\n      this.purchaseCapacity = (this.usableEquity * 100) / (100 - values.secondLoanCoverage);\r\n    });\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-card>\\r\\n  <mat-card-title *ngIf=\\\"title\\\" class=\\\"mat-card-title--ac\\\">\\r\\n    {{title}}\\r\\n  </mat-card-title>\\r\\n  <mat-card-subtitle *ngIf=\\\"subtitle\\\">\\r\\n    {{subtitle}}\\r\\n  </mat-card-subtitle>\\r\\n\\r\\n  <mat-card-content fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n\\r\\n    <div fxLayout.xs=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayout.gt-sm=\\\"column\\\" \\r\\n        fxLayoutGap.xs=\\\"10px\\\"fxLayoutGap.gt-xs=\\\"50px\\\" fxLayoutGap.gt-sm=\\\"10px\\\"\\r\\n        fxLayoutAlign.xs=\\\"start none\\\" fxLayoutAlign.gt-xs=\\\"space-between none\\\" fxLayoutAlign.gt-sm=\\\"start none\\\">\\r\\n\\r\\n      <div fxFlex.xs=\\\"none\\\" fxFlex.gt-xs fxFlex.gt-sm=\\\"none\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n        <info-tooltip\\r\\n            title=\\\"Gross yield\\\" \\r\\n            text=\\\"Ratio between Gross annual rent / purchase price (as percentage)\\\"\\r\\n            position=\\\"right\\\"></info-tooltip>\\r\\n        <span>{{grossYield | percent : '1.1-2'}}</span>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex.xs=\\\"none\\\" fxFlex.gt-xs fxFlex.gt-sm=\\\"none\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n        <info-tooltip \\r\\n            title=\\\"Net yield\\\" \\r\\n            text=\\\"Ratio between (Net annual rent - Expenses) / Purchase price * 100\\\"\\r\\n            position=\\\"right\\\"></info-tooltip>\\r\\n        <span>{{netYield | percent : '1.1-2'}}</span>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    \\r\\n    <div fxLayout.xs=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayout.gt-sm=\\\"column\\\" \\r\\n        fxLayoutGap.xs=\\\"10px\\\"fxLayoutGap.gt-xs=\\\"50px\\\" fxLayoutGap.gt-sm=\\\"10px\\\"\\r\\n        fxLayoutAlign.xs=\\\"start none\\\" fxLayoutAlign.gt-xs=\\\"space-between none\\\" fxLayoutAlign.gt-sm=\\\"start none\\\">\\r\\n\\r\\n      <div fxFlex.xs=\\\"none\\\" fxFlex.gt-xs fxFlex.gt-sm=\\\"none\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n        <info-tooltip title=\\\"Gross annual rent\\\" text=\\\"Rent a week * 52\\\"></info-tooltip>\\r\\n        <span>{{grossAnnualRent | currency : 'USD' : 'symbol' : '1.2-2'}}</span>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex.xs=\\\"none\\\" fxFlex.gt-xs fxFlex.gt-sm=\\\"none\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n        <info-tooltip title=\\\"Net annual rent\\\" text=\\\"Gross annual rent - Vacancy\\\"></info-tooltip>\\r\\n        <span>{{netAnnualRent | currency : 'USD' : 'symbol' : '1.2-2'}}</span>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    \\r\\n    <div fxLayout.xs=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayout.gt-sm=\\\"column\\\" \\r\\n        fxLayoutGap.xs=\\\"10px\\\"fxLayoutGap.gt-xs=\\\"50px\\\" fxLayoutGap.gt-sm=\\\"10px\\\"\\r\\n        fxLayoutAlign.xs=\\\"start none\\\" fxLayoutAlign.gt-xs=\\\"space-between none\\\" fxLayoutAlign.gt-sm=\\\"start none\\\">\\r\\n\\r\\n      <div fxFlex.xs=\\\"none\\\" fxFlex.gt-xs fxFlex.gt-sm=\\\"none\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n        <info-tooltip title=\\\"Loan interest\\\" \\r\\n            text=\\\"The interest of the loan based in the specified interest rate.\\\"\\r\\n            position=\\\"right\\\"></info-tooltip>\\r\\n        <span>{{loanInterest | currency : 'USD' : 'symbol' : '1.2-2'}}</span>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex.xs=\\\"none\\\" fxFlex.gt-xs fxFlex.gt-sm=\\\"none\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n        <info-tooltip title=\\\"Loan repayments\\\" text=\\\"{{loanRepaymentsLabels[paymentFrecuency]}}\\\"></info-tooltip>\\r\\n        <span>{{loanRepayments | currency : 'USD' : 'symbol' : '1.2-2'}}</span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout.xs=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayout.gt-sm=\\\"column\\\" \\r\\n        fxLayoutGap.xs=\\\"10px\\\"fxLayoutGap.gt-xs=\\\"50px\\\" fxLayoutGap.gt-sm=\\\"10px\\\"\\r\\n        fxLayoutAlign.xs=\\\"start none\\\" fxLayoutAlign.gt-xs=\\\"space-between none\\\" fxLayoutAlign.gt-sm=\\\"start none\\\">\\r\\n\\r\\n      <div fxFlex.xs=\\\"none\\\" fxFlex.gt-xs fxFlex.gt-sm=\\\"none\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n        <info-tooltip title=\\\"Pre tax cashflow\\\" text=\\\"Net annual rent - Expenses - Loan interest\\\"></info-tooltip>\\r\\n        <span>{{preTaxCashflow | currency : 'USD' : 'symbol' : '1.2-2'}}</span>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex.xs=\\\"none\\\" fxFlex.gt-xs fxFlex.gt-sm=\\\"none\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n        <info-tooltip title=\\\"Discount\\\"></info-tooltip>\\r\\n        <span>{{discount | percent : '1.1-2'}}</span>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout.xs=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayout.gt-sm=\\\"column\\\" \\r\\n        fxLayoutGap.xs=\\\"10px\\\"fxLayoutGap.gt-xs=\\\"50px\\\" fxLayoutGap.gt-sm=\\\"10px\\\"\\r\\n        fxLayoutAlign.xs=\\\"start none\\\" fxLayoutAlign.gt-xs=\\\"space-between none\\\" fxLayoutAlign.gt-sm=\\\"start none\\\">\\r\\n\\r\\n      <div fxFlex.xs=\\\"none\\\" fxFlex.gt-xs fxFlex.gt-sm=\\\"none\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n        <info-tooltip title=\\\"Total 1 year return\\\" text=\\\"Capital growth + Market value - Purchase price - Renovations + Pre tax cashflow\\\"></info-tooltip>\\r\\n        <span>{{totalFirstYearReturn | currency : 'USD' : 'symbol' : '1.2-2'}}</span>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex.xs=\\\"none\\\" fxFlex.gt-xs fxFlex.gt-sm=\\\"none\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n        <info-tooltip title=\\\"Deposit\\\" text=\\\"\\\"></info-tooltip>\\r\\n        <span>{{deposit | currency : 'USD' : 'symbol' : '1.2-2'}}</span>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout.xs=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayout.gt-sm=\\\"column\\\" \\r\\n        fxLayoutGap.xs=\\\"10px\\\"fxLayoutGap.gt-xs=\\\"50px\\\" fxLayoutGap.gt-sm=\\\"10px\\\"\\r\\n        fxLayoutAlign.xs=\\\"start none\\\" fxLayoutAlign.gt-xs=\\\"space-between none\\\" fxLayoutAlign.gt-sm=\\\"start none\\\">\\r\\n\\r\\n      <div fxFlex.xs=\\\"none\\\" fxFlex.gt-xs fxFlex.gt-sm=\\\"none\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n        <info-tooltip title=\\\"Return on deposit\\\" text=\\\"Ratio between Total 1st year return / Deposit * 100\\\"></info-tooltip>\\r\\n        <span>{{returnOnDeposit | percent : '1.1-2'}}</span>\\r\\n      </div>\\r\\n      \\r\\n      <div fxFlex.xs=\\\"none\\\" fxFlex.gt-xs fxFlex.gt-sm=\\\"none\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n        <info-tooltip title=\\\"Capital growth\\\" text=\\\"\\\"></info-tooltip>\\r\\n        <span>{{capitalGrowths | currency : 'USD' : 'symbol' : '1.2-2'}}</span>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout.xs=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayout.gt-sm=\\\"column\\\" \\r\\n        fxLayoutGap.xs=\\\"10px\\\"fxLayoutGap.gt-xs=\\\"50px\\\" fxLayoutGap.gt-sm=\\\"10px\\\"\\r\\n        fxLayoutAlign.xs=\\\"start none\\\" fxLayoutAlign.gt-xs=\\\"space-between none\\\" fxLayoutAlign.gt-sm=\\\"start none\\\">\\r\\n\\r\\n      <div fxFlex.xs=\\\"none\\\" fxFlex.gt-xs fxFlex.gt-sm=\\\"none\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n        <info-tooltip title=\\\"Expenses\\\" text=\\\"Sums all the expenses in detailed before\\\"></info-tooltip>\\r\\n        <span>{{expenses | currency : 'USD' : 'symbol' : '1.2-2'}}</span>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex.xs=\\\"none\\\" fxFlex.gt-xs fxFlex.gt-sm=\\\"none\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n        <info-tooltip title=\\\"Anual cashflow\\\" text=\\\"Gross anual rent - Loan repay. * Repay frec - Expenses\\\"></info-tooltip>\\r\\n        <span>{{cashflow | currency : 'USD' : 'symbol' : '1.2-2'}}</span>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </mat-card-content>\\r\\n</mat-card>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY2FsY3VsYXRvcnMvY29tcG9uZW50cy9ob3VzZS1maWd1cmVzLXJlc3VsdHMvaG91c2UtZmlndXJlcy1yZXN1bHRzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'house-figures-results',\r\n  templateUrl: './house-figures-results.component.html',\r\n  styleUrls: ['./house-figures-results.component.scss']\r\n})\r\nexport class HouseFiguresResultsComponent implements OnInit, OnChanges {\r\n\r\n  @Input() title = null;\r\n  @Input() subtitle = null;\r\n  @Input() purchasePrice = 0;\r\n  @Input() capitalGrowth = 0;\r\n  @Input() marketValue = 0;\r\n  @Input() loanCoverage = 0;\r\n  @Input() interestRates = 0;\r\n  @Input() loanTerm = 0;\r\n  @Input() paymentFrecuency = '26';\r\n  @Input() rentPrice = 0;\r\n  @Input() rentPaymentFrecuency = 'weekly';\r\n  @Input() vacancy = 0;\r\n  @Input() renovationCost = 0;\r\n  @Input() maintenanceCost = 0;\r\n  @Input() bodyCorporate = 0;\r\n  @Input() houseRates = 0;\r\n  @Input() utilities = 0;\r\n  @Input() insurance = 0;\r\n  @Input() otherCosts = 0;\r\n  @Input() managed = 0;\r\n\r\n  grossAnnualRent = 0;\r\n  netAnnualRent = 0;\r\n  grossYield = 0;\r\n  netYield = 0;\r\n  expenses = 0;\r\n  loanInterest = 0;\r\n  loanRepayments = 0;\r\n  loanRepaymentsLabels: any = { '12': 'Monthly', '26' : 'Fortnightly', '52' : 'Weekly' };\r\n  preTaxCashflow = 0;\r\n  discount = 0;\r\n  capitalGrowths = 0;\r\n  totalFirstYearReturn = 0;\r\n  deposit = 0;\r\n  returnOnDeposit = 0;\r\n  cashflow = 0;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    // any time something changes then refresh all values\r\n    const weeklyRent = this.getRentPricePerWeek();\r\n    this.grossAnnualRent = weeklyRent * 52;\r\n    this.netAnnualRent = this.grossAnnualRent - weeklyRent * this.vacancy;\r\n    this.grossYield = this.grossAnnualRent / this.purchasePrice;\r\n    this.expenses = this.renovationCost + this.maintenanceCost + this.bodyCorporate + this.houseRates + this.utilities + this.insurance\r\n        + this.otherCosts + this.netAnnualRent * (this.managed / 100);\r\n    this.netYield = (this.netAnnualRent - this.expenses) / this.purchasePrice;\r\n    this.loanInterest = this.purchasePrice * (this.interestRates / 100);\r\n    const numberOfPayments = this.loanTerm * parseInt(this.paymentFrecuency, 10);\r\n    const periodicInterestRate = (this.interestRates / 100) / parseInt(this.paymentFrecuency, 10);\r\n    const loanDiscountFactor = (Math.pow(1 + periodicInterestRate, numberOfPayments) - 1) / (periodicInterestRate * Math.pow(1 + periodicInterestRate, numberOfPayments));\r\n    this.loanRepayments = (this.purchasePrice * (this.loanCoverage / 100)) / loanDiscountFactor; \r\n    this.preTaxCashflow = this.netAnnualRent - this.expenses - this.loanInterest;\r\n    this.discount = (this.marketValue - this.purchasePrice - this.renovationCost) / (this.marketValue || 1);\r\n    this.capitalGrowths = this.marketValue * (this.capitalGrowth / 100);\r\n    this.totalFirstYearReturn = this.capitalGrowths + this.marketValue - this.purchasePrice - this.renovationCost + this.preTaxCashflow;\r\n    this.deposit = this.purchasePrice * (1 - this.loanCoverage / 100);\r\n    this.returnOnDeposit = this.totalFirstYearReturn / this.deposit;\r\n    this.cashflow = this.netAnnualRent - parseInt(this.paymentFrecuency, 10) * this.loanRepayments - this.expenses;\r\n  }\r\n\r\n  /**\r\n   * Calculates the price per week.\r\n   */\r\n  getRentPricePerWeek(): number {\r\n    let price = 0;\r\n\r\n    if (this.rentPrice) {\r\n      price = this.rentPaymentFrecuency === 'monthly' ? this.rentPrice * 12 / 52 : this.rentPrice;\r\n    }\r\n\r\n    return price;\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"calculator__container\\\" fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-sm=\\\"center none\\\">\\r\\n  <!-- Form  -->\\r\\n  <form class=\\\"form__container form__house-figures-calc\\\" #houseFiguresForm=\\\"ngForm\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" >\\r\\n    <section fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields\\\">\\r\\n      <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n        <h3 class=\\\"title\\\">\\r\\n          <p class=\\\"header\\\">Property value</p>\\r\\n        </h3>\\r\\n  \\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- Purchase price -->\\r\\n          <mat-form-field fxFlex  class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"number\\\" id=\\\"purchasePrice\\\" name=\\\"purchasePrice\\\" placeholder=\\\"Purchase price\\\" \\r\\n                [(ngModel)]=\\\"model.purchasePrice\\\" \\r\\n                numberValidator\\r\\n                [value]=\\\"model.purchasePrice\\\"\\r\\n                #purchasePrice=\\\"ngModel\\\">\\r\\n            \\r\\n            <mat-icon matPrefix>attach_money</mat-icon>\\r\\n            <mat-error *ngIf=\\\"purchasePrice.invalid && (purchasePrice.dirty || purchasePrice.touched) && purchasePrice.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n          </mat-form-field>\\r\\n          \\r\\n          <!-- Market value -->\\r\\n          <mat-form-field fxFlex  class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"number\\\" id=\\\"marketValue\\\" name=\\\"marketValue\\\" placeholder=\\\"Market value\\\" \\r\\n                [(ngModel)]=\\\"model.marketValue\\\" \\r\\n                numberValidator\\r\\n                [value]=\\\"model.marketValue\\\"\\r\\n                #marketValue=\\\"ngModel\\\">\\r\\n\\r\\n            <mat-icon matPrefix>attach_money</mat-icon>\\r\\n            <mat-error *ngIf=\\\"marketValue.invalid && (marketValue.dirty || marketValue.touched) && marketValue.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n          </mat-form-field>\\r\\n  \\r\\n          <!-- Capital growth -->\\r\\n          <mat-form-field fxFlex fxFlex.sm=\\\"140px\\\" fxFlex.gt-sm=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"number\\\" id=\\\"capitalGrowth\\\" name=\\\"capitalGrowth\\\" placeholder=\\\"Capital growth\\\" \\r\\n                [(ngModel)]=\\\"model.capitalGrowth\\\" \\r\\n                [value]=\\\"model.capitalGrowth\\\"\\r\\n                numberValidator='{\\\"min\\\": 0, \\\"max\\\": 100}' \\r\\n                #capitalGrowth=\\\"ngModel\\\">\\r\\n            \\r\\n            <mat-icon matPrefix>trending_up</mat-icon>\\r\\n            <span matSuffix>%</span>\\r\\n            <mat-hint align=\\\"start\\\">Annual capital growth percentage for owning the property.</mat-hint>\\r\\n            <mat-error *ngIf=\\\"capitalGrowth.invalid && (capitalGrowth.dirty || capitalGrowth.touched) && capitalGrowth.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n            <mat-error *ngIf=\\\"capitalGrowth.invalid && (capitalGrowth.dirty || capitalGrowth.touched) && capitalGrowth.errors.numberValidatorMin\\\">Min value must be greater or equal than 0</mat-error>\\r\\n            <mat-error *ngIf=\\\"capitalGrowth.invalid && (capitalGrowth.dirty || capitalGrowth.touched) && capitalGrowth.errors.numberValidatorMax\\\">Max value must be less or equal than 100</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n  \\r\\n      <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n        <h3 class=\\\"title\\\">\\r\\n          <p class=\\\"header\\\">Loan figures</p>\\r\\n        </h3>\\r\\n      \\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- Loan coverage -->\\r\\n          <div fxFlex=\\\"none\\\" fxFlex.gt-xs fxLayout=\\\"column\\\" class=\\\"form__field slider__field\\\">\\r\\n            <label class=\\\"slider__label\\\">Loan coverage</label>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n              <mat-slider fxFlex id=\\\"loanCoverage\\\" name=\\\"loanCoverage\\\"\\r\\n                  color=\\\"accent\\\"\\r\\n                  [max]=\\\"100\\\"\\r\\n                  [min]=\\\"0\\\"\\r\\n                  [step]=\\\"1\\\"\\r\\n                  thumbLabel=\\\"true\\\"\\r\\n                  tickInterval=\\\"1\\\"\\r\\n                  [(ngModel)]=\\\"model.loanCoverage\\\"\\r\\n                  [value]=\\\"model.loanCoverage\\\"> \\r\\n              </mat-slider>\\r\\n              <span *ngIf=\\\"model.loanCoverage\\\">{{model.loanCoverage}}%</span>\\r\\n            </div>\\r\\n            <label class=\\\"mat-hint slider__label__hint\\\">Percentage of the purchase price covered by the lender.</label>\\r\\n          </div>\\r\\n  \\r\\n          <!-- Interest rates -->\\r\\n          <mat-form-field fxFlex  class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"number\\\" id=\\\"interestRates\\\" name=\\\"interestRates\\\" placeholder=\\\"Interest rates\\\" \\r\\n                [(ngModel)]=\\\"model.interestRates\\\" \\r\\n                numberValidator='{\\\"min\\\": 0, \\\"max\\\": 100}' \\r\\n                [value]=\\\"model.interestRates\\\"\\r\\n                #interestRates=\\\"ngModel\\\">\\r\\n\\r\\n            <mat-icon matPrefix>timeline</mat-icon>\\r\\n            <span matSuffix>%</span>\\r\\n            <mat-hint align=\\\"start\\\">Average loan interest rates (as a percentage).</mat-hint>\\r\\n            <mat-error *ngIf=\\\"interestRates.invalid && (interestRates.dirty || interestRates.touched) && interestRates.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n            <mat-error *ngIf=\\\"interestRates.invalid && (interestRates.dirty || interestRates.touched) && interestRates.errors.numberValidatorMin\\\">Min value must be greater or equal than 0</mat-error>\\r\\n            <mat-error *ngIf=\\\"interestRates.invalid && (interestRates.dirty || interestRates.touched) && interestRates.errors.numberValidatorMax\\\">Max value must be less or equal than 100</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- Loan term -->\\r\\n          <div fxFlex=\\\"none\\\" fxFlex.gt-xs fxLayout=\\\"column\\\" class=\\\"form__field slider__field\\\">\\r\\n            <label class=\\\"slider__label\\\">Term</label>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n              <mat-slider fxFlex id=\\\"loanTerm\\\" name=\\\"loanTerm\\\"\\r\\n                  color=\\\"accent\\\"\\r\\n                  [max]=\\\"30\\\"\\r\\n                  [min]=\\\"1\\\"\\r\\n                  [step]=\\\"1\\\"\\r\\n                  thumbLabel=\\\"true\\\"\\r\\n                  tickInterval=\\\"1\\\"\\r\\n                  [(ngModel)]=\\\"model.loanTerm\\\"\\r\\n                  [value]=\\\"model.loanTerm\\\"> \\r\\n              </mat-slider>\\r\\n              <span *ngIf=\\\"model.loanTerm\\\">{{model.loanTerm}} years</span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <!-- Payment frecuency -->\\r\\n          <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n            <mat-select id=\\\"paymentFrecuency\\\" name=\\\"paymentFrecuency\\\" placeholder=\\\"Frecuency\\\" \\r\\n                [(ngModel)]=\\\"model.paymentFrecuency\\\" [value]=\\\"model.paymentFrecuency\\\">\\r\\n              <mat-option value=\\\"12\\\">Monthly</mat-option>\\r\\n              <mat-option value=\\\"26\\\">Fornightly</mat-option>\\r\\n              <mat-option value=\\\"52\\\">Weekly</mat-option>\\r\\n            </mat-select>\\r\\n            \\r\\n            <mat-hint align=\\\"start\\\">Payment frecuency</mat-hint>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n  \\r\\n      <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n        <h3 class=\\\"title\\\">\\r\\n          <p class=\\\"header\\\">Rent figures</p>\\r\\n        </h3>\\r\\n      \\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- Weekly rent -->\\r\\n          <mat-form-field fxFlex  class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"number\\\" id=\\\"rentPrice\\\" name=\\\"rentPrice\\\" placeholder=\\\"Weekly rent\\\" \\r\\n                [(ngModel)]=\\\"model.rentPrice\\\" \\r\\n                numberValidator\\r\\n                [value]=\\\"model.rentPrice\\\"\\r\\n                #rentPrice=\\\"ngModel\\\">\\r\\n  \\r\\n            <mat-icon matPrefix>attach_money</mat-icon>\\r\\n            <mat-error *ngIf=\\\"rentPrice.invalid && (rentPrice.dirty || rentPrice.touched) && rentPrice.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n          </mat-form-field>\\r\\n  \\r\\n          <!-- Vacancy -->\\r\\n          <div fxFlex=\\\"none\\\" fxFlex.gt-xs=\\\"250px\\\" fxLayout=\\\"column\\\" class=\\\"form__field\\\">\\r\\n            <label class=\\\"slider__label\\\">Vacancy</label>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n              <mat-slider fxFlex id=\\\"vacancy\\\" name=\\\"vacancy\\\"\\r\\n                  color=\\\"accent\\\"\\r\\n                  [max]=\\\"20\\\"\\r\\n                  [min]=\\\"0\\\"\\r\\n                  [step]=\\\"1\\\"\\r\\n                  thumbLabel=\\\"true\\\"\\r\\n                  tickInterval=\\\"1\\\"\\r\\n                  [(ngModel)]=\\\"model.vacancy\\\"\\r\\n                  [value]=\\\"model.vacancy\\\"> \\r\\n              </mat-slider>\\r\\n              <span *ngIf=\\\"model.vacancy\\\">{{model.vacancy}} weeks</span>\\r\\n            </div>\\r\\n          </div>\\r\\n  \\r\\n          <!-- Rental manager -->\\r\\n          <div fxFlex=\\\"none\\\" fxFlex.gt-xs fxLayout=\\\"column\\\" class=\\\"form__field slider__field\\\">\\r\\n            <label class=\\\"slider__label\\\">Manager rate</label>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n              <mat-slider fxFlex id=\\\"managed\\\" name=\\\"managed\\\"\\r\\n                  color=\\\"accent\\\"\\r\\n                  [max]=\\\"20\\\"\\r\\n                  [min]=\\\"0\\\"\\r\\n                  [step]=\\\"1\\\"\\r\\n                  thumbLabel=\\\"true\\\"\\r\\n                  tickInterval=\\\"1\\\"\\r\\n                  [(ngModel)]=\\\"model.managed\\\"\\r\\n                  [value]=\\\"model.managed\\\"> \\r\\n              </mat-slider>\\r\\n              <span *ngIf=\\\"model.managed\\\">{{model.managed}}%</span>\\r\\n            </div>\\r\\n            <label class=\\\"mat-hint slider__label__hint\\\">Rental manager charge as a percentage of net annual rental income.</label>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n        \\r\\n      <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n        <h3 class=\\\"title\\\">\\r\\n          <p class=\\\"header\\\">Expenses</p>\\r\\n        </h3>\\r\\n  \\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- Renovation cost -->\\r\\n          <mat-form-field fxFlex  class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"number\\\" id=\\\"renovationCost\\\" name=\\\"renovationCost\\\" placeholder=\\\"Renovation cost\\\" \\r\\n                [(ngModel)]=\\\"model.renovationCost\\\" \\r\\n                [value]=\\\"model.renovationCost\\\"\\r\\n                numberValidator\\r\\n                #renovationCost=\\\"ngModel\\\">\\r\\n\\r\\n                <mat-icon matPrefix>attach_money</mat-icon>\\r\\n                <mat-hint align=\\\"start\\\">The cost to do all the renovations.</mat-hint>\\r\\n                <mat-error *ngIf=\\\"renovationCost.invalid && (renovationCost.dirty || renovationCost.touched) && renovationCost.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n          </mat-form-field>\\r\\n  \\r\\n          <!-- Mantainance cost -->\\r\\n          <mat-form-field fxFlex  class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"number\\\" id=\\\"maintenanceCost\\\" name=\\\"maintenanceCost\\\" placeholder=\\\"Mantainance cost\\\" \\r\\n                [(ngModel)]=\\\"model.maintenanceCost\\\" \\r\\n                [value]=\\\"model.maintenanceCost\\\"\\r\\n                numberValidator\\r\\n                #maintenanceCost=\\\"ngModel\\\">\\r\\n\\r\\n                <mat-icon matPrefix>attach_money</mat-icon>\\r\\n                <mat-hint align=\\\"start\\\">The annual cost to maintain the property.</mat-hint>\\r\\n                <mat-error *ngIf=\\\"maintenanceCost.invalid && (maintenanceCost.dirty || maintenanceCost.touched) && maintenanceCost.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- Body corporate -->\\r\\n          <mat-form-field fxFlex  class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"number\\\" id=\\\"bodyCorporate\\\" name=\\\"bodyCorporate\\\" placeholder=\\\"Body corporate\\\" \\r\\n                [(ngModel)]=\\\"model.bodyCorporate\\\" \\r\\n                [value]=\\\"model.bodyCorporate\\\"\\r\\n                numberValidator\\r\\n                #bodyCorporate=\\\"ngModel\\\">\\r\\n  \\r\\n                <mat-icon matPrefix>attach_money</mat-icon>\\r\\n                <mat-error *ngIf=\\\"bodyCorporate.invalid && (bodyCorporate.dirty || bodyCorporate.touched) && bodyCorporate.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n          </mat-form-field>\\r\\n  \\r\\n          <!-- House rates -->\\r\\n          <mat-form-field fxFlex  class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"number\\\" id=\\\"houseRates\\\" name=\\\"houseRates\\\" placeholder=\\\"House rates\\\" \\r\\n                [(ngModel)]=\\\"model.houseRates\\\" \\r\\n                [value]=\\\"model.houseRates\\\"\\r\\n                numberValidator\\r\\n                #houseRates=\\\"ngModel\\\">\\r\\n  \\r\\n                <mat-icon matPrefix>attach_money</mat-icon>\\r\\n                <mat-error *ngIf=\\\"houseRates.invalid && (houseRates.dirty || houseRates.touched) && houseRates.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n  \\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- utilities -->\\r\\n          <mat-form-field fxFlex  class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"number\\\" id=\\\"utilities\\\" name=\\\"utilities\\\" placeholder=\\\"Utitities\\\" \\r\\n                [(ngModel)]=\\\"model.utilities\\\" \\r\\n                [value]=\\\"model.utilities\\\"\\r\\n                numberValidator\\r\\n                #utilities=\\\"ngModel\\\">\\r\\n  \\r\\n                <mat-icon matPrefix>attach_money</mat-icon>\\r\\n                <mat-hint align=\\\"start\\\">Gas, water, electricity, internet, etc..</mat-hint>\\r\\n                <mat-error *ngIf=\\\"utilities.invalid && (utilities.dirty || utilities.touched) && utilities.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n          </mat-form-field>\\r\\n  \\r\\n          <!-- Insurance -->\\r\\n          <mat-form-field fxFlex  class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"number\\\" id=\\\"insurance\\\" name=\\\"insurance\\\" placeholder=\\\"Insurances\\\" \\r\\n                [(ngModel)]=\\\"model.insurance\\\" \\r\\n                [value]=\\\"model.insurance\\\"\\r\\n                numberValidator\\r\\n                #insurance=\\\"ngModel\\\">\\r\\n\\r\\n                <mat-icon matPrefix>attach_money</mat-icon>\\r\\n                <mat-error *ngIf=\\\"insurance.invalid && (insurance.dirty || insurance.touched) && insurance.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n          </mat-form-field>\\r\\n  \\r\\n          <!-- Other costs -->\\r\\n          <mat-form-field fxFlex  class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"number\\\" id=\\\"otherCosts\\\" name=\\\"otherCosts\\\" placeholder=\\\"Other costs\\\" \\r\\n                [(ngModel)]=\\\"model.otherCosts\\\" \\r\\n                [value]=\\\"model.otherCosts\\\"\\r\\n                numberValidator\\r\\n                #otherCosts=\\\"ngModel\\\">\\r\\n\\r\\n                <mat-icon matPrefix>attach_money</mat-icon>\\r\\n                <mat-hint align=\\\"start\\\">Any other cost to have in mind not declared in the previous fields.</mat-hint>\\r\\n                <mat-error *ngIf=\\\"otherCosts.invalid && (otherCosts.dirty || otherCosts.touched) && otherCosts.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n    </section>\\r\\n  </form>\\r\\n  \\r\\n  <!-- Results -->\\r\\n  <section fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" fxFlex fxFlex.gt-sm=\\\"300px\\\" class=\\\"calculator__results\\\">\\r\\n    <house-figures-results \\r\\n        title=\\\"Results\\\"\\r\\n        [purchasePrice]=\\\"model.purchasePrice\\\"\\r\\n        [capitalGrowth]=\\\"model.capitalGrowth\\\"\\r\\n        [marketValue]=\\\"model.marketValue\\\"\\r\\n        [loanCoverage]=\\\"model.loanCoverage\\\"\\r\\n        [interestRates]=\\\"model.interestRates\\\"\\r\\n        [loanTerm]=\\\"model.loanTerm\\\"\\r\\n        [paymentFrecuency]=\\\"model.paymentFrecuency\\\"\\r\\n        [rentPrice]=\\\"model.rentPrice\\\"\\r\\n        [rentPaymentFrecuency]=\\\"model.rentPaymentFrecuency\\\"\\r\\n        [vacancy]=\\\"model.vacancy\\\"\\r\\n        [renovationCost]=\\\"model.renovationCost\\\"\\r\\n        [maintenanceCost]=\\\"model.maintenanceCost\\\"\\r\\n        [bodyCorporate]=\\\"model.bodyCorporate\\\"\\r\\n        [houseRates]=\\\"model.houseRates\\\"\\r\\n        [utilities]=\\\"model.utilities\\\"\\r\\n        [insurance]=\\\"model.insurance\\\"\\r\\n        [otherCosts]=\\\"model.otherCosts\\\"\\r\\n        [managed]=\\\"model.managed\\\">\\r\\n    </house-figures-results>\\r\\n  </section>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY2FsY3VsYXRvcnMvY29tcG9uZW50cy9ob3VzZS1maWd1cmVzL2hvdXNlLWZpZ3VyZXMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { MainNavigatorService } from '../../../shared/components/main-navigator/main-navigator.service';\r\n\r\n@Component({\r\n  selector: 'app-house-figures',\r\n  templateUrl: './house-figures.component.html',\r\n  styleUrls: ['./house-figures.component.scss']\r\n})\r\nexport class HouseFiguresComponent implements OnInit {\r\n\r\n  model: any = { \r\n    purchasePrice : 0,\r\n    capitalGrowth : 4,\r\n    marketValue : 0,\r\n    loanCoverage : 65,\r\n    interestRates : 7,\r\n    loanTerm : 30,\r\n    paymentFrecuency : '26',\r\n    rentPrice : 0,\r\n    rentPaymentFrecuency : 'weekly',\r\n    vacancy : 4,\r\n    renovationCost : 0,\r\n    maintenanceCost : 0,\r\n    bodyCorporate : 0,\r\n    houseRates : 2000,\r\n    utilities : 0,\r\n    insurance : 900,\r\n    otherCosts : 0,\r\n    managed : 10\r\n  };\r\n\r\n  constructor(private mainNavigatorService: MainNavigatorService) { }\r\n\r\n  ngOnInit() {\r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: '/welcome', selected: false },\r\n      { displayName: 'Calculators', url: '/calculators', selected: false },\r\n      { displayName: 'Equity', url: '/calculators/equity', selected: false },\r\n      { displayName: 'House figures', url: null, selected: true }]);\r\n  }\r\n}\r\n","module.exports = \"<form class=\\\"form__container form__edit-currency-investment\\\" #editCurrencyInvestmentForm=\\\"ngForm\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">  \\r\\n  <section fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields\\\">\\r\\n    <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n        <currency-unit fxFlex fxFlex.gt-xs=\\\"200px\\\"\\r\\n            [id]=\\\"'currencyInvestmentUnit'\\\" \\r\\n            [value]=\\\"model.unit\\\"\\r\\n            [type]=\\\"model.type\\\"\\r\\n            [hint]=\\\"'Choose the desired currency to invest on...'\\\"\\r\\n            [placeHolder]=\\\"'Desired currency'\\\"\\r\\n            (newValue)=\\\"onCurrencyUnitChange($event)\\\">\\r\\n        </currency-unit>\\r\\n\\r\\n        <mat-form-field fxFlex fxFlex.sm=\\\"120px\\\" fxFlex.gt-sm=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n          <input matInput type=\\\"number\\\" id=\\\"amount\\\" name=\\\"amount\\\" placeholder=\\\"Amount\\\"\\r\\n              [(ngModel)]=\\\"model.amount\\\" \\r\\n              [value]=\\\"model.amount\\\"\\r\\n              numberValidator='{\\\"maxFractionDigits\\\": 8}' \\r\\n              required\\r\\n              #amount=\\\"ngModel\\\">\\r\\n          <mat-hint>Set the buying amount.</mat-hint>\\r\\n          <mat-error *ngIf=\\\"amount.invalid && (amount.dirty || amount.touched) && amount.errors.required\\\">Amount is required.</mat-error>\\r\\n          <mat-error *ngIf=\\\"amount.invalid && (amount.dirty || amount.touched) && amount.errors.numberValidator\\\">Value must be numeric, with no more than 8 decimal digits</mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n        <!-- Buying date -->\\r\\n        <mat-form-field fxFlex fxFlex.gt-xs=\\\"100px\\\" class=\\\"form__field\\\">\\r\\n          <input placeholder=\\\"Buying date\\\"\\r\\n              id=\\\"buyingDate\\\"\\r\\n              name=\\\"buyingDate\\\"\\r\\n              readonly\\r\\n              required\\r\\n              #buyingDate=\\\"ngModel\\\"\\r\\n              matInput \\r\\n              [(ngModel)]=\\\"model.buyingDate\\\" \\r\\n              [matDatepicker]=\\\"pickerBuyingDate\\\"\\r\\n              (click)=\\\"pickerBuyingDate.open()\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"pickerBuyingDate\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker [touchUi]=\\\"utilService.isGtSm() ? false : true\\\" #pickerBuyingDate></mat-datepicker>\\r\\n          <mat-error *ngIf=\\\"buyingDate.invalid && (buyingDate.dirty || buyingDate.touched) && buyingDate.errors.required\\\">Buying date is required.</mat-error>\\r\\n          <mat-error *ngIf=\\\"buyingDate.invalid && (buyingDate.dirty || buyingDate.touched) && buyingDate.errors.matDatepickerParse\\\">Buying date is invalid or not follows the pattern \\\"mm/dd/yyyy\\\"</mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n          <!-- Buying price unit -->\\r\\n          <currency-unit fxFlex=\\\"50px\\\"\\r\\n              [id]=\\\"'buyingPriceUnit'\\\" \\r\\n              [view]=\\\"'narrow'\\\"\\r\\n              [value]=\\\"model.buyingPriceUnit\\\"\\r\\n              (newValue)=\\\"onCurrencyUnitChange($event)\\\">\\r\\n          </currency-unit>\\r\\n\\r\\n          <!-- Buying price -->\\r\\n          <mat-form-field fxFlex fxFlex.sm=\\\"120px\\\" fxFlex.gt-sm=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"number\\\" id=\\\"buyingPrice\\\" name=\\\"buyingPrice\\\" placeholder=\\\"Price\\\"\\r\\n                [(ngModel)]=\\\"model.buyingPrice\\\" \\r\\n                [value]=\\\"model.buyingPrice\\\"\\r\\n                numberValidator \\r\\n                required\\r\\n                #buyingPrice=\\\"ngModel\\\">\\r\\n            <mat-hint>Price on buying date.</mat-hint>\\r\\n            <mat-error *ngIf=\\\"buyingPrice.invalid && (buyingPrice.dirty || buyingPrice.touched) && buyingPrice.errors.required\\\">Buying price is required.</mat-error>\\r\\n            <mat-error *ngIf=\\\"buyingPrice.invalid && (buyingPrice.dirty || buyingPrice.touched) && buyingPrice.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        \\r\\n      </div>\\r\\n    </div>\\r\\n  </section>\\r\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvaW52ZXN0bWVudHMvY29tcG9uZW50cy9jdXJyZW5jeS1pbnZlc3RtZW50LWZvcm0vY3VycmVuY3ktaW52ZXN0bWVudC1mb3JtLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input, Output, OnDestroy, AfterViewInit, ViewChild, EventEmitter } from '@angular/core';\r\nimport { DateAdapter, NativeDateAdapter } from '@angular/material';\r\nimport { MatSelectChange } from '@angular/material';\r\nimport { Subscription } from 'rxjs';\r\nimport { UtilService } from '../../../../util.service';\r\nimport { AppService } from '../../../../app.service';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'currency-investment-form',\r\n  templateUrl: './currency-investment-form.component.html',\r\n  styleUrls: ['./currency-investment-form.component.scss']\r\n})\r\nexport class CurrencyInvestmentFormComponent implements OnInit, OnDestroy, AfterViewInit {\r\n\r\n  @ViewChild('editCurrencyInvestmentForm') form;\r\n  @Input() defaultValues: any = null; // the default values of the component model  \r\n  @Output() values: EventEmitter<any> = new EventEmitter();\r\n  model: any = {\r\n    type : null, // currency type. e.g: currency | crypto\r\n    unit : null, // e.g. : US Dollar, Australian Dollar, Monero, Bitcoin , depends on the type\r\n    amount : null, // the amount bought,\r\n    buyingPrice : null,\r\n    buyingPriceUnit : null,\r\n    buyingDate : null\r\n  };\r\n  subscription: Subscription = new Subscription();\r\n\r\n  constructor(private dateAdapter: DateAdapter<NativeDateAdapter>, private appService: AppService, \r\n      public utilService: UtilService) {\r\n    \r\n    this.dateAdapter.setLocale('en-GB');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.model.unit = this.defaultValues.type === 'currency' ? 'USD' : 'BTC';\r\n    this.model.buyingDate = new Date(Date.now());\r\n    this.model.buyingPriceUnit = 'USD';\r\n    Object.assign(this.model, this.defaultValues);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    const methodTrace = `${this.constructor.name} > ngOnDestroy() > `; // for debugging\r\n    \r\n    // this.appService.consoleLog('info', `${methodTrace} Component destroyed.`);\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onCurrencyUnitChange($event: MatSelectChange) {\r\n    if ($event.source.id === 'currencyInvestmentUnit') {\r\n      this.model.unit = $event.value;\r\n    } else if ($event.source.id === 'buyingPriceUnit') {\r\n      this.model.buyingPriceUnit = $event.value;\r\n    }\r\n    \r\n    this.values.emit({ \r\n      value : {\r\n        model : this.model,\r\n        valid : this.form.valid\r\n      } \r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // send data before touching any value\r\n    this.values.emit({ \r\n      value : {\r\n        model : this.model,\r\n        valid : this.form.valid\r\n      } \r\n    });\r\n\r\n    // after any event in the form we send updated data\r\n    const newSubscription = this.form.valueChanges.pipe(debounceTime(500)).subscribe(values => {\r\n      this.values.emit({ \r\n        value : {\r\n          model : this.model,\r\n          valid : this.form.valid\r\n        } \r\n      });\r\n    });\r\n    this.subscription.add(newSubscription);\r\n  }\r\n}\r\n","module.exports = \"<mat-card class=\\\"currency-card\\\">\\r\\n  <mat-card-header>\\r\\n    <div mat-card-avatar class=\\\"header-image\\\">\\r\\n        <img [src]=\\\"'/assets/images/' + investment.type + '/' + investment.unit + '.png'\\\" [alt]=\\\"investment.type\\\" />\\r\\n    </div>\\r\\n    <mat-card-title>{{investment.unit}}</mat-card-title>\\r\\n    <mat-card-subtitle>{{investment.amount}}</mat-card-subtitle>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content class=\\\"card__content\\\">\\r\\n    <!-- Card Data -->\\r\\n    <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-evenly center\\\" class=\\\"card__data\\\">\\r\\n      <span>Amount invested: <strong>{{investmentAmount | currency : 'USD' : 'code' : '1.2-2' }}</strong> </span>\\r\\n      \\r\\n      <span>on {{investment.buyingDate | date}}</span>\\r\\n    \\r\\n      <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n        <span>Buying price: {{ buyingPrice | currency : 'USD' : 'code' : '1.2-2' }}</span>\\r\\n        <info-tooltip text=\\\"Price on investment date\\\" position=\\\"right\\\"></info-tooltip>\\r\\n      </div>\\r\\n      \\r\\n      <div>\\r\\n        Today price: \\r\\n        <span [class.color__accent]=\\\"currentPrice >= buyingPrice\\\" \\r\\n          [class.color__red]=\\\"currentPrice < buyingPrice\\\">\\r\\n\\r\\n          <strong>{{currentPrice | currency : 'USD' : 'code' : '1.2-2'}}</strong>\\r\\n        </span>\\r\\n      </div>\\r\\n\\r\\n      <span *ngIf=\\\"investment.loanAmount\\\">Loan amount: <strong>{{ loanAmount | currency : 'USD' : 'code' : '1.2-2' }}</strong></span>\\r\\n\\r\\n      <div fxLayout=\\\"column\\\" [class.color__accent]=\\\"investmentReturn >= investmentValueWhenBought\\\" \\r\\n          [class.color__red]=\\\"investmentReturn < investmentValueWhenBought\\\">\\r\\n        \\r\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n          <span>ROI: <strong>{{ investmentReturn | currency : 'USD' : 'code' : '1.2-2' }}</strong> ({{investmentReturn / investmentValueWhenBought * 100 | number : '1.1-2'}}%)</span>\\r\\n          <info-tooltip text=\\\"Return on investment\\\" position=\\\"right\\\"></info-tooltip>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n          <span>Net ROI: <strong>{{ investmentReturn - investmentAmount - loanAmount | currency : 'USD' : 'code' : '1.2-2' }}</strong></span>\\r\\n          <info-tooltip text=\\\"Return on investment - Amount invested - Loan amount\\\" position=\\\"right\\\"></info-tooltip>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Team -->\\r\\n    <mat-expansion-panel *ngIf=\\\"team\\\" class=\\\"team-panel\\\">\\r\\n      <mat-expansion-panel-header>\\r\\n        <mat-panel-title>\\r\\n          {{team.name}}\\r\\n        </mat-panel-title>\\r\\n        <mat-panel-description>\\r\\n          \\r\\n        </mat-panel-description>\\r\\n      </mat-expansion-panel-header>\\r\\n      \\r\\n      <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"team-panel__content\\\">\\r\\n\\r\\n        <section class=\\\"members\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n          <div *ngFor=\\\"let portion of investmentDistribution\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" class=\\\"member\\\">\\r\\n            <img class=\\\"member__avatar\\\" [src]=\\\"portion.member.avatar\\\"/>\\r\\n            <div fxFlex class=\\\"member__info\\\" fxLayout=\\\"column\\\">\\r\\n              <p class=\\\"member__name\\\">{{portion.member.name}}</p>\\r\\n              <!-- <p class=\\\"member__email\\\">{{member.email}}</p> -->\\r\\n              <div class=\\\"member__money\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"space-between end\\\">\\r\\n                <p>{{ portion.percentage }}%</p>\\r\\n                <p>{{ portion.money | currency : 'USD' : 'code' : '1.2-2' }}</p>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </section>\\r\\n      </div>\\r\\n      \\r\\n    </mat-expansion-panel>\\r\\n    <!-- EOF Team -->\\r\\n\\r\\n    <section class=\\\"card__actions\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end none\\\" fxLayoutGap=\\\"10px\\\">\\r\\n      <button *ngIf=\\\"!actionRunning\\\" mat-mini-fab routerLink=\\\"/investments/crypto/edit/{{investment.id}}\\\" color=\\\"primary\\\" (click)=\\\"actionRunning = true\\\">\\r\\n        <mat-icon aria-label=\\\"Edit Investment\\\">edit</mat-icon>\\r\\n      </button>\\r\\n\\r\\n      <button *ngIf=\\\"!actionRunning\\\" mat-mini-fab color=\\\"warn\\\" (click)=\\\"openDeleteDialog()\\\">\\r\\n        <mat-icon aria-label=\\\"Delete investment\\\">delete</mat-icon>\\r\\n      </button>\\r\\n\\r\\n      <mat-progress-spinner *ngIf=\\\"actionRunning\\\"\\r\\n        class=\\\"progress-spinner progress-spinner--action\\\"\\r\\n        color=\\\"warn\\\"\\r\\n        [diameter]=\\\"40\\\" [strokeWidth]=\\\"7\\\"\\r\\n        mode=\\\"indeterminate\\\">\\r\\n      </mat-progress-spinner>\\r\\n    </section>\\r\\n  </mat-card-content>\\r\\n</mat-card>\"","module.exports = \".currency-card {\\n  text-align: left; }\\n  .currency-card .header-image img {\\n    width: 40px; }\\n  .currency-card .card__content .team-panel {\\n    cursor: default;\\n    margin-top: 10px; }\\n  .currency-card .card__content .team-panel mat-panel-title {\\n      font-size: 18px; }\\n  .currency-card .card__content .team-panel .team-panel__content {\\n      text-align: left; }\\n  .currency-card .card__content .team-panel .team-panel__content .members .member .member__avatar {\\n        border-radius: 50%;\\n        width: 40px;\\n        height: 40px;\\n        padding: 0 10px 0 0; }\\n  .currency-card .card__content .team-panel .team-panel__content .members .member .member__info .member__email {\\n        font-size: 11px; }\\n  .currency-card .card__content .card__actions {\\n    margin: 10px 0 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9pbnZlc3RtZW50cy9jb21wb25lbnRzL2N1cnJlbmN5LWludmVzdG1lbnQvQzpcXHczXFxhdG9taUNvY29udXRcXGNsaWVudC9zcmNcXGFwcFxcbW9kdWxlc1xcaW52ZXN0bWVudHNcXGNvbXBvbmVudHNcXGN1cnJlbmN5LWludmVzdG1lbnRcXGN1cnJlbmN5LWludmVzdG1lbnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBZ0IsRUE4Q2pCO0VBL0NEO0lBTU0sWUFBWSxFQUNiO0VBUEw7SUFhTSxnQkFBZTtJQUNmLGlCQUFnQixFQTJCakI7RUF6Q0w7TUFpQlEsZ0JBQWUsRUFDaEI7RUFsQlA7TUFxQlEsaUJBQWdCLEVBa0JqQjtFQXZDUDtRQTBCWSxtQkFBa0I7UUFDbEIsWUFBVztRQUNYLGFBQVk7UUFDWixvQkFBbUIsRUFDcEI7RUE5Qlg7UUFtQ2MsZ0JBQWUsRUFDaEI7RUFwQ2I7SUE0Q00saUJBQWdCLEVBQ2pCIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9pbnZlc3RtZW50cy9jb21wb25lbnRzL2N1cnJlbmN5LWludmVzdG1lbnQvY3VycmVuY3ktaW52ZXN0bWVudC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jdXJyZW5jeS1jYXJkIHtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG5cclxuICAuaGVhZGVyLWltYWdlIHtcclxuICAgIFxyXG4gICAgaW1nIHtcclxuICAgICAgd2lkdGggOiA0MHB4O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLmNhcmRfX2NvbnRlbnQge1xyXG4gICAgXHJcbiAgICAudGVhbS1wYW5lbCB7XHJcbiAgICAgIGN1cnNvcjogZGVmYXVsdDtcclxuICAgICAgbWFyZ2luLXRvcDogMTBweDtcclxuICBcclxuICAgICAgbWF0LXBhbmVsLXRpdGxlIHtcclxuICAgICAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICAgIH1cclxuICBcclxuICAgICAgLnRlYW0tcGFuZWxfX2NvbnRlbnQge1xyXG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLm1lbWJlcnMgLm1lbWJlciB7XHJcbiAgICAgICAgICBcclxuICAgICAgICAgIC5tZW1iZXJfX2F2YXRhciB7XHJcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgICAgICAgICAgd2lkdGg6IDQwcHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogNDBweDtcclxuICAgICAgICAgICAgcGFkZGluZzogMCAxMHB4IDAgMDtcclxuICAgICAgICAgIH1cclxuICBcclxuICAgICAgICAgIC5tZW1iZXJfX2luZm8ge1xyXG4gIFxyXG4gICAgICAgICAgICAubWVtYmVyX19lbWFpbCB7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAxMXB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIFxyXG4gICAgfVxyXG5cclxuICAgIC5jYXJkX19hY3Rpb25zIHtcclxuICAgICAgbWFyZ2luOiAxMHB4IDAgMDsgXHJcbiAgICB9XHJcbiAgfVxyXG59Il19 */\"","import { Component, OnInit, Input, Output, EventEmitter, OnDestroy } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { YesNoDialogComponent } from '../../../shared/components/yes-no-dialog/yes-no-dialog.component';\r\n\r\nimport { AppService } from '../../../../app.service';\r\nimport { InvestmentsService } from '../../investments.service';\r\nimport { User } from '../../../users/models/user';\r\nimport { UsersService } from '../../../users/users.service';\r\nimport { Router } from '@angular/router';\r\nimport { CurrencyExchangeService } from '../../currency-exchange.service';\r\nimport { CurrencyInvestment } from '../../models/currencyInvestment';\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\nimport { combineLatest, switchMap } from 'rxjs/operators';\r\nimport { Team } from '../../../teams/models/team';\r\nimport { INVESTMENTS_TYPES } from '../../../../constants';\r\nimport { UtilService } from '../../../../util.service';\r\n\r\n@Component({\r\n  selector: 'currency-investment',\r\n  templateUrl: './currency-investment.component.html',\r\n  styleUrls: ['./currency-investment.component.scss']\r\n})\r\nexport class CurrencyInvestmentComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() investment: CurrencyInvestment;\r\n  @Input()\r\n  set teams(teams: Team[]) {\r\n    this.teams$.next(teams);\r\n  }\r\n  get teams(): Team[] {\r\n    return this.teams$.getValue();\r\n  }\r\n  @Output() totalReturns: EventEmitter<any> = new EventEmitter();\r\n  @Output() deletedInvestment: EventEmitter<any> = new EventEmitter();\r\n  private teams$ = new BehaviorSubject<Team[]>([]);\r\n  investmentAmount = 0;\r\n  buyingPrice = 0;\r\n  investmentReturn = 0;\r\n  investmentValueWhenBought = 0;\r\n  currentPrice = 0;\r\n  loanAmount = 0;\r\n  actionRunning = false;\r\n  user: User = null;\r\n  team: Team = null; // if the investment has a tema this will be populated with the full info of the team\r\n  investmentDistribution: any[] = [];\r\n  subscription: Subscription = new Subscription();\r\n\r\n\r\n  constructor(private currencyExchangeService: CurrencyExchangeService, private appService: AppService, private usersService: UsersService, private investmentsService: InvestmentsService, \r\n    public dialog: MatDialog, private router: Router, private utilService: UtilService) {}\r\n\r\n  ngOnInit(): void {\r\n    const methodTrace = `${this.constructor.name} > ngOnInit() > `; // for debugging\r\n\r\n    // get the team of the investmetn if exists\r\n    let newSubscription = null;\r\n    const currencyRates$ = this.currencyExchangeService.getCurrencyRates$([this.utilService.formatDate(this.investment.buyingDate)]); // get currency rates observable source\r\n    const currencyRatesAndUser$ = this.usersService.user$.pipe(\r\n      combineLatest(currencyRates$, (user, currencyRates) => {\r\n        this.user = user;\r\n        return { user, currencyRates};\r\n      })\r\n    ); // (currency rates and user) source\r\n    \r\n    if (this.investment.type === INVESTMENTS_TYPES.CRYPTO) {\r\n      // crypto investment\r\n      const cryptoRates$ = this.currencyExchangeService.getCryptoRates$(this.investment.unit); // get crypto rates observable source\r\n      \r\n      newSubscription = cryptoRates$.pipe(\r\n        combineLatest(currencyRatesAndUser$, (cryptoRates, currencyRatesAndUser) => { \r\n          return  {\r\n            currencyRates : currencyRatesAndUser.currencyRates,\r\n            user : currencyRatesAndUser.user, \r\n            cryptoRates \r\n          }; \r\n        }),\r\n        switchMap((data) => {\r\n          this.currentPrice = data.cryptoRates.price;\r\n          // the investment amount was paid on the date of the investment so we need to convert using that day rates\r\n          this.investmentAmount = this.investment.investmentAmount / (data.currencyRates[this.utilService.formatDate(this.investment.buyingDate)][`USD${this.investment.investmentAmountUnit}`] || 1);\r\n          // the loan amount was requested on the date of the investment so we need to convert using that day rates\r\n          this.loanAmount = this.investment.loanAmount / (data.currencyRates[this.utilService.formatDate(this.investment.buyingDate)][`USD${this.investment.loanAmountUnit}`] || 1);\r\n          // the buying price (of the crypto) was paid on the date of the investment so we need to convert using that day rates\r\n          this.buyingPrice = this.investment.buyingPrice / (data.currencyRates[this.utilService.formatDate(this.investment.buyingDate)][`USD${this.investment.buyingPriceUnit}`] || 1);\r\n          this.investmentValueWhenBought = this.buyingPrice * this.investment.amount;\r\n          this.investmentReturn = this.currentPrice * this.investment.amount - this.loanAmount;\r\n\r\n          return this.teams$;\r\n        })\r\n      ).subscribe((teams: Team[]) => {\r\n        this.setInvestmentTeamData(teams);\r\n      },\r\n      (error: any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error trying to generate investment data > `, error);\r\n        this.appService.showResults(`There was an error trying to generate investment data, please try again in a few minutes.`, 'error');\r\n      });\r\n    } else {\r\n      // currency exchange\r\n      newSubscription = currencyRatesAndUser$.pipe(switchMap(\r\n        (data) => {\r\n          this.currentPrice = 1 / (data.currencyRates[this.utilService.formatToday()][`USD${this.investment.unit}`] || 1);\r\n          // the investment amount was paid on the date of the investment so we need to convert using that day rates\r\n          this.investmentAmount = this.investment.investmentAmount / (data.currencyRates[this.utilService.formatDate(this.investment.buyingDate)][`USD${this.investment.investmentAmountUnit}`] || 1);\r\n          // the loan amount was requested on the date of the investment so we need to convert using that day rates\r\n          this.loanAmount = this.investment.loanAmount / (data.currencyRates[this.utilService.formatDate(this.investment.buyingDate)][`USD${this.investment.loanAmountUnit}`] || 1);\r\n          // the buying price (of the currency) was paid on the date of the investment so we need to convert using that day rates\r\n          this.buyingPrice = this.investment.buyingPrice / (data.currencyRates[this.utilService.formatDate(this.investment.buyingDate)][`USD${this.investment.buyingPriceUnit}`] || 1);\r\n          this.investmentValueWhenBought = this.buyingPrice * this.investment.amount;\r\n          this.investmentReturn = this.currentPrice * this.investment.amount - this.loanAmount;\r\n\r\n          return this.teams$;\r\n        }\r\n      )).subscribe((teams: Team[]) => {\r\n        this.setInvestmentTeamData(teams);\r\n      },\r\n      (error: any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error trying to generate investment data > `, error);\r\n        this.appService.showResults(`There was an error trying to generate investment data, please try again in a few minutes.`, 'error');\r\n      });\r\n    }\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    const methodTrace = `${this.constructor.name} > ngOnDestroy() > `; // for debugging\r\n\r\n    // this.appService.consoleLog('info', `${methodTrace} Component destroyed.`);\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Populates team data as well as the distribution on the investment between team members when the investment is asigned to a team\r\n   * \r\n   * @param {Team[]} teams . The teams of the current user\r\n   */\r\n  setInvestmentTeamData(teams: Team[]) {\r\n    this.team = this.investment.team ? teams.filter(team => team.slug === this.investment.team.slug)[0] : null; // look for the team of the investment\r\n    \r\n    // set totals to emit to parent component. If no team assigned then the total of the investment is the same as my portion\r\n    const totals = {\r\n      investmentId : this.investment.id,\r\n      investmentAmount : this.investmentAmount,\r\n      investmentReturn : this.investmentReturn,\r\n      myInvestmentAmount : this.investmentAmount,\r\n      myInvestmentReturn : this.investmentReturn\r\n    };\r\n\r\n    if (this.team) {\r\n      // if team is present then get my portion of the investment\r\n      for (const member of this.team.members) {\r\n        const percentage = (this.investment.investmentDistribution.filter(portion => portion.email === member.email)[0]).percentage;\r\n        this.investmentDistribution.push({\r\n          member,\r\n          percentage,\r\n          money : this.investmentReturn * percentage / 100\r\n        });\r\n\r\n        if (this.user && this.user.email === member.email) {\r\n          totals.myInvestmentAmount = this.investmentAmount * percentage / 100;\r\n          totals.myInvestmentReturn = this.investmentReturn * percentage / 100;  \r\n        }\r\n      }\r\n    }\r\n\r\n    this.totalReturns.emit(totals);\r\n  }\r\n\r\n  openDeleteDialog() {\r\n    const methodTrace = `${this.constructor.name} > openDeleteDialog() > `; // for debugging\r\n    \r\n    if (!this.investment.id) {\r\n      this.appService.consoleLog('error', `${methodTrace} Investment ID is required to delete.`);\r\n      return false;\r\n    }\r\n\r\n    this.actionRunning = true;\r\n    const yesNoDialogRef = this.dialog.open(YesNoDialogComponent, {\r\n      width: '250px',\r\n      data: { \r\n        title : 'Delete investment',\r\n        message : `Are you sure you want to delete this investment forever?`\r\n      }\r\n    });\r\n\r\n    const newSubscription: Subscription = yesNoDialogRef.afterClosed().subscribe(result => {\r\n      if (result === 'yes') {\r\n        this.delete();\r\n      } else {\r\n        this.actionRunning = false;\r\n      }\r\n    });\r\n    this.subscription.add(newSubscription);\r\n\r\n    return false;\r\n  }\r\n\r\n  delete() {\r\n    const methodTrace = `${this.constructor.name} > delete() > `; // for debugging\r\n    if (this.user) {\r\n      this.actionRunning = true;\r\n      \r\n      const newSubscription = this.investmentsService.delete$(this.investment.id, this.user.email).subscribe(\r\n        (data: any) => {\r\n          if (data && data.removed > 0) {\r\n            this.appService.showResults(`Investment successfully removed!`, 'success');\r\n            this.deletedInvestment.emit({ investment : this.investment, investmentReturn : this.investmentReturn, investmentAmount : this.investmentAmount });\r\n          } else {\r\n            this.appService.showResults(`Investment could not be removed, please try again.`, 'error');\r\n            this.actionRunning = false;\r\n          }\r\n        },\r\n        (error: any) => {\r\n          this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n          if (error.codeno === 400) {\r\n            this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n          } else {\r\n            this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n          }\r\n  \r\n          this.actionRunning = false;\r\n        }\r\n      );\r\n\r\n      this.subscription.add(newSubscription);\r\n    } else {\r\n      this.appService.showResults(`You are not logged into AtomiCoconut, you must login first.`, 'error');\r\n      this.router.navigate(['/users/login']);\r\n    }\r\n  }\r\n    \r\n}\r\n","module.exports = \"<h2 mat-dialog-title>Create investment</h2>\\r\\n\\r\\n<mat-dialog-content>\\r\\n  <mat-button-toggle-group fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" class=\\\"selector__investment-type\\\" (change)=\\\"onChange($event)\\\" #investmentTypesGroup>\\r\\n    <mat-button-toggle class=\\\"option__investment-type\\\" value=\\\"currency\\\" matTooltip=\\\"Currency exchange\\\" routerLink=\\\"investments/currency/create\\\"\\r\\n        [matTooltipPosition]=\\\"utilService.isXs() ? 'right' : 'below'\\\">\\r\\n      <img src=\\\"/assets/images/exchange.png\\\" alt=\\\"currency\\\" />\\r\\n    </mat-button-toggle>\\r\\n    <mat-button-toggle class=\\\"option__investment-type\\\" value=\\\"cryptocurrency\\\" matTooltip=\\\"Crypto currency\\\" routerLink=\\\"investments/crypto/create\\\"\\r\\n        [matTooltipPosition]=\\\"utilService.isXs() ? 'right' : 'below'\\\">\\r\\n      <img src=\\\"/assets/images/cryptocurrency.png\\\" alt=\\\"Crypto currency\\\" />\\r\\n    </mat-button-toggle>\\r\\n    <mat-button-toggle class=\\\"option__investment-type\\\" value=\\\"property\\\" matTooltip=\\\"Property\\\" routerLink=\\\"investments/property/create\\\"\\r\\n        [matTooltipPosition]=\\\"utilService.isXs() ? 'right' : 'below'\\\">\\r\\n      <img src=\\\"/assets/images/house.png\\\" alt=\\\"Property\\\" />\\r\\n    </mat-button-toggle>\\r\\n  </mat-button-toggle-group>\\r\\n</mat-dialog-content>\\r\\n\"","module.exports = \":host {\\n  text-align: center; }\\n  :host .selector__investment-type .option__investment-type {\\n    padding: 10px; }\\n  :host .selector__investment-type .option__investment-type img {\\n      width: 50px; }\\n  @media screen and (min-width: 600px) {\\n    :host .selector__investment-type .option__investment-type img {\\n      width: 90px; } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9pbnZlc3RtZW50cy9jb21wb25lbnRzL2ludmVzdG1lbnQtc2VsZWN0b3ItZGlhbG9nL0M6XFx3M1xcYXRvbWlDb2NvbnV0XFxjbGllbnQvc3JjXFxhcHBcXG1vZHVsZXNcXGludmVzdG1lbnRzXFxjb21wb25lbnRzXFxpbnZlc3RtZW50LXNlbGVjdG9yLWRpYWxvZ1xcaW52ZXN0bWVudC1zZWxlY3Rvci1kaWFsb2cuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDRSxtQkFBa0IsRUF1Qm5CO0VBeEJEO0lBS00sY0FBYSxFQUtkO0VBVkw7TUFRUSxZQUFXLEVBQ1o7RUFJTDtJQWJGO01BbUJVLFlBQVcsRUFDWixFQUFBIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9pbnZlc3RtZW50cy9jb21wb25lbnRzL2ludmVzdG1lbnQtc2VsZWN0b3ItZGlhbG9nL2ludmVzdG1lbnQtc2VsZWN0b3ItZGlhbG9nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnLi4vLi4vLi4vLi4vLi4vdmFyaWFibGVzJztcclxuXHJcbjpob3N0IHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgXHJcbiAgLnNlbGVjdG9yX19pbnZlc3RtZW50LXR5cGUge1xyXG4gICAgLm9wdGlvbl9faW52ZXN0bWVudC10eXBlIHtcclxuICAgICAgcGFkZGluZzogMTBweDtcclxuXHJcbiAgICAgIGltZyB7XHJcbiAgICAgICAgd2lkdGg6IDUwcHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRzY3JlZW5HdFhzKSB7XHJcbiAgICBcclxuICAgIC5zZWxlY3Rvcl9faW52ZXN0bWVudC10eXBlIHtcclxuICAgICAgXHJcbiAgICAgIC5vcHRpb25fX2ludmVzdG1lbnQtdHlwZSB7XHJcbiAgICAgICAgaW1nIHtcclxuICAgICAgICAgIHdpZHRoOiA5MHB4O1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufSJdfQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatButtonToggleChange} from '@angular/material';\r\nimport { UtilService } from '../../../../util.service';\r\n\r\n@Component({\r\n  selector: 'investment-selector-dialog',\r\n  templateUrl: './investment-selector-dialog.component.html',\r\n  styleUrls: ['./investment-selector-dialog.component.scss']\r\n})\r\nexport class InvestmentSelectorDialogComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<InvestmentSelectorDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any, public utilService: UtilService) { }\r\n  \r\n  ngOnInit() { }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onChange(event: MatButtonToggleChange) {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"container__investments\\\">\\r\\n  <section *ngIf=\\\"!getInvestmentsServiceRunning && investments.length > 0\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n    \\r\\n    <div *ngFor=\\\"let row of investmentsUI\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n      <div *ngFor=\\\"let investment of row\\\" fxFlex fxFlex.gt-xs=\\\"50\\\">\\r\\n        <currency-investment *ngIf=\\\"investment.type === INVESTMENTS_TYPES.CURRENCY || investment.type === INVESTMENTS_TYPES.CRYPTO\\\"\\r\\n          [investment]=\\\"investment\\\"\\r\\n          [teams]=\\\"teams\\\"\\r\\n          (totalReturns)=\\\"setTotals($event)\\\"\\r\\n          (deletedInvestment)=\\\"removeInvestment($event)\\\">\\r\\n        </currency-investment>\\r\\n\\r\\n        <property-investment *ngIf=\\\"investment.type === INVESTMENTS_TYPES.PROPERTY\\\"\\r\\n          [investment]=\\\"investment\\\"\\r\\n          [teams]=\\\"teams\\\"\\r\\n          (totalReturns)=\\\"setTotals($event)\\\"\\r\\n          (deletedInvestment)=\\\"removeInvestment($event)\\\">\\r\\n        </property-investment>\\r\\n      </div>\\r\\n      \\r\\n    </div>\\r\\n\\r\\n    <mat-card fxFlex class=\\\"totals__card\\\">\\r\\n      <mat-card-content fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"20px\\\">\\r\\n        <!-- Totals -->\\r\\n        <div *ngIf=\\\"!myTotals.checked\\\" fxFlex fxFlex.xs=\\\"none\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"space-around center\\\">\\r\\n          <p>Total investments: <strong>{{totalInvestment | currency : 'USD' : 'code' : '1.2-2' }}</strong></p>\\r\\n          <p [class.color__accent]=\\\"totalReturn >= totalInvestment\\\" \\r\\n              [class.color__red]=\\\"totalReturn < totalInvestment\\\">\\r\\n            Total ROI: <strong>{{ totalReturn | currency : 'USD' : 'code' : '1.2-2' }}</strong> ({{totalReturn / totalInvestment * 100 | number : '1.1-2'}}%)\\r\\n          </p>\\r\\n        </div>\\r\\n\\r\\n        <!-- My totals -->\\r\\n        <div *ngIf=\\\"myTotals.checked\\\" fxFlex fxFlex.xs=\\\"none\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"space-around center\\\">\\r\\n          <p>My total investments: <strong>{{myTotalInvestment | currency : 'USD' : 'code' : '1.2-2' }}</strong></p>\\r\\n          <p [class.color__accent]=\\\"myTotalReturn >= myTotalInvestment\\\" \\r\\n              [class.color__red]=\\\"myTotalReturn < myTotalInvestment\\\">\\r\\n            My total ROI: <strong>{{ myTotalReturn | currency : 'USD' : 'code' : '1.2-2' }}</strong> ({{myTotalReturn / myTotalInvestment * 100 | number : '1.1-2'}}%)\\r\\n          </p>\\r\\n        </div>\\r\\n\\r\\n        <!-- Totals switcher -->\\r\\n        <mat-slide-toggle fxFlexAlign.xs=\\\"center\\\" color=\\\"accent\\\" class=\\\"form__field form__field__toogle\\\" [checked]=\\\"false\\\" #myTotals>\\r\\n          My totals\\r\\n        </mat-slide-toggle>\\r\\n\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n  </section>\\r\\n\\r\\n  <section *ngIf=\\\"!getInvestmentsServiceRunning && investments.length == 0\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n    <mat-card fxFlex class=\\\"no-investments__card\\\">\\r\\n      <mat-card-content fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"10px\\\"\\r\\n          fxLayoutAlign=\\\"space-around center\\\">\\r\\n        <p> You do not have investments yet.</p>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n    \\r\\n  </section>\\r\\n\\r\\n  <progress-bar fxFlexAlign=\\\"center\\\" class=\\\"progress-bar--get-investments\\\" *ngIf=\\\"getInvestmentsServiceRunning\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      message=\\\"Loading your investments...\\\">\\r\\n  </progress-bar>\\r\\n\\r\\n  <section fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start end\\\" class=\\\"actions\\\">\\r\\n    <button mat-fab class=\\\"fab mat-elevation-z10\\\" color=\\\"primary\\\" matTooltip=\\\"Create new investment\\\" matTooltipPosition=\\\"left\\\" (click)=\\\"openNewInvestmentDialog()\\\">\\r\\n      <mat-icon aria-label=\\\"Create new investemt\\\">add</mat-icon>\\r\\n    </button>\\r\\n  </section>\\r\\n</div>\"","module.exports = \".totals__card, .no-investments__card {\\n  text-align: center; }\\n  .totals__card md-card-content p, .no-investments__card md-card-content p {\\n    margin-bottom: 0; }\\n  .progress-bar--get-investments {\\n  width: 100%; }\\n  @media screen and (min-width: 600px) {\\n  .progress-bar--get-investments {\\n    width: 300px; } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9pbnZlc3RtZW50cy9jb21wb25lbnRzL2ludmVzdG1lbnRzLWRhc2hib2FyZC9DOlxcdzNcXGF0b21pQ29jb251dFxcY2xpZW50L3NyY1xcYXBwXFxtb2R1bGVzXFxpbnZlc3RtZW50c1xcY29tcG9uZW50c1xcaW52ZXN0bWVudHMtZGFzaGJvYXJkXFxpbnZlc3RtZW50cy1kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDRSxtQkFBa0IsRUFLbkI7RUFORDtJQUlJLGlCQUFnQixFQUNqQjtFQUdIO0VBQ0UsWUFBVyxFQUNaO0VBRUQ7RUFFRTtJQUNFLGFBQVksRUFDYixFQUFBIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9pbnZlc3RtZW50cy9jb21wb25lbnRzL2ludmVzdG1lbnRzLWRhc2hib2FyZC9pbnZlc3RtZW50cy1kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICcuLi8uLi8uLi8uLi8uLi92YXJpYWJsZXMnO1xyXG5cclxuLnRvdGFsc19fY2FyZCwgLm5vLWludmVzdG1lbnRzX19jYXJkIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gIG1kLWNhcmQtY29udGVudCBwIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgfVxyXG59XHJcblxyXG4ucHJvZ3Jlc3MtYmFyLS1nZXQtaW52ZXN0bWVudHMge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkc2NyZWVuR3RYcykge1xyXG5cclxuICAucHJvZ3Jlc3MtYmFyLS1nZXQtaW52ZXN0bWVudHMge1xyXG4gICAgd2lkdGg6IDMwMHB4O1xyXG4gIH1cclxufSJdfQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatDialog } from '@angular/material';\r\n\r\nimport { MainNavigatorService } from '../../../shared/components/main-navigator/main-navigator.service';\r\nimport { User } from '../../../users/models/user';\r\nimport { UsersService } from '../../../users/users.service';\r\nimport { InvestmentSelectorDialogComponent } from '../investment-selector-dialog/investment-selector-dialog.component';\r\nimport { Investment } from '../../models/investment';\r\nimport { AppService } from '../../../../app.service';\r\nimport { InvestmentsService } from '../../investments.service';\r\nimport { Team } from '../../../teams/models/team';\r\nimport { TeamsService } from '../../../teams/teams.service';\r\nimport { Observable, Subscription, of } from 'rxjs';\r\nimport { map, switchMap, flatMap } from 'rxjs/operators';\r\nimport { CurrencyExchangeService } from '../../currency-exchange.service';\r\nimport { CurrencyInvestment } from '../../models/currencyInvestment';\r\nimport { INVESTMENTS_TYPES } from '../../../../constants';\r\nimport { UtilService } from '../../../../util.service';\r\nimport { PropertyInvestment } from '../../models/PropertyInvestment';\r\n\r\n@Component({\r\n  selector: 'investments-dashboard',\r\n  templateUrl: './investments-dashboard.component.html',\r\n  styleUrls: ['./investments-dashboard.component.scss']\r\n})\r\nexport class InvestmentsDashboardComponent implements OnInit, OnDestroy {\r\n  investments: Investment[] = [];\r\n  teams: Team[] = [];\r\n  investmentsUI: any[] = []; // this is a structure to use in the view an make the rendering easier organizing the info in rows\r\n  totalInvestment = 0;\r\n  totalReturn = 0;\r\n  myTotalInvestment = 0;\r\n  myTotalReturn = 0;\r\n  totals: any = {};\r\n  user: User = null;\r\n  subscription: Subscription = new Subscription();\r\n  getInvestmentsServiceRunning = false;\r\n  getTeamsServiceRunning = false;\r\n  INVESTMENTS_TYPES: any = INVESTMENTS_TYPES; // make it available in the view\r\n\r\n  constructor(private route: ActivatedRoute, private mainNavigatorService: MainNavigatorService, private usersService: UsersService, public dialog: MatDialog,\r\n      private appService: AppService, private teamsService: TeamsService, private investmentsService: InvestmentsService, private currencyExchangeService: CurrencyExchangeService,\r\n      private utilService: UtilService) { }\r\n\r\n  ngOnInit() {\r\n    const methodTrace = `${this.constructor.name} > ngOnInit() > `; // for debugging\r\n\r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: '/welcome', selected: false },\r\n      { displayName: 'Investments', url: null, selected: true },\r\n      { displayName: 'Properties', url: '/properties', selected: false }\r\n    ]);\r\n\r\n    // get authUser from resolver\r\n    const newSubscription = this.route.data.pipe(\r\n      map((data: { authUser: User }): User =>  {\r\n        this.user = data.authUser;\r\n        return data.authUser;\r\n      }), \r\n      flatMap((user: User): Observable<Investment[]> => {\r\n        this.getTeams(user); // I don't care when this come back\r\n        return this.getInvestments$(user);\r\n      })\r\n    ).subscribe(\r\n      (investments: Investment[]) => {\r\n        // organize investments in rows of n-items to show in the view\r\n        let investmentsRow: any[] = [];\r\n        const investmentsDates: string[] = [];\r\n\r\n        for (const item of investments) {\r\n          if (investmentsRow.length < 2) {\r\n            investmentsRow.push(item);\r\n          } else {\r\n            this.investmentsUI.push(investmentsRow);\r\n            investmentsRow = [item];\r\n          }\r\n\r\n          if (item instanceof CurrencyInvestment) {\r\n            investmentsDates.push(this.utilService.formatDate((<CurrencyInvestment>item).buyingDate, 'YYYY-MM-DD'));\r\n          } else if (item instanceof PropertyInvestment) {\r\n            investmentsDates.push(this.utilService.formatDate((<PropertyInvestment>item).buyingDate, 'YYYY-MM-DD'));\r\n          }\r\n        }\r\n\r\n        this.currencyExchangeService.getCurrencyRates$(investmentsDates); // lets retrieve investment dates for future usage in each investment\r\n\r\n        if (investmentsRow.length) {\r\n          this.investmentsUI.push(investmentsRow);\r\n        }\r\n\r\n        this.investments = investments;\r\n        this.getInvestmentsServiceRunning = false;\r\n      },\r\n      (error: any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n        } else {\r\n          this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n        }\r\n\r\n        this.getInvestmentsServiceRunning = false;\r\n      }\r\n    );\r\n\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    const methodTrace = `${this.constructor.name} > ngOnDestroy() > `; // for debugging\r\n\r\n    // this.appService.consoleLog('info', `${methodTrace} Component destroyed.`);\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Get my investments source from server\r\n   */\r\n  getInvestments$(user: User): Observable<Investment[]>  {\r\n    const methodTrace = `${this.constructor.name} > getInvestments$() > `; // for debugging\r\n\r\n    this.investments = [];\r\n    this.getInvestmentsServiceRunning = true;\r\n\r\n    return this.investmentsService.getInvestments$(user.email);\r\n  }\r\n\r\n  /**\r\n   * Get my teams from server\r\n   */\r\n  getTeams(user: User) {\r\n    const methodTrace = `${this.constructor.name} > getTeams() > `; // for debugging\r\n\r\n    this.teams = [];\r\n    this.getTeamsServiceRunning = true;\r\n\r\n    const newSubscription = this.teamsService.getTeams$(user.email).subscribe(\r\n      (teams: Team[]) => {\r\n        this.teams = teams;\r\n        this.getTeamsServiceRunning = false;\r\n      },\r\n      (error: any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n        } else {\r\n          this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n        }\r\n\r\n        this.getTeamsServiceRunning = false;\r\n      }\r\n    );\r\n\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n  setTotals(totalReturns: any): void {\r\n    // update the total that matches the id\r\n    this.totals[totalReturns.investmentId] = totalReturns;\r\n    // reset totals\r\n    this.totalReturn = 0;\r\n    this.totalInvestment = 0;\r\n    this.myTotalInvestment = 0;\r\n    this.myTotalReturn = 0;\r\n\r\n    // re calculate totals\r\n    for (const investmentId of Object.keys(this.totals)) {\r\n      this.totalReturn += this.totals[investmentId].investmentReturn;\r\n      this.totalInvestment += this.totals[investmentId].investmentAmount;\r\n      this.myTotalInvestment += this.totals[investmentId].myInvestmentAmount;\r\n      this.myTotalReturn += this.totals[investmentId].myInvestmentReturn;\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Removes the investment from the investments array and from the investmentUI array used in view. Also reduces the totals in the inveestment amount\r\n   */\r\n  removeInvestment(investmentData: any): void {\r\n    const methodTrace = `${this.constructor.name} > removeInvestment() > `; // for debugging\r\n\r\n    const investment = investmentData.investment;\r\n    if (investment) {\r\n      // get my portion in the investment\r\n      let myPortion = 0;\r\n      for (const portion of investment.investmentDistribution) {\r\n        if (this.user.email === portion.email) {\r\n          myPortion = portion.percentage;\r\n          break;\r\n        }\r\n      }\r\n\r\n      // update totals row\r\n      const investmentReturn = investmentData.investmentReturn;\r\n      const investmentAmount = investmentData.investmentAmount;\r\n      this.totalReturn -= investmentReturn;\r\n      this.totalInvestment -= investmentAmount;\r\n      this.myTotalReturn -= investmentReturn * myPortion / 100;\r\n      this.myTotalInvestment -= investmentAmount * myPortion / 100;\r\n\r\n      // remove investment from array\r\n      let index = 0;\r\n      for (const investmentToDelete of this.investments) {\r\n        if (investment.id === investmentToDelete.id) {\r\n          break;\r\n        }\r\n\r\n        index += 1;\r\n      }\r\n      this.investments.splice(index, 1);\r\n\r\n      // update ui array\r\n      let row = 0;\r\n      let offset = 0;\r\n      let found = false;\r\n      for (let i = 0; i < this.investmentsUI.length; i++) {\r\n        for (let j = 0; j < this.investmentsUI[i].length; j++) {\r\n          if (this.investmentsUI[i][j].id === investment.id) {\r\n            row = i;\r\n            offset = j;\r\n            found = true;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (found) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      this.investmentsUI[row].splice(offset, 1);\r\n      if (!this.investmentsUI[row].length) {\r\n        this.investmentsUI.splice(row, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  openNewInvestmentDialog() {\r\n    const addPersonDialogRef = this.dialog.open(InvestmentSelectorDialogComponent, {});\r\n    return false;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container__edit-investment\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"none none\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign.gt-xs=\\\"center none\\\" fxLayoutGap=\\\"10px\\\">\\r\\n  <form class=\\\"form__container form__edit-investment\\\" (ngSubmit)=\\\"editMode ? onUpdate() : onSubmit()\\\" #editInvestmentForm=\\\"ngForm\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n    <div *ngIf=\\\"!getInvestmentServiceRunning\\\">\\r\\n      <section fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields\\\">\\r\\n\\r\\n        <progress-bar class=\\\"progress-bar--get-teams\\\" *ngIf=\\\"getTeamsServiceRunning\\\"\\r\\n          color=\\\"primary\\\"\\r\\n          message=\\\"Loading your teams...\\\">\\r\\n        </progress-bar>\\r\\n\\r\\n        <div *ngIf=\\\"teams.length && !getTeamsServiceRunning\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n          <h3 class=\\\"title\\\">\\r\\n            <p class=\\\"header\\\">Owner</p>\\r\\n            <p class=\\\"mat-caption\\\">Specify the owner of this investment</p>\\r\\n          </h3>\\r\\n          \\r\\n          <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n            <mat-radio-group fxFlex fxFlex.gt-xs=\\\"230px\\\" class=\\\"form__field radiogroup__owner\\\"\\r\\n                [(ngModel)]=\\\"model.owner\\\" \\r\\n                name=\\\"owner\\\" \\r\\n                id=\\\"owner\\\" \\r\\n                #owner=\\\"ngModel\\\"\\r\\n                (change)=\\\"onRadioChange($event)\\\">\\r\\n              <mat-radio-button class=\\\"owner__option\\\" value=\\\"me\\\">Just me</mat-radio-button>\\r\\n              <mat-radio-button class=\\\"owner__option\\\" value=\\\"team\\\">My team</mat-radio-button>\\r\\n            </mat-radio-group>\\r\\n    \\r\\n            <mat-form-field *ngIf=\\\"teams.length && model.owner === 'team'\\\" fxFlex fxFlex.gt-xs=\\\"350px\\\" class=\\\"form__field\\\">\\r\\n              <mat-select [(ngModel)]=\\\"model.team\\\"\\r\\n                  name=\\\"team\\\" \\r\\n                  id=\\\"team\\\" \\r\\n                  #team=\\\"ngModel\\\" \\r\\n                  placeholder=\\\"Select a team\\\"\\r\\n                  (selectionChange)=\\\"onSelectChange($event)\\\"\\r\\n                  required>\\r\\n                <mat-option *ngFor=\\\"let team of teams\\\" [value]=\\\"team\\\">\\r\\n                  {{team.name}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n\\r\\n              <mat-icon matPrefix>group</mat-icon>\\r\\n              <mat-error *ngIf=\\\"team.invalid && (team.dirty || team.touched) && team.errors.required\\\">Please choose a team</mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n        \\r\\n        <div *ngIf=\\\"model.team\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n          <h3 class=\\\"title\\\">\\r\\n            <p class=\\\"header\\\">Split between team members</p>\\r\\n            <p class=\\\"mat-caption\\\">Specify how to split the returns setting a percentage of the total investment amount to each member</p>\\r\\n          </h3>\\r\\n  \\r\\n          <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n            <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row wrap\\\" fxLayoutGap=\\\"20px\\\" class=\\\"team-members\\\">\\r\\n              <div *ngFor=\\\"let member of model.team.members; index as memberIndex\\\" fxFlex=\\\"none\\\" fxFlex.gt-xs=\\\"250px\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"member\\\">\\r\\n                <div class=\\\"member-details\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n                  <img class=\\\"member__avatar\\\" [src]=\\\"member.avatar\\\"/>\\r\\n                  <div class=\\\"member__info\\\" fxLayout=\\\"column\\\" [matTooltip]=\\\"member.email === model.team.admin.email ? 'Administrator' : ''\\\" matTooltipPosition=\\\"right\\\">\\r\\n                    <p class=\\\"member__name\\\">{{member.name}} <mat-icon *ngIf=\\\"member.email === model.team.admin.email\\\" class=\\\"admin-icon\\\" aria-label=\\\"Admin\\\" >lock</mat-icon></p>\\r\\n                    <p class=\\\"member__email\\\">{{member.email}}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n      \\r\\n                <div class=\\\"member-percentage\\\">\\r\\n                  <mat-form-field class=\\\"form__field\\\">\\r\\n                    <input matInput type=\\\"number\\\" id=\\\"memberPercentage_{{member.email}}\\\" name=\\\"memberPercentage_{{member.email}}\\\" placeholder=\\\"Percentage of investment\\\"\\r\\n                        [(ngModel)]=\\\"model.membersPercentage[member.email]\\\" \\r\\n                        [value]=\\\"model.membersPercentage[member.email]\\\"\\r\\n                        numberValidator='{\\\"min\\\": 0, \\\"max\\\": 100}'\\r\\n                        required\\r\\n                        #memberPercentage=\\\"ngModel\\\">\\r\\n\\r\\n                    <span matSuffix>%</span>\\r\\n                    <mat-hint>Investment portion for {{member.name}}.</mat-hint>\\r\\n                    <mat-error *ngIf=\\\"memberPercentage.invalid && (memberPercentage.dirty || memberPercentage.touched) && memberPercentage.errors.required\\\">Percentage of investment is required.</mat-error>\\r\\n                    <mat-error *ngIf=\\\"memberPercentage.invalid && (memberPercentage.dirty || memberPercentage.touched) && memberPercentage.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n                    <mat-error *ngIf=\\\"memberPercentage.invalid && (memberPercentage.dirty || memberPercentage.touched) && memberPercentage.errors.numberValidatorMin\\\">Min value must be greater or equal than 0</mat-error>\\r\\n                    <mat-error *ngIf=\\\"memberPercentage.invalid && (memberPercentage.dirty || memberPercentage.touched) && memberPercentage.errors.numberValidatorMax\\\">Max value must be less or equal than 100</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            \\r\\n          </div>\\r\\n        </div>\\r\\n  \\r\\n        <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n          <h3 class=\\\"title title__investment-amount\\\">\\r\\n            <p class=\\\"header\\\">Investment details</p>\\r\\n          </h3>\\r\\n  \\r\\n          <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n            <!-- Investment amount -->\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n              <currency-unit fxFlex=\\\"50px\\\"\\r\\n                  [id]=\\\"'investmentAmountUnit'\\\" \\r\\n                  [value]=\\\"model.investmentAmountUnit\\\"\\r\\n                  [view]=\\\"'narrow'\\\"\\r\\n                  (newValue)=\\\"onCurrencyUnitChange($event)\\\">\\r\\n              </currency-unit>\\r\\n              \\r\\n              <mat-form-field fxFlex fxFlex.sm=\\\"120px\\\" fxFlex.gt-sm=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n                <input matInput type=\\\"number\\\" id=\\\"investmentAmount\\\" name=\\\"investmentAmount\\\" placeholder=\\\"Investment amount\\\"\\r\\n                    [(ngModel)]=\\\"model.investmentAmount\\\" \\r\\n                    [value]=\\\"model.investmentAmount\\\"\\r\\n                    numberValidator \\r\\n                    required\\r\\n                    #investmentAmount=\\\"ngModel\\\">\\r\\n                <mat-hint>Set the amount of money invested (excluding loan amount)</mat-hint>\\r\\n                <mat-error *ngIf=\\\"investmentAmount.invalid && (investmentAmount.dirty || investmentAmount.touched) && investmentAmount.errors.required\\\">Investment amount is required.</mat-error>\\r\\n                <mat-error *ngIf=\\\"investmentAmount.invalid && (investmentAmount.dirty || investmentAmount.touched) && investmentAmount.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <!-- Loan amount -->\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n              <currency-unit fxFlex=\\\"50px\\\"\\r\\n                  [id]=\\\"'loanAmountUnit'\\\" \\r\\n                  [value]=\\\"model.loanAmountUnit\\\"\\r\\n                  [view]=\\\"'narrow'\\\"\\r\\n                  (newValue)=\\\"onCurrencyUnitChange($event)\\\">\\r\\n              </currency-unit>\\r\\n              \\r\\n              <mat-form-field fxFlex fxFlex.sm=\\\"120px\\\" fxFlex.gt-sm=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n                <input matInput type=\\\"number\\\" id=\\\"loanAmount\\\" name=\\\"loanAmount\\\" placeholder=\\\"Loan amount\\\"\\r\\n                    [(ngModel)]=\\\"model.loanAmount\\\" \\r\\n                    [value]=\\\"model.loanAmount\\\"\\r\\n                    numberValidator \\r\\n                    #loanAmount=\\\"ngModel\\\">\\r\\n                <mat-hint>Set the amount of money borrowed</mat-hint>\\r\\n                <mat-error *ngIf=\\\"loanAmount.invalid && (loanAmount.dirty || loanAmount.touched) && loanAmount.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n  \\r\\n        <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n          <currency-investment-form *ngIf=\\\"type === INVESTMENT_TYPES.CRYPTO || type === INVESTMENT_TYPES.CURRENCY\\\" [defaultValues]=\\\"model.investmentData\\\"\\r\\n              (values)=\\\"onInvestmentDataChange($event)\\\">\\r\\n          </currency-investment-form>\\r\\n\\r\\n          <property-investment-form *ngIf=\\\"type === INVESTMENT_TYPES.PROPERTY\\\" [defaultValues]=\\\"model.investmentData\\\"\\r\\n              [user]=\\\"user\\\"\\r\\n              (values)=\\\"onInvestmentDataChange($event)\\\">\\r\\n          </property-investment-form>\\r\\n        </div>\\r\\n      </section>\\r\\n  \\r\\n      \\r\\n      <section class=\\\"form__actions form__actions--edit-investment\\\"\\r\\n          fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" \\r\\n          fxLayoutAlign=\\\"none start\\\" fxLayoutAlign.gt-sm=\\\"center start\\\" \\r\\n          fxLayoutGap=\\\"10px\\\">\\r\\n          \\r\\n        <button mat-fab *ngIf=\\\"!editInvestmentServiceRunning\\\" \\r\\n            class=\\\"fab mat-elevation-z10 form__action\\\" \\r\\n            color=\\\"accent\\\" \\r\\n            type=\\\"submit\\\"\\r\\n            matTooltip=\\\"Save changes\\\" matTooltipPosition=\\\"left\\\" \\r\\n            [disabled]=\\\"!editInvestmentForm.form.valid || !investmentDataValid\\\">\\r\\n          <mat-icon aria-label=\\\"Save changes\\\">save</mat-icon>\\r\\n        </button>\\r\\n        \\r\\n        <mat-progress-spinner *ngIf=\\\"editInvestmentServiceRunning\\\"\\r\\n            class=\\\"progress-spinner progress-spinner--edit-investment\\\"\\r\\n            color=\\\"accent\\\"\\r\\n            [diameter]=\\\"55\\\" [strokeWidth]=\\\"10\\\"\\r\\n            mode=\\\"indeterminate\\\">\\r\\n        </mat-progress-spinner>\\r\\n      </section>\\r\\n    </div>\\r\\n    \\r\\n    <!-- <pre>{{model | json}}</pre> -->\\r\\n  </form>\\r\\n\\r\\n  <progress-bar class=\\\"progress-bar--get-investment\\\" *ngIf=\\\"getInvestmentServiceRunning\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      message=\\\"Loading investment info...\\\">\\r\\n  </progress-bar>\\r\\n</div>\\r\\n\"","module.exports = \".progress-bar--get-investment, .progress-bar--get-teams {\\n  width: 100%; }\\n\\n.container__edit-investment .form__fields .form__fields__row__container .radiogroup__owner .owner__option {\\n  margin-right: 10px; }\\n\\n.container__edit-investment .form__fields .form__fields__row__container .radiogroup__owner .owner__option:last-child {\\n    margin-right: 0; }\\n\\n.container__edit-investment .form__fields .form__fields__row__container .title__investment-amount {\\n  margin-bottom: 5px !important; }\\n\\n.container__edit-investment .team-members .member .member__avatar {\\n  border-radius: 50%;\\n  width: 40px;\\n  height: 40px;\\n  padding: 0 10px 0 0; }\\n\\n.container__edit-investment .team-members .member .member__info .admin-icon {\\n  font-size: 14px;\\n  height: auto;\\n  width: auto; }\\n\\n.container__edit-investment .team-members .member .member__info .member__email {\\n  font-size: 11px; }\\n\\n@media screen and (min-width: 600px) {\\n  .progress-bar--get-investment, .progress-bar--get-teams {\\n    width: 300px; } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9pbnZlc3RtZW50cy9jb21wb25lbnRzL2ludmVzdG1lbnRzLWVkaXQvQzpcXHczXFxhdG9taUNvY29udXRcXGNsaWVudC9zcmNcXGFwcFxcbW9kdWxlc1xcaW52ZXN0bWVudHNcXGNvbXBvbmVudHNcXGludmVzdG1lbnRzLWVkaXRcXGludmVzdG1lbnRzLWVkaXQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDRSxZQUFXLEVBQ1o7O0FBRUQ7RUFPUSxtQkFBa0IsRUFLbkI7O0FBWlA7SUFVVSxnQkFBZSxFQUNoQjs7QUFYVDtFQWVRLDhCQUE2QixFQUM5Qjs7QUFoQlA7RUEyQlEsbUJBQWtCO0VBQ2xCLFlBQVc7RUFDWCxhQUFZO0VBQ1osb0JBQW1CLEVBQ3BCOztBQS9CUDtFQW9DVSxnQkFBZTtFQUNmLGFBQVk7RUFDWixZQUFXLEVBQ1o7O0FBdkNUO0VBMENVLGdCQUFlLEVBQ2hCOztBQU1UO0VBRUU7SUFDRSxhQUFZLEVBQ2IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvaW52ZXN0bWVudHMvY29tcG9uZW50cy9pbnZlc3RtZW50cy1lZGl0L2ludmVzdG1lbnRzLWVkaXQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICcuLi8uLi8uLi8uLi8uLi92YXJpYWJsZXMnO1xyXG5cclxuLnByb2dyZXNzLWJhci0tZ2V0LWludmVzdG1lbnQsIC5wcm9ncmVzcy1iYXItLWdldC10ZWFtcyB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5jb250YWluZXJfX2VkaXQtaW52ZXN0bWVudCB7XHJcbiAgXHJcbiAgLmZvcm1fX2ZpZWxkcyB7XHJcblxyXG4gICAgLmZvcm1fX2ZpZWxkc19fcm93X19jb250YWluZXIge1xyXG5cclxuICAgICAgLnJhZGlvZ3JvdXBfX293bmVyIC5vd25lcl9fb3B0aW9uIHtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgXHJcbiAgICAgICAgJjpsYXN0LWNoaWxkIHtcclxuICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC50aXRsZV9faW52ZXN0bWVudC1hbW91bnQge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDVweCAhaW1wb3J0YW50O1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgXHJcbiAgfVxyXG5cclxuICAudGVhbS1tZW1iZXJzIHtcclxuXHJcbiAgICAubWVtYmVyIHtcclxuICAgICAgXHJcbiAgICAgIC5tZW1iZXJfX2F2YXRhciB7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgICAgIGhlaWdodDogNDBweDtcclxuICAgICAgICBwYWRkaW5nOiAwIDEwcHggMCAwO1xyXG4gICAgICB9XHJcbiAgXHJcbiAgICAgIC5tZW1iZXJfX2luZm8ge1xyXG4gICAgICAgIFxyXG4gICAgICAgIC5hZG1pbi1pY29uIHtcclxuICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgICAgIH1cclxuICBcclxuICAgICAgICAubWVtYmVyX19lbWFpbCB7XHJcbiAgICAgICAgICBmb250LXNpemU6IDExcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkc2NyZWVuR3RYcykge1xyXG5cclxuICAucHJvZ3Jlc3MtYmFyLS1nZXQtaW52ZXN0bWVudCwgLnByb2dyZXNzLWJhci0tZ2V0LXRlYW1zIHtcclxuICAgIHdpZHRoOiAzMDBweDtcclxuICB9XHJcbn0iXX0= */\"","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChild } from '@angular/core';\r\nimport { DecimalPipe } from '@angular/common';\r\nimport { MainNavigatorService } from '../../../shared/components/main-navigator/main-navigator.service';\r\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\r\nimport { User } from '../../../users/models/user';\r\nimport { TeamsService } from '../../../teams/teams.service';\r\nimport { AppService } from '../../../../app.service';\r\nimport { Team } from '../../../teams/models/team';\r\nimport { Subscription, Observable, of } from 'rxjs';\r\nimport { map, combineLatest, debounceTime, flatMap } from 'rxjs/operators';\r\nimport { MatSelectChange, MatRadioChange } from '@angular/material';\r\nimport { InvestmentsService } from '../../investments.service';\r\nimport { Investment } from '../../models/investment';\r\nimport { CurrencyInvestment } from '../../models/currencyInvestment';\r\nimport { INVESTMENTS_TYPES } from '../../../../constants';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { PropertyInvestment } from '../../models/PropertyInvestment';\r\n\r\n@Component({\r\n  selector: 'investments-edit',\r\n  templateUrl: './investments-edit.component.html',\r\n  styleUrls: ['./investments-edit.component.scss']\r\n})\r\nexport class InvestmentsEditComponent implements OnInit, OnDestroy, AfterViewInit {\r\n\r\n  @ViewChild('editInvestmentForm') form;\r\n  editMode = false;\r\n  user: User = null;\r\n  teams: Team[] = [];\r\n  investment: Investment = null;\r\n  model: any = {\r\n    id : null,\r\n    email : null, // user email for api check\r\n    owner : 'me',\r\n    team : null,\r\n    teamSlug : null,\r\n    membersPercentage : {},\r\n    loanAmount : null,\r\n    loanAmountUnit : null,\r\n    investmentAmount : null,\r\n    investmentAmountUnit : null,\r\n    type : null,\r\n    investmentData : {}, // specific data related to the investment type\r\n    investmentDistribution : [] // how the investment would be distributed into its owners\r\n  };\r\n  id: string = null; // investment id\r\n  type: string = null; // investment type\r\n  // services flags\r\n  editInvestmentServiceRunning = false;\r\n  getInvestmentServiceRunning = false;\r\n  getTeamsServiceRunning = false;\r\n  subscription: Subscription = new Subscription();\r\n  formChangesSubscription: any = null;\r\n  investmentDataValid = false; // this value is set when investment data form is updated\r\n  INVESTMENT_TYPES: any = INVESTMENTS_TYPES;\r\n\r\n  \r\n  constructor(private route: ActivatedRoute, private mainNavigatorService: MainNavigatorService, private investmentsService: InvestmentsService,\r\n      private teamsService: TeamsService, private appService: AppService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    const methodTrace = `${this.constructor.name} > ngOnInit() > `; // for debugging\r\n\r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: '/welcome', selected: false },\r\n      { displayName: 'Investments', url: '/investments', selected: false }\r\n    ]);\r\n    \r\n    // generates a user source object from authUser from resolver\r\n    const user$ = this.route.data.pipe(map((data: { authUser: User }): User => data.authUser));\r\n\r\n    // creates a params source from parameters in url useful for the rest of the code\r\n    const params$ = this.route.paramMap.pipe(map((params: ParamMap): any => { \r\n      const type: string = params.get('type');\r\n\r\n      if (![INVESTMENTS_TYPES.CURRENCY, INVESTMENTS_TYPES.CRYPTO, INVESTMENTS_TYPES.PROPERTY].includes(type)) {\r\n        this.appService.showResults('You must provide a valid investment type to continue.', 'error');\r\n        this.router.navigate(['welcome']);\r\n      } else {\r\n        this.type = type;\r\n        this.model.type = type;\r\n        this.model.investmentData.type = type;\r\n      }\r\n\r\n      return { id : params.get('id') }; \r\n    }));\r\n    \r\n    // combine user$ and id$ sources into one object and start listen to it for changes\r\n    const newSubscription = user$.pipe(\r\n      combineLatest(params$, (user: User, urlParams: any): string => {\r\n        const urlObject = (<BehaviorSubject<any>>this.route.url).getValue(); \r\n        let investmentId: string = null;\r\n        let propertyId: string = null;\r\n        if (urlObject[0]['path'] === INVESTMENTS_TYPES.PROPERTY && urlObject[1]['path'] === 'create') {\r\n          // we are creating a property investment coming from the property component\r\n          propertyId = urlParams.id;\r\n        } else {\r\n          // we are editing an investment or creating a new one coming from the investment dashboard\r\n          investmentId = urlParams.id;\r\n        }\r\n\r\n        this.populateRequiredData(user, investmentId, propertyId);\r\n\r\n        return investmentId; \r\n      }),\r\n      flatMap((investmentId: string): Observable<Investment> => {\r\n        if (investmentId) {\r\n          return this.getInvestment$(investmentId);\r\n        }\r\n        \r\n        return of(null);\r\n      })\r\n    ).subscribe(\r\n      (investment: Investment) => {\r\n        if (investment) {\r\n          this.populateInvestmentData(investment);\r\n          this.getInvestmentServiceRunning = false;\r\n\r\n          if (this.form && !this.formChangesSubscription) {\r\n            this.subscribeFormValueChanges();\r\n          }\r\n        }\r\n      },\r\n      (error: any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n        } else if (error.codeno === 461 || error.codeno === 462) {\r\n          this.appService.showResults(error.msg, 'error');\r\n          this.router.navigate(['/welcome']);\r\n        } else {\r\n          this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n        }\r\n\r\n        this.getInvestmentServiceRunning = false;\r\n      }\r\n    );\r\n\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n  /**\r\n   * Populates the data required to work with this component\r\n   */\r\n  populateRequiredData(user: User, investmentId: string = null, propertyId: string = null) {\r\n    this.user = user;\r\n    this.getTeams(); // don't need to wait for this\r\n    \r\n    this.model.email = user.email;\r\n    this.model.investmentAmountUnit = user.currency;\r\n    this.model.loanAmountUnit = user.currency;\r\n    this.model.id = investmentId;\r\n    if (propertyId) {\r\n      this.model.investmentData.propertyId = propertyId;\r\n    }\r\n\r\n    if (!investmentId) {\r\n      // we are creating a new investment\r\n      this.id = null;\r\n      this.editMode = false;\r\n      this.mainNavigatorService.appendLink({ displayName: 'Create Investment', url: '', selected : true });\r\n    } else {\r\n      this.mainNavigatorService.appendLink({ displayName: 'Edit Investment', url: '', selected : true });\r\n      // we are editing an existing investment\r\n      this.id = investmentId; // the new slug\r\n      this.editMode = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Populates all the investment data in the view model\r\n   * @param { Investment } investment \r\n   */\r\n  populateInvestmentData(investment: Investment) {\r\n    this.investment = investment;\r\n          \r\n    // populate the model\r\n    this.model.owner = investment.team ? 'team' : 'me';\r\n    this.model.team = investment.team;\r\n    this.setSelectedTeam(); // this is necesary to make the selectbox in ui set a team\r\n    this.model.teamSlug = investment.team ? investment.team.slug : null;\r\n    this.model.investmentDistribution = investment.investmentDistribution;\r\n    for (const portion of investment.investmentDistribution) {\r\n      this.model.membersPercentage[portion.email] = portion.percentage;\r\n    }\r\n    this.model.loanAmount = investment.loanAmount;\r\n    this.model.loanAmountUnit = investment.loanAmountUnit;\r\n    this.model.investmentAmount = investment.investmentAmount;\r\n    this.model.investmentAmountUnit = investment.investmentAmountUnit;\r\n    this.model.type = investment.type;\r\n    if (investment instanceof CurrencyInvestment) {\r\n      this.model.investmentData = {\r\n        type : investment.type,\r\n        unit : investment.unit,\r\n        amount : investment.amount,\r\n        buyingPrice : investment.buyingPrice,\r\n        buyingPriceUnit : investment.buyingPriceUnit,\r\n        buyingDate : investment.buyingDate\r\n      };\r\n    } else if (investment instanceof PropertyInvestment) {\r\n      this.model.investmentData = {\r\n        type : investment.type,\r\n        property : investment.property,\r\n        address : investment.property.address,\r\n        buyingPrice : investment.buyingPrice,\r\n        buyingPriceUnit : investment.buyingPriceUnit,\r\n        buyingDate : investment.buyingDate\r\n      };\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.form && !this.formChangesSubscription) {\r\n      this.subscribeFormValueChanges();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This methods subscribes to changes on the main form in the view. We do it in a separate method because when the page loads for edition the form it is not defined in the\r\n   * view until an investment is retrived from the server. We save an instance of the subscription to avoid subscriwe twice or more times.\r\n   */\r\n  subscribeFormValueChanges() {\r\n    this.formChangesSubscription = this.form.valueChanges.pipe(debounceTime(500)).subscribe(values => {\r\n      if (values.owner === 'team' && values.team && this.model.team) {\r\n        // calculates the percentage acum from all the members\r\n        const percentageAcum = this.model.team.members.reduce((total, member) => {\r\n          return total + (this.model.membersPercentage[member.email] || 0);\r\n        }, 0);\r\n\r\n        if (percentageAcum > 100) {\r\n          const [lastMember] = this.model.team.members.slice(-1);\r\n          const diff = percentageAcum - 100;\r\n          const newValue = Number(DecimalPipe.prototype.transform(this.model.membersPercentage[lastMember.email] - diff, '1.0-2', 'en'));\r\n          if (newValue < 0) {\r\n            this.setDefaultInvestmentPercentages();\r\n            this.appService.showResults(`The sum of percentages must not exceed 100%, we reset the values to make it valid.`, 'warn');\r\n          } else {\r\n            this.model.membersPercentage[lastMember.email] = newValue <= 100 ? newValue : 0;\r\n            this.appService.showResults(`The sum of percentages must not exceed 100%, we reset the last values to make it valid.`, 'warn');\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    this.subscription.add(this.formChangesSubscription);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    const methodTrace = `${this.constructor.name} > ngOnDestroy() > `; // for debugging\r\n    \r\n    // this.appService.consoleLog('info', `${methodTrace} Component destroyed.`);\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onSubmit() {\r\n    const methodTrace = `${this.constructor.name} > onSubmit() > `; // for debugging\r\n\r\n    this.editInvestmentServiceRunning = true;\r\n\r\n    this.model.investmentDistribution = this.populateInvestmentDistributionArray();\r\n    this.model.createdOn = new Date(Date.now());\r\n    this.model.updatedOn = new Date(Date.now());\r\n\r\n    // call the investment create service\r\n    const newSubscription = this.investmentsService.create$(this.model).subscribe(\r\n      (data: any) => {\r\n        if (data && data.id && data.type) {\r\n          this.appService.showResults(`Investment successfully created!`, 'success');\r\n          this.router.navigate(['/investments/', data.type, 'edit', data.id]);\r\n        } else {\r\n          this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`);\r\n          this.editInvestmentServiceRunning = false;\r\n        }\r\n      },\r\n      (error: any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error with the create/edit investment service.`, error);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error with the investment services, please try again in a few minutes.`, 'error');\r\n        }\r\n\r\n        this.editInvestmentServiceRunning = false;\r\n      }\r\n    );\r\n\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n  onUpdate() {\r\n    const methodTrace = `${this.constructor.name} > onUpdate() > `; // for debugging\r\n\r\n    this.editInvestmentServiceRunning = true;\r\n\r\n    this.model.investmentDistribution = this.populateInvestmentDistributionArray();\r\n    this.model.updatedOn = new Date(Date.now());\r\n    // call the investment create service\r\n    const newSubscription = this.investmentsService.update$(this.model).subscribe(\r\n      (data: any) => {\r\n        if (data && data.id && data.type) {\r\n          this.appService.showResults(`Investment successfully updated!`, 'success');\r\n        } else {\r\n          this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`);\r\n        }\r\n\r\n        this.editInvestmentServiceRunning = false;\r\n      },\r\n      (error: any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error with the create/edit investment service.`, error);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error with the investment services, please try again in a few minutes.`, 'error');\r\n        }\r\n\r\n        this.editInvestmentServiceRunning = false;\r\n      }\r\n    );\r\n\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n  /**\r\n   * Get my teams from server\r\n   */\r\n  getTeams() {\r\n    const methodTrace = `${this.constructor.name} > getTeams() > `; // for debugging\r\n\r\n    this.teams = [];\r\n    this.getTeamsServiceRunning = true;\r\n\r\n    const newSubscription = this.teamsService.getTeams$(this.user.email).subscribe(\r\n      (teams: Team[]) => {\r\n        this.teams = teams;\r\n        this.getTeamsServiceRunning = false;\r\n        \r\n        this.setSelectedTeam();\r\n      },\r\n      (error: any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n        } else {\r\n          this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n        }\r\n\r\n        this.getTeamsServiceRunning = false;\r\n      }\r\n    );\r\n\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n  /**\r\n   * Get the selected team . This is going to works when teams and investment is here (so we are in edit mode) and the investment has a team selected\r\n   */\r\n  setSelectedTeam() {\r\n    if (this.teams && this.teams.length && this.investment && this.investment.team) {\r\n      for (const team of this.teams) {\r\n        if (this.investment.team.slug === team.slug) {\r\n          this.model.team = team;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Populates an array that specifies the distribution of the investment between its owners and returns it.\r\n   * \r\n   * @return {array} The distribution of the investment\r\n   */\r\n  populateInvestmentDistributionArray(): any[] {\r\n    const result = [];\r\n\r\n    if (!this.model.team) {\r\n      result.push({ email : this.user.email, percentage : 100 });\r\n    } else {\r\n      for (const email of Object.keys(this.model.membersPercentage)) {\r\n        result.push({ email, percentage : this.model.membersPercentage[email] });\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get an investment source from server based on the id provided\r\n   * @param {string} id \r\n   * \r\n   * @return { Observable<Investment> }\r\n   */\r\n  getInvestment$(id: string): Observable<Investment> {\r\n    const methodTrace = `${this.constructor.name} > getInvestment$() > `; // for debugging\r\n    \r\n    if (!id) {\r\n      this.appService.showResults(`Invalid investment ID`, 'error');\r\n      this.appService.consoleLog('error', `${methodTrace} ID parameter must be provided, but was: `, id);\r\n      return of(null);\r\n    }\r\n\r\n    this.getInvestmentServiceRunning = true;\r\n\r\n    return this.investmentsService.getInvestmentById$(this.user.email, id);\r\n  }\r\n\r\n  onSelectChange(matSelectChange: MatSelectChange) {\r\n    this.model.teamSlug = matSelectChange.value.slug;\r\n\r\n    this.setDefaultInvestmentPercentages();\r\n  }\r\n\r\n  onRadioChange(matRadioChange: MatRadioChange) {\r\n    if (matRadioChange.value === 'me') {\r\n      // reset team values from model\r\n      this.model.team = this.model.teamSlug = null;\r\n    }\r\n\r\n    this.model.membersPercentage = {};\r\n  }\r\n\r\n  onCurrencyUnitChange($event: MatSelectChange) {\r\n    this.model[$event.source.id] = $event.value;\r\n  }\r\n\r\n  onInvestmentDataChange($event: any) {\r\n    this.model.investmentData = $event.value.model;\r\n    this.investmentDataValid = $event.value.valid;\r\n  }\r\n\r\n  /**\r\n   * Splits equally the percentage of an investment to all the team members\r\n   */\r\n  setDefaultInvestmentPercentages() {\r\n    this.model.membersPercentage = {};\r\n    // set the default percentage of the investment to each member\r\n    const defaultPercentage = Number(DecimalPipe.prototype.transform(100 / this.model.team.members.length, '1.0-2', 'en'));\r\n    for (const member of this.model.team.members) {\r\n      this.model.membersPercentage[member.email] = defaultPercentage;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<form class=\\\"form__container form__edit-property-investment\\\" #editPropertyInvestmentForm=\\\"ngForm\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n  \\r\\n  <progress-bar class=\\\"progress-bar--get-property\\\" *ngIf=\\\"getPropertyServiceRunning\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      message=\\\"Loading property info...\\\">\\r\\n  </progress-bar>\\r\\n  \\r\\n  <section *ngIf=\\\"!getPropertyServiceRunning\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields\\\">\\r\\n    \\r\\n    <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n        <!-- Address -->\\r\\n        <mat-form-field fxFlex class=\\\"form__field address__field\\\">\\r\\n          <input matInput type=\\\"text\\\" id=\\\"property\\\" name=\\\"property\\\" placeholder=\\\"Property\\\" \\r\\n              [(ngModel)]=\\\"model.address\\\" \\r\\n              required\\r\\n              readonly\\r\\n              matTooltip=\\\"Select property...\\\"\\r\\n              [value]=\\\"model.address\\\"\\r\\n              #property=\\\"ngModel\\\"\\r\\n              (click)=\\\"openPropertySelectionDialog()\\\">\\r\\n          \\r\\n          <mat-icon matPrefix [matTooltip]=\\\"model.property ? 'Go to property' : ''\\\" [routerLink]=\\\"model.property ? '/properties/' + model.property.type + '/edit/' + model.property.id : '.'\\\">home</mat-icon>\\r\\n          <button mat-button matTooltip=\\\"Select property...\\\" matSuffix mat-icon-button aria-label=\\\"Choose property...\\\" (click)=\\\"openPropertySelectionDialog()\\\">\\r\\n            <mat-icon>view_list</mat-icon>\\r\\n          </button>\\r\\n              \\r\\n          <mat-error *ngIf=\\\"property.invalid && (property.dirty || property.touched) && property.errors.required\\\">This field is required.</mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n        <!-- Buying date -->\\r\\n        <mat-form-field fxFlex fxFlex.gt-xs=\\\"100px\\\" class=\\\"form__field\\\">\\r\\n          <input placeholder=\\\"Buying date\\\"\\r\\n              id=\\\"buyingDate\\\"\\r\\n              name=\\\"buyingDate\\\"\\r\\n              readonly\\r\\n              required\\r\\n              #buyingDate=\\\"ngModel\\\"\\r\\n              matInput \\r\\n              [(ngModel)]=\\\"model.buyingDate\\\" \\r\\n              [matDatepicker]=\\\"pickerBuyingDate\\\"\\r\\n              (click)=\\\"pickerBuyingDate.open()\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"pickerBuyingDate\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker [touchUi]=\\\"utilService.isGtSm() ? false : true\\\" #pickerBuyingDate></mat-datepicker>\\r\\n          <mat-error *ngIf=\\\"buyingDate.invalid && (buyingDate.dirty || buyingDate.touched) && buyingDate.errors.required\\\">Buying date is required.</mat-error>\\r\\n          <mat-error *ngIf=\\\"buyingDate.invalid && (buyingDate.dirty || buyingDate.touched) && buyingDate.errors.matDatepickerParse\\\">Buying date is invalid or not follows the pattern \\\"mm/dd/yyyy\\\"</mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n          <!-- Buying price unit -->\\r\\n          <currency-unit fxFlex=\\\"50px\\\"\\r\\n              [id]=\\\"'buyingPriceUnit'\\\" \\r\\n              [view]=\\\"'narrow'\\\"\\r\\n              [value]=\\\"model.buyingPriceUnit\\\"\\r\\n              (newValue)=\\\"onCurrencyUnitChange($event)\\\">\\r\\n          </currency-unit>\\r\\n\\r\\n          <!-- Buying price -->\\r\\n          <mat-form-field fxFlex fxFlex.sm=\\\"120px\\\" fxFlex.gt-sm=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"number\\\" id=\\\"buyingPrice\\\" name=\\\"buyingPrice\\\" placeholder=\\\"Price\\\"\\r\\n                [(ngModel)]=\\\"model.buyingPrice\\\" \\r\\n                [value]=\\\"model.buyingPrice\\\"\\r\\n                numberValidator \\r\\n                required\\r\\n                #buyingPrice=\\\"ngModel\\\">\\r\\n            <mat-hint align=\\\"start\\\">Price on buying date.</mat-hint>\\r\\n            <mat-error *ngIf=\\\"buyingPrice.invalid && (buyingPrice.dirty || buyingPrice.touched) && buyingPrice.errors.required\\\">Buying price is required.</mat-error>\\r\\n            <mat-error *ngIf=\\\"buyingPrice.invalid && (buyingPrice.dirty || buyingPrice.touched) && buyingPrice.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        \\r\\n      </div>\\r\\n    </div>\\r\\n  </section>\\r\\n</form>\\r\\n\"","module.exports = \".form__edit-property-investment .address__field {\\n  cursor: pointer; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9pbnZlc3RtZW50cy9jb21wb25lbnRzL3Byb3BlcnR5LWludmVzdG1lbnQtZm9ybS9DOlxcdzNcXGF0b21pQ29jb251dFxcY2xpZW50L3NyY1xcYXBwXFxtb2R1bGVzXFxpbnZlc3RtZW50c1xcY29tcG9uZW50c1xccHJvcGVydHktaW52ZXN0bWVudC1mb3JtXFxwcm9wZXJ0eS1pbnZlc3RtZW50LWZvcm0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFHSSxnQkFBZSxFQUNoQiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvaW52ZXN0bWVudHMvY29tcG9uZW50cy9wcm9wZXJ0eS1pbnZlc3RtZW50LWZvcm0vcHJvcGVydHktaW52ZXN0bWVudC1mb3JtLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm1fX2VkaXQtcHJvcGVydHktaW52ZXN0bWVudCB7XHJcblxyXG4gIC5hZGRyZXNzX19maWVsZCB7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgfVxyXG59Il19 */\"","import { Component, OnInit, ViewChild, Input, Output, EventEmitter, OnDestroy, AfterViewInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { DateAdapter, NativeDateAdapter, MatSelectChange, MatDialog } from '@angular/material';\r\nimport { AppService } from '../../../../app.service';\r\nimport { UtilService } from '../../../../util.service';\r\nimport { INVESTMENTS_TYPES } from '../../../../constants';\r\nimport { PropertiesService } from '../../../properties/properties.service';\r\nimport { Property } from '../../../properties/models/property';\r\nimport { Router } from '@angular/router';\r\nimport { User } from '../../../users/models/user';\r\nimport { PropertySelectorDialogComponent } from '../../../properties/components/property-selector-dialog/property-selector-dialog.component';\r\n\r\n@Component({\r\n  selector: 'property-investment-form',\r\n  templateUrl: './property-investment-form.component.html',\r\n  styleUrls: ['./property-investment-form.component.scss']\r\n})\r\nexport class PropertyInvestmentFormComponent implements OnInit, OnDestroy, AfterViewInit {\r\n\r\n  @ViewChild('editPropertyInvestmentForm') form;\r\n  @Input() defaultValues: any = null; // the default values of the component model  \r\n  @Input() user: User = null;\r\n  @Output() values: EventEmitter<any> = new EventEmitter();\r\n  model: any = {\r\n    type : null,\r\n    property : null,\r\n    propertyId : null, // just used here to retireve a property when the parent component set it. Don't use this value in the server, use the one in the property object instead\r\n    address : null, // just used for the ngmodel in the view. Don't use this value in the server, use the address in the property object instead\r\n    buyingPrice : null,\r\n    buyingPriceUnit : null,\r\n    buyingDate : null\r\n  };\r\n  subscription: Subscription = new Subscription();\r\n  getPropertyServiceRunning = false;\r\n\r\n  constructor(private dateAdapter: DateAdapter<NativeDateAdapter>, private appService: AppService, public dialog: MatDialog,\r\n      public utilService: UtilService, private propertiesService: PropertiesService, private router: Router) {\r\n    \r\n    this.dateAdapter.setLocale('en-GB');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.model.type = INVESTMENTS_TYPES.PROPERTY;\r\n    this.model.buyingDate = new Date(Date.now());\r\n    this.model.buyingPriceUnit = this.user.currency;\r\n    Object.assign(this.model, this.defaultValues);\r\n    \r\n    if (this.model.propertyId) {\r\n      // when creating from the property \"invest action\" or some component that shows properties an allow the creation of an investment of it\r\n      this.getProperty(this.model.propertyId);\r\n    } else if (this.model.property) {\r\n      // when editing a property investment\r\n      this.model.address = this.model.property.address.description; \r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    const methodTrace = `${this.constructor.name} > ngOnDestroy() > `; // for debugging\r\n    \r\n    // this.appService.consoleLog('info', `${methodTrace} Component destroyed.`);\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onCurrencyUnitChange($event: MatSelectChange) {\r\n    this.model[$event.source.id] = $event.value;\r\n\r\n    this.emitValues();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // send data before touching any value\r\n    this.emitValues();\r\n\r\n    // after any event in the form we send updated data\r\n    const newSubscription = this.form.valueChanges.pipe(debounceTime(500)).subscribe(values => {\r\n      this.emitValues();\r\n    });\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n  emitValues() {\r\n    this.values.emit({ \r\n      value : {\r\n        model : this.model,\r\n        valid : this.form.valid\r\n      } \r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get a property from server based on the id provided\r\n   * @param {string} id \r\n   */\r\n  getProperty(id: string) {\r\n    const methodTrace = `${this.constructor.name} > getProperty() > `; // for debugging\r\n    \r\n    if (!id) {\r\n      this.appService.showResults(`Invalid property ID`, 'error');\r\n      this.appService.consoleLog('error', `${methodTrace} ID parameter must be provided, but was: `, id);\r\n      this.router.navigate(['/properties']);\r\n    }\r\n\r\n    this.getPropertyServiceRunning = true;\r\n\r\n    const newSubscription = this.propertiesService.getPropertyById$(this.user.email, id).subscribe(\r\n      (property: Property) => {\r\n        this.setProperty(property);\r\n      },\r\n      (error: any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > `, error);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n        } else if (error.codeno === 461 || error.codeno === 462) {\r\n          this.appService.showResults(error.msg, 'error');\r\n        } else {\r\n          this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n        }\r\n\r\n        this.router.navigate(['/properties']);\r\n        this.getPropertyServiceRunning = false;\r\n      }\r\n    );\r\n\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n  setProperty(property: Property) {\r\n    if (property.createdBy.email !== this.user.email) {\r\n      // we cannot create an investment of a property not created by me\r\n      this.appService.showResults(`Only the property creator (${property.createdBy.name}) is allowed to create an investment with this property.`, 'error');\r\n      return this.router.navigate(['/properties']);\r\n    } else {\r\n      this.model.property = property;\r\n      this.model.address = property.address.description;\r\n      let buyingPrice = null;\r\n      let buyingPriceUnit = null;\r\n\r\n      if (property.purchasePrice) {\r\n        buyingPrice = property.purchasePrice;\r\n        buyingPriceUnit = property.purchasePriceUnit;\r\n      } else if (property.offerPrice) {\r\n        buyingPrice = property.offerPrice;\r\n        buyingPriceUnit = property.offerPriceUnit;\r\n      } else if (property.askingPrice) {\r\n        buyingPrice = property.askingPrice;\r\n        buyingPriceUnit = property.askingPriceUnit;\r\n      } else if (property.walkAwayPrice) {\r\n        buyingPrice = property.walkAwayPrice;\r\n        buyingPriceUnit = property.walkAwayPriceUnit;\r\n      }\r\n      \r\n      this.model.buyingPrice = buyingPrice;\r\n      this.model.buyingPriceUnit = buyingPriceUnit || this.user.currency;\r\n\r\n      this.getPropertyServiceRunning = false;\r\n    }\r\n  }\r\n\r\n  openPropertySelectionDialog() {\r\n    const methodTrace = `${this.constructor.name} > openPropertySelectionDialog() > `; // for debugging\r\n    \r\n    const propertySelectorDialogRef = this.dialog.open(PropertySelectorDialogComponent, {\r\n      data: {\r\n        title : 'Select a property',\r\n        user : this.user\r\n      }\r\n    });\r\n\r\n    const newSubscription = propertySelectorDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.setProperty(result);\r\n      }\r\n    });\r\n    this.subscription.add(newSubscription); \r\n\r\n    return false;\r\n  }\r\n}\r\n","module.exports = \"<mat-card class=\\\"investment__card\\\">\\r\\n  <mat-card-header routerLink=\\\"/properties/{{investment.property.type}}/edit/{{investment.property.id}}\\\">\\r\\n    <div mat-card-avatar class=\\\"header-image\\\">\\r\\n        <img [src]=\\\"'/assets/images/house.png'\\\" [alt]=\\\"investment.type\\\" />\\r\\n    </div>\\r\\n    <mat-card-title>{{investmentTitle}}</mat-card-title>\\r\\n    <mat-card-subtitle>{{investment.property.address.description}}</mat-card-subtitle>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content class=\\\"card__content\\\">\\r\\n    <!-- Card Data -->\\r\\n    <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-evenly center\\\" class=\\\"card__data\\\">\\r\\n      <span>Amount invested: <strong>{{investmentAmount | currency : 'USD' : 'code' : '1.2-2' }}</strong></span>\\r\\n\\r\\n      <span>on {{investment.buyingDate | date}}</span>\\r\\n      \\r\\n      <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n        <span>Buying price: {{ buyingPrice | currency : 'USD' : 'code' : '1.2-2' }}</span>\\r\\n        <info-tooltip text=\\\"Price on investment date\\\" position=\\\"right\\\"></info-tooltip>\\r\\n      </div>\\r\\n\\r\\n      <div>\\r\\n        Today market value: \\r\\n        <span [class.color__accent]=\\\"currentPrice >= buyingPrice\\\" \\r\\n          [class.color__red]=\\\"currentPrice < buyingPrice\\\">\\r\\n\\r\\n          <strong>{{currentPrice | currency : 'USD' : 'code' : '1.2-2'}}</strong>\\r\\n        </span>\\r\\n      </div>\\r\\n\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n        <span *ngIf=\\\"investment.loanAmount\\\">\\r\\n          Loan amount: <strong>{{ loanAmount | currency : 'USD' : 'code' : '1.2-2' }}</strong>\\r\\n        </span>\\r\\n        <info-tooltip text=\\\"{{loanAmount / buyingPrice | percent}} of buying price\\\" position=\\\"right\\\"></info-tooltip>\\r\\n      </div>\\r\\n\\r\\n      <div fxLayout=\\\"column\\\" [class.color__accent]=\\\"investmentReturn >= investmentAmount\\\" \\r\\n          [class.color__red]=\\\"investmentReturn < investmentAmount\\\">\\r\\n        \\r\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n          <span>ROI: <strong>{{ investmentReturn | currency : 'USD' : 'code' : '1.2-2' }}</strong> ({{investmentReturn / investmentAmount | percent : '1.1-2'}})</span>\\r\\n          <info-tooltip text=\\\"Return on investment (Market value)\\\" position=\\\"right\\\"></info-tooltip>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n          <span>Net ROI: <strong>{{ investmentReturn - investmentAmount - loanAmount | currency : 'USD' : 'code' : '1.2-2' }}</strong></span>\\r\\n          <info-tooltip text=\\\"Return on investment - Amount invested - Loan amount\\\" position=\\\"right\\\"></info-tooltip>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- Team -->\\r\\n    <mat-expansion-panel *ngIf=\\\"team\\\" class=\\\"team-panel\\\">\\r\\n      <mat-expansion-panel-header>\\r\\n        <mat-panel-title>\\r\\n          {{team.name}}\\r\\n        </mat-panel-title>\\r\\n        <mat-panel-description>\\r\\n          \\r\\n        </mat-panel-description>\\r\\n      </mat-expansion-panel-header>\\r\\n      \\r\\n      <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"team-panel__content\\\">\\r\\n\\r\\n        <section class=\\\"members\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n          <div *ngFor=\\\"let portion of investmentDistribution\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" class=\\\"member\\\">\\r\\n            <img class=\\\"member__avatar\\\" [src]=\\\"portion.member.avatar\\\"/>\\r\\n            <div fxFlex class=\\\"member__info\\\" fxLayout=\\\"column\\\">\\r\\n              <p class=\\\"member__name\\\">{{portion.member.name}}</p>\\r\\n              <!-- <p class=\\\"member__email\\\">{{member.email}}</p> -->\\r\\n              <div class=\\\"member__money\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"space-between end\\\">\\r\\n                <p>{{ portion.percentage }}%</p>\\r\\n                <p>{{ portion.money | currency : 'USD' : 'code' : '1.2-2' }}</p>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </section>\\r\\n      </div>\\r\\n      \\r\\n    </mat-expansion-panel>\\r\\n    <!-- EOF Team -->\\r\\n\\r\\n    <section class=\\\"card__actions\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end none\\\" fxLayoutGap=\\\"10px\\\">\\r\\n      <button *ngIf=\\\"!actionRunning\\\" mat-mini-fab routerLink=\\\"/investments/property/edit/{{investment.id}}\\\" color=\\\"primary\\\" (click)=\\\"actionRunning = true\\\">\\r\\n        <mat-icon aria-label=\\\"Edit Investment\\\">edit</mat-icon>\\r\\n      </button>\\r\\n\\r\\n      <button *ngIf=\\\"!actionRunning\\\" mat-mini-fab color=\\\"warn\\\" (click)=\\\"openDeleteDialog()\\\">\\r\\n        <mat-icon aria-label=\\\"Delete investment\\\">delete</mat-icon>\\r\\n      </button>\\r\\n\\r\\n      <mat-progress-spinner *ngIf=\\\"actionRunning\\\"\\r\\n        class=\\\"progress-spinner progress-spinner--action\\\"\\r\\n        color=\\\"warn\\\"\\r\\n        [diameter]=\\\"40\\\" [strokeWidth]=\\\"7\\\"\\r\\n        mode=\\\"indeterminate\\\">\\r\\n      </mat-progress-spinner>\\r\\n    </section>\\r\\n  </mat-card-content>\\r\\n</mat-card>\"","module.exports = \".investment__card {\\n  text-align: left; }\\n  .investment__card mat-card-header {\\n    cursor: pointer; }\\n  .investment__card mat-card-header .header-image img {\\n      width: 40px; }\\n  .investment__card .card__content .team-panel {\\n    cursor: default;\\n    margin-top: 10px; }\\n  .investment__card .card__content .team-panel mat-panel-title {\\n      font-size: 18px; }\\n  .investment__card .card__content .team-panel .team-panel__content {\\n      text-align: left; }\\n  .investment__card .card__content .team-panel .team-panel__content .members .member .member__avatar {\\n        border-radius: 50%;\\n        width: 40px;\\n        height: 40px;\\n        padding: 0 10px 0 0; }\\n  .investment__card .card__content .team-panel .team-panel__content .members .member .member__info .member__email {\\n        font-size: 11px; }\\n  .investment__card .card__content .card__actions {\\n    margin: 10px 0 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9pbnZlc3RtZW50cy9jb21wb25lbnRzL3Byb3BlcnR5LWludmVzdG1lbnQvQzpcXHczXFxhdG9taUNvY29udXRcXGNsaWVudC9zcmNcXGFwcFxcbW9kdWxlc1xcaW52ZXN0bWVudHNcXGNvbXBvbmVudHNcXHByb3BlcnR5LWludmVzdG1lbnRcXHByb3BlcnR5LWludmVzdG1lbnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBZ0IsRUFrRGpCO0VBbkREO0lBSUksZ0JBQWUsRUFRaEI7RUFaSDtNQVNRLFlBQVksRUFDYjtFQVZQO0lBaUJNLGdCQUFlO0lBQ2YsaUJBQWdCLEVBMkJqQjtFQTdDTDtNQXFCUSxnQkFBZSxFQUNoQjtFQXRCUDtNQXlCUSxpQkFBZ0IsRUFrQmpCO0VBM0NQO1FBOEJZLG1CQUFrQjtRQUNsQixZQUFXO1FBQ1gsYUFBWTtRQUNaLG9CQUFtQixFQUNwQjtFQWxDWDtRQXVDYyxnQkFBZSxFQUNoQjtFQXhDYjtJQWdETSxpQkFBZ0IsRUFDakIiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2ludmVzdG1lbnRzL2NvbXBvbmVudHMvcHJvcGVydHktaW52ZXN0bWVudC9wcm9wZXJ0eS1pbnZlc3RtZW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmludmVzdG1lbnRfX2NhcmQge1xyXG4gIHRleHQtYWxpZ246IGxlZnQ7XHJcblxyXG4gIG1hdC1jYXJkLWhlYWRlciB7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG4gICAgLmhlYWRlci1pbWFnZSB7XHJcbiAgICBcclxuICAgICAgaW1nIHtcclxuICAgICAgICB3aWR0aCA6IDQwcHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5jYXJkX19jb250ZW50IHtcclxuXHJcbiAgICAudGVhbS1wYW5lbCB7XHJcbiAgICAgIGN1cnNvcjogZGVmYXVsdDtcclxuICAgICAgbWFyZ2luLXRvcDogMTBweDtcclxuICBcclxuICAgICAgbWF0LXBhbmVsLXRpdGxlIHtcclxuICAgICAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICAgIH1cclxuICBcclxuICAgICAgLnRlYW0tcGFuZWxfX2NvbnRlbnQge1xyXG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLm1lbWJlcnMgLm1lbWJlciB7XHJcbiAgICAgICAgICBcclxuICAgICAgICAgIC5tZW1iZXJfX2F2YXRhciB7XHJcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgICAgICAgICAgd2lkdGg6IDQwcHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogNDBweDtcclxuICAgICAgICAgICAgcGFkZGluZzogMCAxMHB4IDAgMDtcclxuICAgICAgICAgIH1cclxuICBcclxuICAgICAgICAgIC5tZW1iZXJfX2luZm8ge1xyXG4gIFxyXG4gICAgICAgICAgICAubWVtYmVyX19lbWFpbCB7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAxMXB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIFxyXG4gICAgfVxyXG5cclxuICAgIC5jYXJkX19hY3Rpb25zIHtcclxuICAgICAgbWFyZ2luOiAxMHB4IDAgMDsgXHJcbiAgICB9XHJcbiAgfVxyXG59Il19 */\"","import { Component, OnInit, Input, Output, EventEmitter, OnDestroy } from '@angular/core';\r\nimport { PropertyInvestment } from '../../models/PropertyInvestment';\r\nimport { Team } from '../../../teams/models/team';\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\nimport { combineLatest, switchMap } from 'rxjs/operators';\r\nimport { User } from '../../../users/models/user';\r\nimport { CurrencyExchangeService } from '../../currency-exchange.service';\r\nimport { AppService } from '../../../../app.service';\r\nimport { UsersService } from '../../../users/users.service';\r\nimport { InvestmentsService } from '../../investments.service';\r\nimport { MatDialog } from '@angular/material';\r\nimport { Router } from '@angular/router';\r\nimport { YesNoDialogComponent } from '../../../shared/components/yes-no-dialog/yes-no-dialog.component';\r\nimport { House } from '../../../properties/models/house';\r\nimport { UtilService } from '../../../../util.service';\r\n\r\n@Component({\r\n  selector: 'property-investment',\r\n  templateUrl: './property-investment.component.html',\r\n  styleUrls: ['./property-investment.component.scss']\r\n})\r\nexport class PropertyInvestmentComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() investment: PropertyInvestment;\r\n  @Input()\r\n  set teams(teams: Team[]) {\r\n    this.teams$.next(teams);\r\n  }\r\n  get teams(): Team[] {\r\n    return this.teams$.getValue();\r\n  }\r\n  @Output() totalReturns: EventEmitter<any> = new EventEmitter();\r\n  @Output() deletedInvestment: EventEmitter<any> = new EventEmitter();\r\n  private teams$ = new BehaviorSubject<Team[]>([]);\r\n  investmentAmount = 0;\r\n  buyingPrice = 0;\r\n  investmentReturn = 0;\r\n  investmentValueWhenBought = 0;\r\n  currentPrice = 0;\r\n  loanAmount = 0;\r\n  investmentTitle: string = null;\r\n  actionRunning = false;\r\n  user: User = null;\r\n  team: Team = null; // if the investment has a tema this will be populated with the full info of the team\r\n  investmentDistribution: any[] = [];\r\n  subscription: Subscription = new Subscription();\r\n\r\n\r\n  constructor(private currencyExchangeService: CurrencyExchangeService, private appService: AppService, private usersService: UsersService, private investmentsService: InvestmentsService, \r\n    public dialog: MatDialog, private router: Router, private utilService: UtilService) {}\r\n\r\n  ngOnInit(): void {\r\n    const methodTrace = `${this.constructor.name} > ngOnInit() > `; // for debugging\r\n    \r\n    if (this.investment.property instanceof House) {\r\n      this.investmentTitle = this.utilService.capitalizeFirstLetter((<House>this.investment.property).buildingType);\r\n    }\r\n\r\n    // get the team of the investmetn if exists\r\n    let newSubscription = null;\r\n    const currencyRates$ = this.currencyExchangeService.getCurrencyRates$([this.utilService.formatDate(this.investment.buyingDate)]); // get currency rates observable source\r\n    const currencyRatesAndUser$ = this.usersService.user$.pipe(\r\n      combineLatest(currencyRates$, (user, currencyRates) => { \r\n        this.user = user;\r\n        return { user, currencyRates }; \r\n      })\r\n    ); // (currency rates and user) source\r\n    \r\n    newSubscription = currencyRatesAndUser$.pipe(switchMap(\r\n      (data) => {\r\n        // market value should be always up to date so no rate conversion is required\r\n        this.currentPrice = this.currencyExchangeService.getUsdValueOf(this.investment.property.marketValue, this.investment.property.marketValueUnit);\r\n        // the investment amount was paid on the date of the investment so we need to convert using that day rates\r\n        this.investmentAmount = this.investment.investmentAmount / (data.currencyRates[this.utilService.formatDate(this.investment.buyingDate)][`USD${this.investment.investmentAmountUnit}`] || 1);\r\n        // the loan amount was requested on the date of the investment so we need to convert using that day rates\r\n        this.loanAmount = this.investment.loanAmount / (data.currencyRates[this.utilService.formatDate(this.investment.buyingDate)][`USD${this.investment.loanAmountUnit}`] || 1);\r\n        // the buying price (of the property) was requested on the date of the investment so we need to convert using that day rates\r\n        this.buyingPrice = this.investment.buyingPrice / (data.currencyRates[this.utilService.formatDate(this.investment.buyingDate)][`USD${this.investment.buyingPriceUnit}`] || 1);\r\n        this.investmentReturn = this.currentPrice;\r\n\r\n        return this.teams$;\r\n      }\r\n    )).subscribe((teams: Team[]) => {\r\n      this.setInvestmentTeamData(teams);\r\n    },\r\n    (error: any) => {\r\n      this.appService.consoleLog('error', `${methodTrace} There was an error trying to generate investment data > `, error);\r\n      this.appService.showResults(`There was an error trying to generate investment data, please try again in a few minutes.`, 'error');\r\n    });\r\n\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    const methodTrace = `${this.constructor.name} > ngOnDestroy() > `; // for debugging\r\n\r\n    // this.appService.consoleLog('info', `${methodTrace} Component destroyed.`);\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Populates team data as well as the distribution on the investment between team members when the investment is asigned to a team\r\n   * \r\n   * @param {Team[]} teams . The teams of the current user\r\n   */\r\n  setInvestmentTeamData(teams: Team[]) {\r\n    this.team = this.investment.team ? teams.filter(team => team.slug === this.investment.team.slug)[0] : null; // look for the team of the investment\r\n    \r\n    // set totals to emit to parent component. If no team assigned then the total of the investment is the same as my portion\r\n    const totals = {\r\n      investmentId : this.investment.id,\r\n      investmentAmount : this.investmentAmount,\r\n      investmentReturn : this.investmentReturn,\r\n      myInvestmentAmount : this.investmentAmount,\r\n      myInvestmentReturn : this.investmentReturn\r\n    };\r\n\r\n    if (this.team) {\r\n      // if team is present then get my portion of the investment\r\n      for (const member of this.team.members) {\r\n        const percentage = (this.investment.investmentDistribution.filter(portion => portion.email === member.email)[0]).percentage;\r\n        this.investmentDistribution.push({\r\n          member,\r\n          percentage,\r\n          money : this.investmentReturn * percentage / 100\r\n        });\r\n\r\n        if (this.user && this.user.email === member.email) {\r\n          totals.myInvestmentAmount = this.investmentAmount * percentage / 100;\r\n          totals.myInvestmentReturn = this.investmentReturn * percentage / 100;  \r\n        }\r\n      }\r\n    }\r\n\r\n    this.totalReturns.emit(totals);\r\n  }\r\n\r\n  openDeleteDialog() {\r\n    const methodTrace = `${this.constructor.name} > openDeleteDialog() > `; // for debugging\r\n    \r\n    if (!this.investment.id) {\r\n      this.appService.consoleLog('error', `${methodTrace} Investment ID is required to delete.`);\r\n      return false;\r\n    }\r\n\r\n    this.actionRunning = true;\r\n    const yesNoDialogRef = this.dialog.open(YesNoDialogComponent, {\r\n      width: '250px',\r\n      data: { \r\n        title : 'Delete investment',\r\n        message : `Are you sure you want to delete this investment forever?`\r\n      }\r\n    });\r\n\r\n    const newSubscription = yesNoDialogRef.afterClosed().subscribe(result => {\r\n      if (result === 'yes') {\r\n        this.delete();\r\n      } else {\r\n        this.actionRunning = false;\r\n      }\r\n    });\r\n    this.subscription.add(newSubscription);\r\n\r\n    return false;\r\n  }\r\n\r\n  delete() {\r\n    const methodTrace = `${this.constructor.name} > delete() > `; // for debugging\r\n    if (this.user) {\r\n      this.actionRunning = true;\r\n      \r\n      const newSubscription = this.investmentsService.delete$(this.investment.id, this.user.email).subscribe(\r\n        (data: any) => {\r\n          if (data && data.removed > 0) {\r\n            this.appService.showResults(`Investment successfully removed!`, 'success');\r\n            this.deletedInvestment.emit({ investment : this.investment, investmentReturn : this.investmentReturn, investmentAmount : this.investmentAmount });\r\n          } else {\r\n            this.appService.showResults(`Investment could not be removed, please try again.`, 'error');\r\n            this.actionRunning = false;\r\n          }\r\n        },\r\n        (error: any) => {\r\n          this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n          if (error.codeno === 400) {\r\n            this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n          } else {\r\n            this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n          }\r\n  \r\n          this.actionRunning = false;\r\n        }\r\n      );\r\n\r\n      this.subscription.add(newSubscription);\r\n    } else {\r\n      this.appService.showResults(`You are not logged into AtomiCoconut, you must login first.`, 'error');\r\n      this.router.navigate(['/users/login']);\r\n    }\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { map, catchError, retry, switchMap } from 'rxjs/operators';\r\nimport { AppService } from '../../app.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Response } from '../../models/Response';\r\nimport { environment } from '../../../environments/environment';\r\nimport { UtilService } from '../../util.service';\r\n\r\n@Injectable()\r\nexport class CurrencyExchangeService {\r\n\r\n  private cryptoExchangeServerUrl = 'https://coincap.io/page/';\r\n  cryptoRates: any = {};\r\n  currencyRates: any = {};\r\n  private serverHost: string = environment.apiHost + '/api/currencyRates';\r\n\r\n  constructor(private http: HttpClient, private appService: AppService, private utilService: UtilService) { }\r\n\r\n  getCurrencyRates$(dates: string[] = [], base: string = 'USD'): Observable<any> {\r\n    const methodTrace = `${this.constructor.name} > getCurrencyRates$() > `; // for debugging\r\n\r\n    dates.push(this.utilService.formatToday('YYYY-MM-DD')); // adds today to the array\r\n    \r\n    // check if all the required dates are already cached in this service\r\n    let found = true;\r\n    for (const date of dates) {\r\n      if (!this.currencyRates[date]) {\r\n        found = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (found) {\r\n      // all dates cached then return this object\r\n      return of(this.currencyRates);\r\n    }\r\n\r\n    // if here then we need to retrieve some dates from the server\r\n    const params = new HttpParams().set('dates', `${dates}`);\r\n\r\n    return this.http.get<Response>(`${this.serverHost}/getByDates/${base}`, { params }).pipe(\r\n      map((res: Response) => {\r\n        const data = this.appService.extractData(res);\r\n\r\n        if (data) {\r\n          // merge results\r\n          Object.assign(this.currencyRates, data);\r\n        } else {\r\n          this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`);\r\n        }\r\n\r\n        return this.currencyRates;\r\n      }),\r\n      catchError(this.appService.handleError),\r\n      retry(3)\r\n    );\r\n  }\r\n\r\n\r\n  getCryptoRates$(crypto: string = 'BTC'): Observable<any> {\r\n    const methodTrace = `${this.constructor.name} > getCryptoRates$() > `; // for debugging\r\n\r\n    if (this.cryptoRates[crypto.toUpperCase()]) {\r\n      return of(this.cryptoRates[crypto.toUpperCase()]);\r\n    }\r\n    \r\n    return this.http.get<Response>(`${this.cryptoExchangeServerUrl}${crypto.toUpperCase()}`).pipe(\r\n      map((res: Response) => this.extractCryptoExchangeData(crypto, res)),\r\n      switchMap((rates: Object) => {\r\n        if (rates) {\r\n          this.cryptoRates[crypto.toUpperCase()] = rates;\r\n        } else {\r\n          this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`);\r\n        }\r\n        \r\n        return of(this.cryptoRates[crypto.toUpperCase()]);\r\n      }),\r\n      catchError(this.appService.handleError) \r\n    );\r\n  }\r\n\r\n  private extractCryptoExchangeData(crypto: string, res: Object): any {\r\n    if (res['id'] === crypto.toUpperCase()) {\r\n      return res;\r\n    } else {\r\n      throw res;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the value on USD at today's rate of the amount provided in a foreign unit\r\n   * @param amount \r\n   * @param unit \r\n   */\r\n  getUsdValueOf(amount: number, unit: string): number {\r\n    if (unit !== 'USD') {\r\n      const today = this.utilService.formatToday();\r\n  \r\n      if (this.currencyRates[today]) {\r\n        return amount / this.currencyRates[today][`USD${unit}`];\r\n      } else {\r\n        this.appService.showResults('Currency rates data was not loaded yet. Figures are shown as USD', 'error');\r\n      }\r\n    } \r\n\r\n    return amount;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { InvestmentsDashboardComponent } from './components/investments-dashboard/investments-dashboard.component';\r\nimport { InvestmentsEditComponent } from './components/investments-edit/investments-edit.component';\r\nimport { AuthResolver } from '../../auth-resolver.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path : 'investments',\r\n    children : [\r\n      { \r\n        path : ':type/create', \r\n        component : InvestmentsEditComponent,\r\n        resolve : {\r\n          authUser : AuthResolver\r\n        } \r\n      },\r\n      { \r\n        path : ':type/create/:id', // this happens just with properties\r\n        component : InvestmentsEditComponent,\r\n        resolve : {\r\n          authUser : AuthResolver\r\n        } \r\n      },\r\n      { \r\n        path : ':type/edit/:id', \r\n        component : InvestmentsEditComponent,\r\n        resolve : {\r\n          authUser : AuthResolver\r\n        } \r\n      },\r\n      { \r\n        path : '', \r\n        pathMatch : 'full',\r\n        component : InvestmentsDashboardComponent,\r\n        resolve : {\r\n          authUser : AuthResolver\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class InvestmentsRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { InvestmentsRoutingModule } from './investments-routing.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport { CustomMaterialDesignModule } from '../../modules/shared/custom-material-design.module';\r\nimport { SharedModule } from '../../modules/shared/shared.module';\r\nimport { InvestmentsDashboardComponent } from './components/investments-dashboard/investments-dashboard.component';\r\nimport { CurrencyInvestmentComponent } from './components/currency-investment/currency-investment.component';\r\nimport { InvestmentSelectorDialogComponent } from './components/investment-selector-dialog/investment-selector-dialog.component';\r\nimport { InvestmentsEditComponent } from './components/investments-edit/investments-edit.component';\r\nimport { CurrencyInvestmentFormComponent } from './components/currency-investment-form/currency-investment-form.component';\r\nimport { InvestmentsService } from './investments.service';\r\nimport { PropertyInvestmentFormComponent } from './components/property-investment-form/property-investment-form.component';\r\nimport { PropertyInvestmentComponent } from './components/property-investment/property-investment.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    InvestmentsRoutingModule,\r\n    FormsModule,\r\n    FlexLayoutModule,\r\n    CustomMaterialDesignModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    CurrencyInvestmentComponent,\r\n    InvestmentsDashboardComponent,\r\n    InvestmentSelectorDialogComponent,\r\n    InvestmentsEditComponent,\r\n    CurrencyInvestmentFormComponent,\r\n    PropertyInvestmentFormComponent,\r\n    PropertyInvestmentComponent\r\n  ],\r\n  entryComponents: [\r\n    InvestmentSelectorDialogComponent // added as material doc suggest to allow AOT on this on the fly created class\r\n  ],\r\n  providers: [ InvestmentsService ]\r\n})\r\nexport class InvestmentsModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\nimport { AppService } from '../../app.service';\r\nimport { User } from '../users/models/user';\r\nimport { Investment } from './models/investment';\r\nimport { CurrencyInvestment } from './models/currencyInvestment';\r\nimport { PropertyInvestment } from './models/PropertyInvestment';\r\nimport { Team } from '../teams/models/team';\r\nimport { Response } from '../../models/response';\r\nimport { of, from } from 'rxjs';\r\nimport { map, catchError, switchMap } from 'rxjs/operators';\r\nimport { INVESTMENTS_TYPES, PROPERTY_TYPES } from '../../constants';\r\nimport { House } from '../properties/models/house';\r\nimport { Address } from '../properties/models/address';\r\n\r\n\r\n@Injectable()\r\nexport class InvestmentsService {\r\n\r\n  private serverHost: string = environment.apiHost + '/api/investments';\r\n  private headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n\r\n  constructor(private http: HttpClient, private appService: AppService) {}\r\n\r\n  /**\r\n   * Server call to Create a new investment in the system \r\n   * @param postData\r\n   * \r\n   * @return { Observable<any> } \r\n   */\r\n  create$(postData: any = {}): Observable<any> {\r\n    const methodTrace = `${this.constructor.name} > create$() > `; // for debugging\r\n\r\n    return this.http.post<Response>(`${this.serverHost}/create`, postData, { headers : this.headers })\r\n        .pipe(\r\n          map(this.appService.extractData),\r\n          catchError(this.appService.handleError)\r\n        );\r\n  } \r\n  \r\n  /**\r\n   * Server call to Update an investment in the system \r\n   * @param postData \r\n   * \r\n   * @return { Observable<any> }\r\n   */\r\n  update$(postData: any = {}): Observable<any> {\r\n    const methodTrace = `${this.constructor.name} > update$() > `; // for debugging\r\n\r\n    return this.http.post<Response>(`${this.serverHost}/update`, postData, { headers : this.headers })\r\n        .pipe(\r\n          map(this.appService.extractData),\r\n          catchError(this.appService.handleError)\r\n        );\r\n  } \r\n\r\n  /**\r\n   * Server call to Get an investment from the server based on its ID\r\n   * @param {string} id . The investment id\r\n   * \r\n   * @return { Observable<Investment> }\r\n   */\r\n  getInvestmentById$(email: string, id: string): Observable<Investment> {\r\n    const methodTrace = `${this.constructor.name} > getInvestmentById$() > `; // for debugging\r\n\r\n    if (!id || !email) {\r\n      this.appService.consoleLog('error', `${methodTrace} Required parameters missing.`);\r\n      return of(null);\r\n    }\r\n\r\n    const params = new HttpParams()\r\n        .set('id', id)\r\n        .set('email', email);\r\n\r\n    const investment$ = this.http.get<Response>(`${this.serverHost}/getbyId`, { params })\r\n        .pipe(\r\n          map(this.appService.extractData),\r\n          catchError(this.appService.handleError)\r\n        );\r\n\r\n    return investment$.pipe(switchMap((investment) => {\r\n      let result: Investment = null;\r\n      if (investment && investment._id) {\r\n        const createdBy = new User(investment.createdBy.name, investment.createdBy.email, investment.createdBy.gravatar);\r\n        \r\n        let team: Team = null;\r\n        if (investment.team) {\r\n          // fill team members\r\n          let admin: User = null;\r\n          const members: User[] = [];\r\n          for (const member of investment.team.members) {\r\n            const newMember = new User(member.name, member.email, member.gravatar);\r\n            members.push(newMember);\r\n            if (member.isAdmin) {\r\n              admin = newMember;\r\n            }\r\n          }\r\n          team = new Team(investment.team.name, investment.team.description, investment.team.slug, admin, members);\r\n        }\r\n        \r\n\r\n        if (investment.investmentType === INVESTMENTS_TYPES.CURRENCY || investment.investmentType === INVESTMENTS_TYPES.CRYPTO) {\r\n          result = new CurrencyInvestment(investment._id, investment.amount, investment.amountUnit, createdBy, team, \r\n              investment.investmentDistribution, investment.investmentData.amountUnit, investment.investmentData.amount, \r\n              investment.investmentData.buyingPrice, investment.investmentData.buyingPriceUnit, \r\n              investment.investmentData.buyingDate, investment.investmentType, investment.loanAmount, investment.loanAmountUnit);\r\n        } else if (investment.investmentType === INVESTMENTS_TYPES.PROPERTY) {\r\n          let property = null;\r\n          const propertyData = investment.investmentData.property;\r\n          let address = new Address();\r\n          if (propertyData.location) {\r\n            address = new Address(propertyData.location.address, propertyData.location.coordinates[1], propertyData.location.coordinates[0], propertyData.location.mapsPlaceId);\r\n          }\r\n\r\n          if (propertyData.propertyType === PROPERTY_TYPES.HOUSE) {\r\n            // we share the createdBy of the investment because we know is the same\r\n            property = new House(propertyData._id, propertyData.propertyType, address, createdBy, propertyData.landArea, propertyData.floorArea, propertyData.askingPrice, propertyData.askingPriceUnit,\r\n                propertyData.offerPrice, propertyData.offerPriceUnit, propertyData.walkAwayPrice, propertyData.walkAwayPriceUnit, propertyData.purchasePrice, propertyData.purchasePriceUnit,\r\n                propertyData.purchasePrice2, propertyData.purchasePrice2Unit, propertyData.purchasePrice3, propertyData.purchasePrice3Unit, propertyData.purchasePrice4, propertyData.purchasePrice4Unit,\r\n                propertyData.purchasePrice5, propertyData.purchasePrice5Unit, propertyData.dateListed, \r\n                propertyData.reasonForSelling, propertyData.marketValue, propertyData.marketValueUnit, propertyData.registeredValue, propertyData.registeredValueUnit, propertyData.rates, propertyData.ratesUnit,\r\n                propertyData.insurance, propertyData.insuranceUnit, propertyData.renovationCost, propertyData.renovationCostUnit, propertyData.maintenanceCost, propertyData.maintenanceCostUnit, \r\n                propertyData.description, propertyData.otherCost, propertyData.otherCostUnit, propertyData.notes, propertyData.capitalGrowth, propertyData.bedrooms, propertyData.bathrooms, propertyData.parkingSpaces,\r\n                propertyData.fenced, propertyData.rented, propertyData.rentPrice, propertyData.rentPriceUnit, propertyData.rentPricePeriod, propertyData.rentAppraisalDone, propertyData.vacancy, propertyData.bodyCorporate,\r\n                propertyData.bodyCorporateUnit, propertyData.utilitiesCost, propertyData.utilitiesCostUnit, propertyData.agent, propertyData.managed, propertyData.managerRate, propertyData.buildingType, propertyData.titleType);\r\n          }  \r\n\r\n          result = new PropertyInvestment(investment._id, investment.amount, investment.amountUnit, createdBy, team, investment.investmentDistribution, \r\n            property, investment.investmentData.buyingPrice, investment.investmentData.buyingPriceUnit, investment.investmentData.buyingDate, \r\n            investment.investmentType, investment.loanAmount, investment.loanAmountUnit);\r\n        }\r\n      } else {\r\n        this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`);\r\n      }\r\n\r\n      return of(result);\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Server call to Get all the Investments for the current user from the server\r\n   * @param {string} email . The user email\r\n   * \r\n   * @return { Observable<Investment[]> } \r\n   */\r\n  getInvestments$(email: string): Observable<Investment[]> {\r\n    const methodTrace = `${this.constructor.name} > getInvestments$() > `; // for debugging\r\n\r\n    if (!email) {\r\n      this.appService.consoleLog('error', `${methodTrace} Required parameters missing.`);\r\n      return of([]);\r\n    }\r\n\r\n    const params = new HttpParams().set('email', email);\r\n\r\n    const investmentsData$ = this.http.get<Response>(`${this.serverHost}/getAll`, { params })\r\n        .pipe(\r\n          map(this.appService.extractData),\r\n          catchError(this.appService.handleError)\r\n        );\r\n    \r\n    return investmentsData$.pipe(switchMap((investmentsData) => {\r\n      const investments: Investment[] = [];\r\n\r\n      if (investmentsData && investmentsData instanceof Array) {\r\n        for (const item of investmentsData) {\r\n          const createdBy = new User(item.createdBy.name, item.createdBy.email, item.createdBy.gravatar);\r\n          const team = item.team ? new Team(item.team.name, item.team.description, item.team.slug) : null;\r\n\r\n          if (item.investmentType === INVESTMENTS_TYPES.CURRENCY || item.investmentType === INVESTMENTS_TYPES.CRYPTO) {\r\n            investments.push(new CurrencyInvestment(item._id, item.amount, item.amountUnit, createdBy, team, item.investmentDistribution, item.investmentData.amountUnit, \r\n                item.investmentData.amount, item.investmentData.buyingPrice, item.investmentData.buyingPriceUnit, item.investmentData.buyingDate, item.investmentType,\r\n                item.loanAmount, item.loanAmountUnit));\r\n          } else if (item.investmentType === INVESTMENTS_TYPES.PROPERTY) {\r\n            let property = null;\r\n            const propertyData = item.investmentData.property;\r\n            let address = new Address();\r\n            if (propertyData.location) {\r\n              address = new Address(propertyData.location.address, propertyData.location.coordinates[1], propertyData.location.coordinates[0], propertyData.location.mapsPlaceId);\r\n            }\r\n            \r\n            if (propertyData.propertyType === PROPERTY_TYPES.HOUSE) {\r\n              // we share the createdBy of the investment because we know is the same\r\n              property = new House(propertyData._id, propertyData.propertyType, address, createdBy, propertyData.landArea, propertyData.floorArea, propertyData.askingPrice, propertyData.askingPriceUnit,\r\n                  propertyData.offerPrice, propertyData.offerPriceUnit, propertyData.walkAwayPrice, propertyData.walkAwayPriceUnit, propertyData.purchasePrice, propertyData.purchasePriceUnit,\r\n                  propertyData.purchasePrice2, propertyData.purchasePrice2Unit, propertyData.purchasePrice3, propertyData.purchasePrice3Unit, propertyData.purchasePrice4, propertyData.purchasePrice4Unit,\r\n                  propertyData.purchasePrice5, propertyData.purchasePrice5Unit, propertyData.dateListed, \r\n                  propertyData.reasonForSelling, propertyData.marketValue, propertyData.marketValueUnit, propertyData.registeredValue, propertyData.registeredValueUnit, propertyData.rates, propertyData.ratesUnit,\r\n                  propertyData.insurance, propertyData.insuranceUnit, propertyData.renovationCost, propertyData.renovationCostUnit, propertyData.maintenanceCost, propertyData.maintenanceCostUnit, \r\n                  propertyData.description, propertyData.otherCost, propertyData.otherCostUnit, propertyData.notes, propertyData.capitalGrowth, propertyData.bedrooms, propertyData.bathrooms, propertyData.parkingSpaces,\r\n                  propertyData.fenced, propertyData.rented, propertyData.rentPrice, propertyData.rentPriceUnit, propertyData.rentPricePeriod, propertyData.rentAppraisalDone, propertyData.vacancy, propertyData.bodyCorporate,\r\n                  propertyData.bodyCorporateUnit, propertyData.utilitiesCost, propertyData.utilitiesCostUnit, propertyData.agent, propertyData.managed, propertyData.managerRate, propertyData.buildingType, propertyData.titleType);\r\n            }  \r\n\r\n            investments.push(new PropertyInvestment(item._id, item.amount, item.amountUnit, createdBy, team, item.investmentDistribution, \r\n                property, item.investmentData.buyingPrice, item.investmentData.buyingPriceUnit, item.investmentData.buyingDate, \r\n                item.investmentType, item.loanAmount, item.loanAmountUnit));\r\n          }\r\n        }\r\n      } else {\r\n        this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`);\r\n      }\r\n\r\n      return of(investments);\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Server call to delete an investment from the server\r\n   * @param {string} id . The investment id\r\n   * @param {string} email . The current user email.\r\n   * \r\n   * @return { Observable<any> }\r\n   */\r\n  delete$(id: string, email: string): Observable<any> {\r\n    const methodTrace = `${this.constructor.name} > delete$() > `; // for debugging\r\n\r\n    if (!id || !email) {\r\n      this.appService.consoleLog('error', `${methodTrace} Required parameters missing.`);\r\n      return Observable.throw(null);\r\n    }\r\n\r\n    const params = new HttpParams().set('email', email);\r\n\r\n    return this.http.delete<Response>(`${this.serverHost}/delete/${id}`, { headers : this.headers, params } )\r\n        .pipe(\r\n          map(this.appService.extractData),\r\n          catchError(this.appService.handleError)\r\n        );\r\n  }\r\n}\r\n","import { Investment } from \"./investment\";\r\nimport { Team } from \"../../teams/models/team\";\r\nimport { User } from \"../../users/models/user\";\r\nimport { Property } from \"../../properties/models/property\";\r\n\r\nexport class PropertyInvestment extends Investment {\r\n  property : Property;\r\n  buyingPrice : number;\r\n  buyingDate : Date;\r\n  buyingPriceUnit : string;\r\n\r\n  constructor (id : string, investmentAmount : number, investmentAmountUnit : string, createdBy : User, team : Team = null, investmentDistribution : any[] = [],\r\n      property : Property, buyingPrice : number, buyingPriceUnit : string, buyingDate : Date, type : 'property' = 'property', loanAmount : number = 0,\r\n      loanAmountUnit : string) {\r\n    \r\n    super(id, type, investmentAmount, investmentAmountUnit, createdBy, team, investmentDistribution, loanAmount, loanAmountUnit);\r\n    this.property = property;\r\n    this.buyingDate = buyingDate;\r\n    this.buyingPrice = buyingPrice;\r\n    this.buyingPriceUnit = buyingPriceUnit;\r\n  }\r\n}","import { Investment } from './investment';\r\nimport { Team } from '../../teams/models/team';\r\nimport { User } from '../../users/models/user';\r\n\r\nexport class CurrencyInvestment extends Investment {\r\n  unit: string; // crypto unit\r\n  amount: number;\r\n  buyingPrice: number;\r\n  buyingDate: Date;\r\n  buyingPriceUnit: string;\r\n\r\n  constructor (id: string, investmentAmount: number, investmentAmountUnit: string, createdBy: User, team: Team = null, investmentDistribution: any[] = [],\r\n      unit: string, amount: number, buyingPrice: number, buyingPriceUnit: string, buyingDate: Date, type: 'crypto' | 'currency' = 'currency', \r\n      loanAmount: number = 0, loanAmountUnit: string) {\r\n    \r\n    super(id, type, investmentAmount, investmentAmountUnit, createdBy, team, investmentDistribution, loanAmount, loanAmountUnit);\r\n    this.unit = unit;\r\n    this.amount = amount;\r\n    this.buyingDate = buyingDate;\r\n    this.buyingPrice = buyingPrice;\r\n    this.buyingPriceUnit = buyingPriceUnit;\r\n  }\r\n}\r\n","import { User } from '../../users/models/user';\r\nimport { Team } from '../../teams/models/team';\r\n\r\nexport class Investment {\r\n\r\n  id: string;\r\n  type: 'crypto' | 'currency' | 'property';\r\n  createdBy: User;\r\n  team: Team;\r\n  investmentDistribution: any[];\r\n  investmentAmount: number; // the amount of money invested. Excluding the amount borrowed (loanAmount)\r\n  investmentAmountUnit: string; \r\n  loanAmount: number; // the amount of money borrowed from the lender\r\n  loanAmountUnit: string;\r\n\r\n  constructor(id: string, type: 'crypto' | 'currency' | 'property', investmentAmount: number, investmentAmountUnit: string, createdBy: User, \r\n      team: Team = null, investmentDistribution: any[] = [], loanAmount: number = 0, loanAmountUnit: string) {\r\n    this.investmentAmount = investmentAmount;\r\n    this.investmentAmountUnit = investmentAmountUnit;\r\n    this.team = team;\r\n    this.investmentDistribution = investmentDistribution;\r\n    this.createdBy = createdBy;\r\n    this.id = id;\r\n    this.type = type;\r\n    this.loanAmount = loanAmount;\r\n    this.loanAmountUnit = loanAmountUnit;\r\n  }\r\n}\r\n","module.exports = \"<!-- <h2 mat-dialog-title></h2> -->\\r\\n<mat-dialog-content>\\r\\n  <section fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"dialog__house-figures-results\\\">\\r\\n    <mat-accordion>  \\r\\n      <mat-expansion-panel>\\r\\n        <mat-expansion-panel-header>\\r\\n          Additional values\\r\\n        </mat-expansion-panel-header>\\r\\n    \\r\\n        <!-- Missing required data from -->\\r\\n        <form class=\\\"form__container form__house-figures-results\\\" #houseFiguresResultsDialogForm=\\\"ngForm\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" >\\r\\n          <section fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields\\\">\\r\\n            <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields__row__container\\\">\\r\\n              <h3 class=\\\"title\\\">\\r\\n                <!-- <p class=\\\"header\\\">Figures extra info</p> -->\\r\\n                <p class=\\\"mat-caption\\\">This information it is not saved in the database, play with these values to evaluate a potencial investment</p>\\r\\n              </h3>\\r\\n\\r\\n              <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields__row\\\">\\r\\n                <!-- Loan coverage -->\\r\\n                <div fxFlex=\\\"none\\\" fxLayout=\\\"column\\\" class=\\\"form__field slider__field\\\">\\r\\n                  <label class=\\\"slider__label\\\">Loan coverage</label>\\r\\n                  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                    <mat-slider fxFlex id=\\\"loanCoverage\\\" name=\\\"loanCoverage\\\"\\r\\n                        color=\\\"accent\\\"\\r\\n                        [max]=\\\"100\\\"\\r\\n                        [min]=\\\"0\\\"\\r\\n                        [step]=\\\"1\\\"\\r\\n                        thumbLabel=\\\"true\\\"\\r\\n                        tickInterval=\\\"1\\\"\\r\\n                        [(ngModel)]=\\\"modelHouseFiguresResults.loanCoverage\\\"\\r\\n                        [value]=\\\"modelHouseFiguresResults.loanCoverage\\\"> \\r\\n                    </mat-slider>\\r\\n                    <span *ngIf=\\\"modelHouseFiguresResults.loanCoverage\\\">{{modelHouseFiguresResults.loanCoverage}}%</span>\\r\\n                  </div>\\r\\n                  <label class=\\\"mat-hint slider__label__hint\\\">Percentage of the purchase price covered by the loan.</label>\\r\\n                </div>\\r\\n\\r\\n                <!-- Loan term -->\\r\\n                <div fxFlex=\\\"none\\\" fxLayout=\\\"column\\\" class=\\\"form__field slider__field\\\">\\r\\n                  <label class=\\\"slider__label\\\">Term</label>\\r\\n                  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                    <mat-slider fxFlex id=\\\"loanTerm\\\" name=\\\"loanTerm\\\"\\r\\n                        color=\\\"accent\\\"\\r\\n                        [max]=\\\"30\\\"\\r\\n                        [min]=\\\"1\\\"\\r\\n                        [step]=\\\"1\\\"\\r\\n                        thumbLabel=\\\"true\\\"\\r\\n                        tickInterval=\\\"1\\\"\\r\\n                        [(ngModel)]=\\\"modelHouseFiguresResults.loanTerm\\\"\\r\\n                        [value]=\\\"modelHouseFiguresResults.loanTerm\\\"> \\r\\n                    </mat-slider>\\r\\n                    <span *ngIf=\\\"modelHouseFiguresResults.loanTerm\\\">{{modelHouseFiguresResults.loanTerm}} years</span>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <!-- Interest rates -->\\r\\n                <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n                  <input matInput type=\\\"number\\\" id=\\\"interestRates\\\" name=\\\"interestRates\\\" placeholder=\\\"Interest rates\\\" \\r\\n                      [(ngModel)]=\\\"modelHouseFiguresResults.interestRates\\\" \\r\\n                      numberValidator='{\\\"min\\\": 0, \\\"max\\\": 100}' \\r\\n                      [value]=\\\"modelHouseFiguresResults.interestRates\\\"\\r\\n                      #interestRates=\\\"ngModel\\\">\\r\\n\\r\\n                  <mat-icon matPrefix>timeline</mat-icon>\\r\\n                  <span matSuffix>%</span>\\r\\n                  <mat-hint align=\\\"start\\\">Average loan interest rates (as a percentage).</mat-hint>\\r\\n                  <mat-error *ngIf=\\\"interestRates.invalid && (interestRates.dirty || interestRates.touched) && interestRates.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n                  <mat-error *ngIf=\\\"interestRates.invalid && (interestRates.dirty || interestRates.touched) && interestRates.errors.numberValidatorMin\\\">Min value must be greater or equal than 0</mat-error>\\r\\n                  <mat-error *ngIf=\\\"interestRates.invalid && (interestRates.dirty || interestRates.touched) && interestRates.errors.numberValidatorMax\\\">Max value must be less or equal than 100</mat-error>\\r\\n                </mat-form-field>\\r\\n\\r\\n                <!-- Payment frecuency -->\\r\\n                <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n                  <mat-select id=\\\"paymentFrecuency\\\" name=\\\"paymentFrecuency\\\" placeholder=\\\"Frecuency\\\" \\r\\n                      [(ngModel)]=\\\"modelHouseFiguresResults.paymentFrecuency\\\" [value]=\\\"modelHouseFiguresResults.paymentFrecuency\\\">\\r\\n                    <mat-option value=\\\"12\\\">Monthly</mat-option>\\r\\n                    <mat-option value=\\\"26\\\">Fornightly</mat-option>\\r\\n                    <mat-option value=\\\"52\\\">Weekly</mat-option>\\r\\n                  </mat-select>\\r\\n                  \\r\\n                  <mat-hint align=\\\"start\\\">Payment frecuency</mat-hint>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n          </section>\\r\\n        </form>\\r\\n      </mat-expansion-panel>\\r\\n    </mat-accordion>\\r\\n\\r\\n    <house-figures-results\\r\\n        title=\\\"Property figures\\\"\\r\\n        subtitle=\\\"This figures asumes that all of the currency values in the form are in the same unit.\\\"\\r\\n        [purchasePrice]=\\\"model.purchasePrice || model.offerPrice || model.askingPrice || model.walkAwayPrice || 0\\\"\\r\\n        [capitalGrowth]=\\\"model.propertyTypeData.capitalGrowth || 0\\\"\\r\\n        [marketValue]=\\\"model.marketValue\\\"\\r\\n        [loanCoverage]=\\\"modelHouseFiguresResults.loanCoverage\\\"\\r\\n        [interestRates]=\\\"modelHouseFiguresResults.interestRates\\\"\\r\\n        [loanTerm]=\\\"modelHouseFiguresResults.loanTerm\\\"\\r\\n        [paymentFrecuency]=\\\"modelHouseFiguresResults.paymentFrecuency\\\"\\r\\n        [rentPrice]=\\\"model.propertyTypeData.rentPrice\\\"\\r\\n        [rentPaymentFrecuency]=\\\"model.propertyTypeData.rentPricePeriod\\\"\\r\\n        [vacancy]=\\\"model.propertyTypeData.vacancy\\\"\\r\\n        [renovationCost]=\\\"model.renovationCost\\\"\\r\\n        [maintenanceCost]=\\\"model.maintenanceCost\\\"\\r\\n        [bodyCorporate]=\\\"model.propertyTypeData.bodyCorporate\\\"\\r\\n        [houseRates]=\\\"model.propertyTypeData.rates\\\"\\r\\n        [utilities]=\\\"model.propertyTypeData.utilitiesCost\\\"\\r\\n        [insurance]=\\\"model.propertyTypeData.insurance\\\"\\r\\n        [otherCosts]=\\\"model.otherCost\\\"\\r\\n        [managed]=\\\"model.propertyTypeData.managed ? model.propertyTypeData.managerRate : 0\\\">\\r\\n    </house-figures-results>\\r\\n  </section>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"space-around center\\\">\\r\\n  <button mat-mini-fab color=\\\"warn\\\" mat-dialog-close>\\r\\n    <mat-icon aria-label=\\\"No\\\">clear</mat-icon>\\r\\n  </button>\\r\\n</mat-dialog-actions>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcHJvcGVydGllcy9jb21wb25lbnRzL2hvdXNlLWZpZ3VyZXMtZGlhbG9nL2hvdXNlLWZpZ3VyZXMtZGlhbG9nLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-house-figures-dialog',\r\n  templateUrl: './house-figures-dialog.component.html',\r\n  styleUrls: ['./house-figures-dialog.component.scss']\r\n})\r\nexport class HouseFiguresDialogComponent implements OnInit {\r\n\r\n  model: any = {};\r\n  modelHouseFiguresResults: any = {};\r\n\r\n  constructor(public dialogRef: MatDialogRef<HouseFiguresDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n    this.model = data.model;\r\n    this.modelHouseFiguresResults = data.modelHouseFiguresResults;\r\n  }\r\n\r\n  ngOnInit() { }\r\n}\r\n","module.exports = \"<form class=\\\"form__container form__edit-house\\\" #editHouseForm=\\\"ngForm\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n  <section fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields\\\">\\r\\n\\r\\n    <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n      <h3 class=\\\"title\\\">\\r\\n        <p class=\\\"header\\\">Features</p>\\r\\n      </h3>\\r\\n\\r\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n        <!-- Building type -->\\r\\n        <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n          <mat-select id=\\\"buildingType\\\" name=\\\"buildingType\\\" placeholder=\\\"Building type\\\" [value]=\\\"model.buildingType\\\" [(ngModel)]=\\\"model.buildingType\\\">\\r\\n            <mat-option value=\\\"house\\\">House</mat-option>\\r\\n            <mat-option value=\\\"apartment\\\">Apartment</mat-option>\\r\\n            <mat-option value=\\\"unit\\\">Unit</mat-option>\\r\\n          </mat-select>\\r\\n\\r\\n          <mat-icon matPrefix>home</mat-icon>\\r\\n        </mat-form-field>\\r\\n        \\r\\n        <!-- Title type -->\\r\\n        <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n          <mat-select id=\\\"titleType\\\" name=\\\"titleType\\\" placeholder=\\\"Title type\\\" [value]=\\\"model.titleType\\\" [(ngModel)]=\\\"model.titleType\\\">\\r\\n            <mat-option value=\\\"feeSimple\\\">Fee simple</mat-option>\\r\\n            <mat-option value=\\\"crossLease\\\">Cross lease</mat-option>\\r\\n            <mat-option value=\\\"leaseHold\\\">Lease hold</mat-option>\\r\\n          </mat-select>\\r\\n\\r\\n          <mat-icon matPrefix>description</mat-icon>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n        <!-- Land area -->\\r\\n        <mat-form-field fxFlex  class=\\\"form__field\\\">\\r\\n          <input matInput type=\\\"number\\\" id=\\\"landArea\\\" name=\\\"landArea\\\" placeholder=\\\"Land area\\\" \\r\\n              [(ngModel)]=\\\"model.landArea\\\" \\r\\n              [value]=\\\"model.landArea\\\"\\r\\n              numberValidator\\r\\n              #landArea=\\\"ngModel\\\">\\r\\n              \\r\\n          <span matSuffix>m2</span>\\r\\n          <mat-hint align=\\\"start\\\">Land area in square meters.</mat-hint>\\r\\n          <mat-error *ngIf=\\\"landArea.invalid && (landArea.dirty || landArea.touched) && landArea.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <!-- Floor area -->\\r\\n        <mat-form-field fxFlex  class=\\\"form__field\\\">\\r\\n          <input matInput type=\\\"number\\\" id=\\\"floorArea\\\" name=\\\"floorArea\\\" placeholder=\\\"Floor area\\\" \\r\\n              [(ngModel)]=\\\"model.floorArea\\\" \\r\\n              [value]=\\\"model.floorArea\\\"\\r\\n              numberValidator\\r\\n              #floorArea=\\\"ngModel\\\">\\r\\n              \\r\\n          <span matSuffix>m2</span>\\r\\n          <mat-hint align=\\\"start\\\">Floor area in square meters.</mat-hint>\\r\\n          <mat-error *ngIf=\\\"floorArea.invalid && (floorArea.dirty || floorArea.touched) && floorArea.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n        <!-- Bedrooms -->\\r\\n        <mat-form-field fxFlex fxFlex.gt-xs=\\\"140px\\\" fxFlex.gt-md=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n          <input matInput type=\\\"number\\\" id=\\\"bedrooms\\\" name=\\\"bedrooms\\\" placeholder=\\\"Bedrooms\\\" \\r\\n              [(ngModel)]=\\\"model.bedrooms\\\" \\r\\n              [value]=\\\"model.bedrooms\\\"\\r\\n              numberValidator\\r\\n              #bedrooms=\\\"ngModel\\\">\\r\\n              \\r\\n          <mat-icon matPrefix>hotel</mat-icon>\\r\\n          <mat-error *ngIf=\\\"bedrooms.invalid && (bedrooms.dirty || bedrooms.touched) && bedrooms.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <!-- Bathrooms -->\\r\\n        <mat-form-field fxFlex fxFlex.gt-xs=\\\"140px\\\" fxFlex.gt-md=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n          <input matInput type=\\\"number\\\" id=\\\"bathrooms\\\" name=\\\"bathrooms\\\" placeholder=\\\"Bathrooms\\\" \\r\\n              [(ngModel)]=\\\"model.bathrooms\\\" \\r\\n              [value]=\\\"model.bathrooms\\\"\\r\\n              numberValidator\\r\\n              #bathrooms=\\\"ngModel\\\">\\r\\n\\r\\n          <mat-icon matPrefix>airline_seat_legroom_reduced</mat-icon>\\r\\n          <mat-error *ngIf=\\\"bathrooms.invalid && (bathrooms.dirty || bathrooms.touched) && bathrooms.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <!-- Parking spaces -->\\r\\n        <mat-form-field fxFlex fxFlex.gt-xs=\\\"140px\\\" fxFlex.gt-md=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n          <input matInput type=\\\"number\\\" id=\\\"parkingSpaces\\\" name=\\\"parkingSpaces\\\" placeholder=\\\"Parking spaces\\\" \\r\\n              [(ngModel)]=\\\"model.parkingSpaces\\\" \\r\\n              [value]=\\\"model.parkingSpaces\\\"\\r\\n              numberValidator\\r\\n              #parkingSpaces=\\\"ngModel\\\">\\r\\n              \\r\\n          <mat-icon matPrefix>directions_car</mat-icon>\\r\\n          <mat-error *ngIf=\\\"parkingSpaces.invalid && (parkingSpaces.dirty || parkingSpaces.touched) && parkingSpaces.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <!-- Fenced? -->\\r\\n        <div fxFlex class=\\\"form__field\\\">\\r\\n          <mat-checkbox id=\\\"fenced\\\" name=\\\"fenced\\\" class=\\\"\\\"\\r\\n              labelPosition=\\\"before\\\"\\r\\n              [(ngModel)]=\\\"model.fenced\\\">\\r\\n            Fenced?\\r\\n          </mat-checkbox>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n      <h3 class=\\\"title\\\">\\r\\n        <p class=\\\"header\\\">Rent information</p>\\r\\n      </h3>\\r\\n    \\r\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n        <!-- Rent price -->\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n          <currency-unit fxFlex=\\\"50px\\\"\\r\\n              [id]=\\\"'rentPriceUnit'\\\" \\r\\n              [value]=\\\"model.rentPriceUnit\\\"\\r\\n              [view]=\\\"'narrow'\\\"\\r\\n              (newValue)=\\\"onCurrencyUnitChange($event)\\\">\\r\\n          </currency-unit>\\r\\n          \\r\\n          <mat-form-field fxFlex fxFlex.sm=\\\"120px\\\" fxFlex.gt-sm=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"number\\\" id=\\\"rentPrice\\\" name=\\\"rentPrice\\\" placeholder=\\\"Rent price\\\"\\r\\n                [(ngModel)]=\\\"model.rentPrice\\\" \\r\\n                [value]=\\\"model.rentPrice\\\"\\r\\n                numberValidator\\r\\n                #rentPrice=\\\"ngModel\\\">\\r\\n            \\r\\n            <mat-error *ngIf=\\\"rentPrice.invalid && (rentPrice.dirty || rentPrice.touched) && rentPrice.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <!-- Rent payment period -->\\r\\n        <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n          <mat-select id=\\\"rentPricePeriod\\\" name=\\\"rentPricePeriod\\\" placeholder=\\\"Payment frecuency\\\" [value]=\\\"model.rentPricePeriod\\\" [(ngModel)]=\\\"model.rentPricePeriod\\\">\\r\\n            <mat-option value=\\\"weekly\\\">per week</mat-option>\\r\\n            <mat-option value=\\\"monthly\\\">per month</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n        <!-- Managed? -->\\r\\n        <div fxFlex class=\\\"form__field\\\">\\r\\n          <mat-slide-toggle class=\\\"\\\" id=\\\"managed\\\" name=\\\"managed\\\"\\r\\n              color=\\\"accent\\\"\\r\\n              [checked]=\\\"model.managed\\\"\\r\\n              (change)=\\\"onSlideToggleChange($event)\\\">\\r\\n            Managed?\\r\\n          </mat-slide-toggle>\\r\\n        </div>\\r\\n\\r\\n        <!-- Manager rate -->\\r\\n        <div fxFlex=\\\"none\\\" fxFlex.gt-xs fxLayout=\\\"column\\\" class=\\\"form__field\\\">\\r\\n          <label class=\\\"slider__label\\\">Manager rate</label>\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n            <mat-slider fxFlex id=\\\"managerRate\\\" name=\\\"managerRate\\\"\\r\\n                color=\\\"accent\\\"\\r\\n                [max]=\\\"20\\\"\\r\\n                [min]=\\\"0\\\"\\r\\n                [step]=\\\"1\\\"\\r\\n                [disabled]=\\\"!model.managed\\\"\\r\\n                thumbLabel=\\\"true\\\"\\r\\n                tickInterval=\\\"1\\\"\\r\\n                [(ngModel)]=\\\"model.managerRate\\\"\\r\\n                [value]=\\\"model.managerRate\\\"> \\r\\n            </mat-slider>\\r\\n            <span *ngIf=\\\"model.managerRate\\\">{{model.managerRate}}%</span>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- Agent -->\\r\\n        <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n          <input matInput type=\\\"text\\\" id=\\\"agent\\\" name=\\\"agent\\\" placeholder=\\\"Agent\\\" \\r\\n              [(ngModel)]=\\\"model.agent\\\"\\r\\n              [value]=\\\"model.agent\\\"\\r\\n              #agent=\\\"ngModel\\\">\\r\\n\\r\\n          <mat-icon matPrefix>person</mat-icon>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n        <!-- Vacancy -->\\r\\n        <div fxFlex=\\\"none\\\" fxFlex.gt-xs=\\\"250px\\\" fxLayout=\\\"column\\\" class=\\\"form__field\\\">\\r\\n          <label class=\\\"slider__label\\\">Vacancy</label>\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n            <mat-slider fxFlex id=\\\"vacancy\\\" name=\\\"vacancy\\\"\\r\\n                color=\\\"accent\\\"\\r\\n                [max]=\\\"20\\\"\\r\\n                [min]=\\\"0\\\"\\r\\n                [step]=\\\"1\\\"\\r\\n                thumbLabel=\\\"true\\\"\\r\\n                tickInterval=\\\"1\\\"\\r\\n                [(ngModel)]=\\\"model.vacancy\\\"\\r\\n                [value]=\\\"model.vacancy\\\"> \\r\\n            </mat-slider>\\r\\n            <span *ngIf=\\\"model.vacancy\\\">{{model.vacancy}} weeks</span>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- Rent appraisal done? -->\\r\\n        <div fxFlex class=\\\"form__field\\\">\\r\\n          <mat-checkbox id=\\\"rentAppraisalDone\\\" name=\\\"rentAppraisalDone\\\" class=\\\"\\\"\\r\\n              labelPosition=\\\"before\\\"\\r\\n              [(ngModel)]=\\\"model.rentAppraisalDone\\\">\\r\\n            Rent appraisal done?\\r\\n          </mat-checkbox>\\r\\n        </div>\\r\\n\\r\\n        <!-- Rented? -->\\r\\n        <div fxFlex class=\\\"form__field\\\">\\r\\n          <mat-checkbox id=\\\"rented\\\" name=\\\"rented\\\" class=\\\"\\\"\\r\\n              labelPosition=\\\"before\\\"\\r\\n              [(ngModel)]=\\\"model.rented\\\">\\r\\n            Rented?\\r\\n          </mat-checkbox>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n    <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n      <h3 class=\\\"title\\\">\\r\\n        <p class=\\\"header\\\">Additional information</p>\\r\\n      </h3>\\r\\n\\r\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n        <!-- Registered value -->\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n          <currency-unit fxFlex=\\\"50px\\\"\\r\\n              [id]=\\\"'registeredValueUnit'\\\" \\r\\n              [value]=\\\"model.registeredValueUnit\\\"\\r\\n              [view]=\\\"'narrow'\\\"\\r\\n              (newValue)=\\\"onCurrencyUnitChange($event)\\\">\\r\\n          </currency-unit>\\r\\n          \\r\\n          <mat-form-field fxFlex fxFlex.sm=\\\"120px\\\" fxFlex.gt-sm=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"number\\\" id=\\\"registeredValue\\\" name=\\\"registeredValue\\\" placeholder=\\\"Registered value\\\"\\r\\n                [(ngModel)]=\\\"model.registeredValue\\\" \\r\\n                [value]=\\\"model.registeredValue\\\"\\r\\n                numberValidator\\r\\n                #registeredValue=\\\"ngModel\\\">\\r\\n            \\r\\n            <mat-hint align=\\\"start\\\">The value an independent valuator gives to the house based on the recent sales in the area.</mat-hint>\\r\\n            <mat-error *ngIf=\\\"registeredValue.invalid && (registeredValue.dirty || registeredValue.touched) && registeredValue.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <!-- Capital growth -->\\r\\n        <mat-form-field fxFlex fxFlex.sm=\\\"140px\\\" fxFlex.gt-sm=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n          <input matInput type=\\\"number\\\" id=\\\"capitalGrowth\\\" name=\\\"capitalGrowth\\\" placeholder=\\\"Capital growth\\\" \\r\\n              [(ngModel)]=\\\"model.capitalGrowth\\\" \\r\\n              [value]=\\\"model.capitalGrowth\\\"\\r\\n              numberValidator='{\\\"min\\\": 0, \\\"max\\\": 100}' \\r\\n              #capitalGrowth=\\\"ngModel\\\">\\r\\n          \\r\\n          <mat-icon matPrefix>trending_up</mat-icon>\\r\\n          <span matSuffix>%</span>\\r\\n          <mat-hint align=\\\"start\\\">Annual capital growth percentage for owning the property.</mat-hint>\\r\\n          <mat-error *ngIf=\\\"capitalGrowth.invalid && (capitalGrowth.dirty || capitalGrowth.touched) && capitalGrowth.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n          <mat-error *ngIf=\\\"capitalGrowth.invalid && (capitalGrowth.dirty || capitalGrowth.touched) && capitalGrowth.errors.numberValidatorMin\\\">Min value must be greater or equal than 0</mat-error>\\r\\n          <mat-error *ngIf=\\\"capitalGrowth.invalid && (capitalGrowth.dirty || capitalGrowth.touched) && capitalGrowth.errors.numberValidatorMax\\\">Max value must be less or equal than 100</mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n    <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n      <h3 class=\\\"title\\\">\\r\\n        <p class=\\\"header\\\">Living costs</p>\\r\\n      </h3>\\r\\n\\r\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n        <!-- Body corporate -->\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n          <currency-unit fxFlex=\\\"50px\\\"\\r\\n              [id]=\\\"'bodyCorporateUnit'\\\" \\r\\n              [value]=\\\"model.bodyCorporateUnit\\\"\\r\\n              [view]=\\\"'narrow'\\\"\\r\\n              (newValue)=\\\"onCurrencyUnitChange($event)\\\">\\r\\n          </currency-unit>\\r\\n          \\r\\n          <mat-form-field fxFlex fxFlex.sm=\\\"120px\\\" fxFlex.md=\\\"140px\\\" fxFlex.gt-md=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"number\\\" id=\\\"bodyCorporate\\\" name=\\\"bodyCorporate\\\" placeholder=\\\"Body corporate\\\"\\r\\n                [(ngModel)]=\\\"model.bodyCorporate\\\" \\r\\n                [value]=\\\"model.bodyCorporate\\\"\\r\\n                numberValidator\\r\\n                #bodyCorporate=\\\"ngModel\\\">\\r\\n            \\r\\n            <mat-hint align=\\\"start\\\">The bodyCorporate rates this property pays annually.</mat-hint>\\r\\n            <mat-error *ngIf=\\\"bodyCorporate.invalid && (bodyCorporate.dirty || bodyCorporate.touched) && bodyCorporate.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <!-- Utilities -->\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n          <currency-unit fxFlex=\\\"50px\\\"\\r\\n              [id]=\\\"'utilitiesCostUnit'\\\" \\r\\n              [value]=\\\"model.utilitiesCostUnit\\\"\\r\\n              [view]=\\\"'narrow'\\\"\\r\\n              (newValue)=\\\"onCurrencyUnitChange($event)\\\">\\r\\n          </currency-unit>\\r\\n          \\r\\n          <mat-form-field fxFlex fxFlex.sm=\\\"120px\\\" fxFlex.md=\\\"140px\\\" fxFlex.gt-md=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"number\\\" id=\\\"utilitiesCost\\\" name=\\\"utilitiesCost\\\" placeholder=\\\"Utilities\\\"\\r\\n                [(ngModel)]=\\\"model.utilitiesCost\\\" \\r\\n                [value]=\\\"model.utilitiesCost\\\"\\r\\n                numberValidator\\r\\n                #utilitiesCost=\\\"ngModel\\\">\\r\\n            \\r\\n            <mat-hint align=\\\"start\\\">Electricity, water, gas, internet, ...</mat-hint>\\r\\n            <mat-error *ngIf=\\\"utilitiesCost.invalid && (utilitiesCost.dirty || utilitiesCost.touched) && utilitiesCost.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <!-- Rates -->\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n          <currency-unit fxFlex=\\\"50px\\\"\\r\\n              [id]=\\\"'ratesUnit'\\\" \\r\\n              [value]=\\\"model.ratesUnit\\\"\\r\\n              [view]=\\\"'narrow'\\\"\\r\\n              (newValue)=\\\"onCurrencyUnitChange($event)\\\">\\r\\n          </currency-unit>\\r\\n          \\r\\n          <mat-form-field fxFlex fxFlex.sm=\\\"120px\\\" fxFlex.md=\\\"140px\\\" fxFlex.gt-md=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"number\\\" id=\\\"rates\\\" name=\\\"rates\\\" placeholder=\\\"Rates\\\"\\r\\n                [(ngModel)]=\\\"model.rates\\\" \\r\\n                [value]=\\\"model.rates\\\"\\r\\n                numberValidator\\r\\n                #rates=\\\"ngModel\\\">\\r\\n            \\r\\n            <mat-hint align=\\\"start\\\">The rates this property pays annually.</mat-hint>\\r\\n            <mat-error *ngIf=\\\"rates.invalid && (rates.dirty || rates.touched) && rates.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n        <!-- Insurance -->\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n          <currency-unit fxFlex=\\\"50px\\\"\\r\\n              [id]=\\\"'insuranceUnit'\\\" \\r\\n              [value]=\\\"model.insuranceUnit\\\"\\r\\n              [view]=\\\"'narrow'\\\"\\r\\n              (newValue)=\\\"onCurrencyUnitChange($event)\\\">\\r\\n          </currency-unit>\\r\\n          \\r\\n          <mat-form-field fxFlex fxFlex.sm=\\\"120px\\\" fxFlex.md=\\\"140px\\\" fxFlex.gt-md=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"number\\\" id=\\\"insurance\\\" name=\\\"insurance\\\" placeholder=\\\"Insurance\\\"\\r\\n                [(ngModel)]=\\\"model.insurance\\\" \\r\\n                [value]=\\\"model.insurance\\\"\\r\\n                numberValidator\\r\\n                #insurance=\\\"ngModel\\\">\\r\\n            \\r\\n            <mat-hint align=\\\"start\\\">Annual insurance price for the house.</mat-hint>\\r\\n            <mat-error *ngIf=\\\"insurance.invalid && (insurance.dirty || insurance.touched) && insurance.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </section>\\r\\n\\r\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcHJvcGVydGllcy9jb21wb25lbnRzL2hvdXNlcy1lZGl0L2hvdXNlcy1lZGl0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, OnDestroy, AfterViewInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { UtilService } from '../../../../util.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { AppService } from '../../../../app.service';\r\nimport { MatSelectChange, MatSlideToggleChange } from '@angular/material';\r\nimport { HOUSE_BUILDING_TYPES } from '../../../../constants';\r\n\r\n@Component({\r\n  selector: 'houses-edit',\r\n  templateUrl: './houses-edit.component.html',\r\n  styleUrls: ['./houses-edit.component.scss']\r\n})\r\nexport class HousesEditComponent implements OnInit, OnDestroy, AfterViewInit {\r\n\r\n  @ViewChild('editHouseForm') form;\r\n  @Input() defaultValues: any = null; // the default values of the component model\r\n  @Input() defaultCurrencyUnit = 'USD'; // the default currency unit\r\n  @Output() values: EventEmitter<any> = new EventEmitter();\r\n  model: any = {\r\n    buildingType : null,\r\n    titleType : null,\r\n    landArea : null,\r\n    floorArea : null,\r\n    registeredValue : null,\r\n    registeredValueUnit : null,\r\n    rates : null,\r\n    ratesUnit : null,\r\n    insurance : null,\r\n    insuranceUnit : null,\r\n    capitalGrowth : null,\r\n    bedrooms : null,\r\n    bathrooms : null,\r\n    parkingSpaces : null,\r\n    fenced : false,\r\n    rented : false,\r\n    rentPrice : null,\r\n    rentPriceUnit : null,\r\n    rentPricePeriod : null,\r\n    rentAppraisalDone : false,\r\n    vacancy : null,\r\n    bodyCorporate : null,\r\n    bodyCorporateUnit : null,\r\n    utilitiesCost : null,\r\n    utilitiesCostUnit : null,\r\n    managed : false,\r\n    managerRate : null,\r\n    agent : null\r\n  };\r\n  \r\n  subscription: Subscription = new Subscription();\r\n\r\n  constructor(private appService: AppService, public utilService: UtilService) { }\r\n\r\n  ngOnInit() {\r\n    this.model.registeredValueUnit = this.model.ratesUnit = this.model.insuranceUnit = this.model.rentPriceUnit = this.model.bodyCorporateUnit = \r\n        this.model.utilitiesCostUnit = this.defaultCurrencyUnit;\r\n    this.model.buildingType = HOUSE_BUILDING_TYPES.HOUSE;\r\n    this.model.rentPricePeriod = 'weekly';\r\n    \r\n    Object.assign(this.model, this.defaultValues);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    const methodTrace = `${this.constructor.name} > ngOnDestroy() > `; // for debugging\r\n    \r\n    // this.appService.consoleLog('info', `${methodTrace} Component destroyed.`);\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onCurrencyUnitChange($event: MatSelectChange) {\r\n    this.model[$event.source.id] = $event.value;\r\n    \r\n    this.emitValues();\r\n  }\r\n\r\n  onSlideToggleChange($event: MatSlideToggleChange) {\r\n    this.model[$event.source.id] = $event.checked;\r\n\r\n    this.emitValues();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // send data before touching any value\r\n    this.emitValues();\r\n\r\n    // after any event in the form we send updated data\r\n    const newSubscription = this.form.valueChanges.pipe(debounceTime(500)).subscribe(values => {\r\n      this.emitValues();\r\n    });\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n  emitValues() {\r\n    this.values.emit({ \r\n      value : {\r\n        model : this.model,\r\n        valid : this.form.valid\r\n      } \r\n    });\r\n  }\r\n}\r\n","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"container__properties\\\">\\r\\n  <properties-table [user]=\\\"user\\\" [showActions]=\\\"true\\\"></properties-table>\\r\\n\\r\\n  <section fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start end\\\" class=\\\"actions\\\">\\r\\n    <button mat-fab routerLink=\\\"house/create\\\" class=\\\"fab mat-elevation-z10\\\" color=\\\"primary\\\" matTooltip=\\\"Create new property\\\" matTooltipPosition=\\\"left\\\">\\r\\n      <mat-icon aria-label=\\\"Create new property\\\">add</mat-icon>\\r\\n    </button>\\r\\n  </section>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcHJvcGVydGllcy9jb21wb25lbnRzL3Byb3BlcnRpZXMtZGFzaGJvYXJkL3Byb3BlcnRpZXMtZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MainNavigatorService } from '../../../shared/components/main-navigator/main-navigator.service';\r\nimport { AppService } from '../../../../app.service';\r\nimport { User } from '../../../users/models/user';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'properties-dashboard',\r\n  templateUrl: './properties-dashboard.component.html',\r\n  styleUrls: ['./properties-dashboard.component.scss']\r\n})\r\nexport class PropertiesDashboardComponent implements OnInit, OnDestroy {\r\n  \r\n  user: User = null;\r\n  subscription: Subscription = new Subscription();\r\n  \r\n  constructor(private route: ActivatedRoute, private mainNavigatorService: MainNavigatorService, \r\n      private appService: AppService ) { }\r\n\r\n\r\n  ngOnInit() {\r\n    const methodTrace = `${this.constructor.name} > ngOnInit() > `; // for debugging\r\n\r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: '/welcome', selected: false },\r\n      { displayName: 'Investments', url: '/investments', selected: false },\r\n      { displayName: 'Properties', url: null, selected: true },\r\n      { displayName: 'Calculators', url: '/calculators', selected: false }\r\n    ]);\r\n\r\n    // get authUser from resolver\r\n    this.route.data.subscribe((data: { authUser: User }) => {\r\n      this.user = data.authUser;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    const methodTrace = `${this.constructor.name} > ngOnDestroy() > `; // for debugging\r\n\r\n    // this.appService.consoleLog('info', `${methodTrace} Component destroyed.`);\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container__edit-property\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"none none\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign.gt-xs=\\\"center none\\\" fxLayoutGap=\\\"10px\\\">\\r\\n  <!-- Form  -->\\r\\n  <form *ngIf=\\\"!getPropertyServiceRunning\\\" class=\\\"form__container form__edit-property\\\" (ngSubmit)=\\\"editMode ? onUpdate() : onSubmit()\\\" #editPropertyForm=\\\"ngForm\\\" \\r\\n      novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n    \\r\\n    <section fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields\\\">\\r\\n      <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n        <h3 class=\\\"title\\\">\\r\\n          <p class=\\\"header\\\">Basic info</p>\\r\\n        </h3>\\r\\n  \\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- Address -->\\r\\n          <address-autocomplete fxFlex\\r\\n              [id]=\\\"'address'\\\" \\r\\n              [defaultValues]=\\\"model.address\\\"\\r\\n              [placeHolder]=\\\"'Address'\\\"\\r\\n              (values)=\\\"onAddressChange($event)\\\">\\r\\n          </address-autocomplete>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- Map -->\\r\\n          <dynamic-map *ngIf=\\\"model.address && model.address.latitude && model.address.longitude\\\"\\r\\n              fxFlex [latitude]=\\\"model.address.latitude\\\" [longitude]=\\\"model.address.longitude\\\" [markers]=\\\"[model.address]\\\" [mapContainerHeight]=\\\"300\\\"></dynamic-map>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- Description -->\\r\\n          <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n            <textarea matInput id=\\\"description\\\" name=\\\"description\\\" placeholder=\\\"Description\\\"\\r\\n                matTextareaAutosize matAutosizeMinRows=\\\"2\\\" matAutosizeMaxRows=\\\"5\\\"\\r\\n                [(ngModel)]=\\\"model.description\\\" \\r\\n                value=\\\"model.description\\\"\\r\\n                #description=\\\"ngModel\\\">\\r\\n            </textarea>\\r\\n\\r\\n            <mat-icon matPrefix>subject</mat-icon>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n  \\r\\n      <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n        <h3 class=\\\"title\\\">\\r\\n          <p class=\\\"header\\\">Pricing information</p>\\r\\n        </h3>\\r\\n      \\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- Asking price -->\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n            <currency-unit fxFlex=\\\"50px\\\"\\r\\n                [id]=\\\"'askingPriceUnit'\\\" \\r\\n                [value]=\\\"model.askingPriceUnit\\\"\\r\\n                [view]=\\\"'narrow'\\\"\\r\\n                (newValue)=\\\"onCurrencyUnitChange($event)\\\">\\r\\n            </currency-unit>\\r\\n            \\r\\n            <mat-form-field fxFlex fxFlex.sm=\\\"120px\\\" fxFlex.md=\\\"140px\\\" fxFlex.gt-md=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n              <input matInput type=\\\"number\\\" id=\\\"askingPrice\\\" name=\\\"askingPrice\\\" placeholder=\\\"Asking price\\\"\\r\\n                  [(ngModel)]=\\\"model.askingPrice\\\" \\r\\n                  [value]=\\\"model.askingPrice\\\"\\r\\n                  numberValidator\\r\\n                  #askingPrice=\\\"ngModel\\\">\\r\\n              \\r\\n              <mat-hint align=\\\"start\\\">The price the owner ask for sell the house.</mat-hint>\\r\\n              <mat-error *ngIf=\\\"askingPrice.invalid && (askingPrice.dirty || askingPrice.touched) && askingPrice.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          \\r\\n          <!-- Offer price -->\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n            <currency-unit fxFlex=\\\"50px\\\"\\r\\n                [id]=\\\"'offerPriceUnit'\\\" \\r\\n                [value]=\\\"model.offerPriceUnit\\\"\\r\\n                [view]=\\\"'narrow'\\\"\\r\\n                (newValue)=\\\"onCurrencyUnitChange($event)\\\">\\r\\n            </currency-unit>\\r\\n            \\r\\n            <mat-form-field fxFlex fxFlex.sm=\\\"120px\\\" fxFlex.md=\\\"140px\\\" fxFlex.gt-md=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n              <input matInput type=\\\"number\\\" id=\\\"offerPrice\\\" name=\\\"offerPrice\\\" placeholder=\\\"Offer price\\\"\\r\\n                  [(ngModel)]=\\\"model.offerPrice\\\" \\r\\n                  [value]=\\\"model.offerPrice\\\"\\r\\n                  numberValidator\\r\\n                  #offerPrice=\\\"ngModel\\\">\\r\\n              \\r\\n              <mat-hint align=\\\"start\\\">The price the owner ask for sell the house.</mat-hint>\\r\\n              <mat-error *ngIf=\\\"offerPrice.invalid && (offerPrice.dirty || offerPrice.touched) && offerPrice.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <!-- Walk away price -->\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n            <currency-unit fxFlex=\\\"50px\\\"\\r\\n                [id]=\\\"'walkAwayPriceUnit'\\\" \\r\\n                [value]=\\\"model.walkAwayPriceUnit\\\"\\r\\n                [view]=\\\"'narrow'\\\"\\r\\n                (newValue)=\\\"onCurrencyUnitChange($event)\\\">\\r\\n            </currency-unit>\\r\\n            \\r\\n            <mat-form-field fxFlex fxFlex.sm=\\\"120px\\\" fxFlex.md=\\\"140px\\\" fxFlex.gt-md=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n              <input matInput type=\\\"number\\\" id=\\\"walkAwayPrice\\\" name=\\\"walkAwayPrice\\\" placeholder=\\\"Walk away price\\\"\\r\\n                  [(ngModel)]=\\\"model.walkAwayPrice\\\" \\r\\n                  [value]=\\\"model.walkAwayPrice\\\"\\r\\n                  numberValidator\\r\\n                  #walkAwayPrice=\\\"ngModel\\\">\\r\\n              \\r\\n              <mat-hint align=\\\"start\\\">The price the owner ask for sell the house.</mat-hint>\\r\\n              <mat-error *ngIf=\\\"walkAwayPrice.invalid && (walkAwayPrice.dirty || walkAwayPrice.touched) && walkAwayPrice.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- Purchase price -->\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n            <currency-unit fxFlex=\\\"50px\\\"\\r\\n                [id]=\\\"'purchasePriceUnit'\\\" \\r\\n                [value]=\\\"model.purchasePriceUnit\\\"\\r\\n                [view]=\\\"'narrow'\\\"\\r\\n                (newValue)=\\\"onCurrencyUnitChange($event)\\\">\\r\\n            </currency-unit>\\r\\n            \\r\\n            <mat-form-field fxFlex fxFlex.sm=\\\"120px\\\" fxFlex.md=\\\"140px\\\" fxFlex.gt-md=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n              <input matInput type=\\\"number\\\" id=\\\"purchasePrice\\\" name=\\\"purchasePrice\\\" placeholder=\\\"Purchase price\\\"\\r\\n                  [(ngModel)]=\\\"model.purchasePrice\\\" \\r\\n                  [value]=\\\"model.purchasePrice\\\"\\r\\n                  numberValidator\\r\\n                  #purchasePrice=\\\"ngModel\\\">\\r\\n              \\r\\n              <mat-error *ngIf=\\\"purchasePrice.invalid && (purchasePrice.dirty || purchasePrice.touched) && purchasePrice.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <!-- More prices btn -->\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n            <button *ngIf=\\\"!showPropertyYieldsDialogSpinner\\\" fxFlex\\r\\n                mat-raised-button type=\\\"button\\\" color=\\\"primary\\\" class=\\\"color__almost-white\\\"\\r\\n                matTooltip=\\\"Set different potencial prices to see how gross and net yield fluctuates\\\"\\r\\n                (click)=\\\"showPropertyYieldsDialogSpinner = true; openPropertyYieldsDialog()\\\">\\r\\n              More prices/yields\\r\\n            </button>\\r\\n\\r\\n            <progress-bar *ngIf=\\\"showPropertyYieldsDialogSpinner\\\" class=\\\"progress-bar--open-dialog\\\"\\r\\n              color=\\\"warn\\\">\\r\\n            </progress-bar>\\r\\n\\r\\n            <!-- <mat-progress-spinner *ngIf=\\\"showPropertyYieldsDialogSpinner\\\"\\r\\n                class=\\\"progress-spinner progress-spinner--open-dialog\\\"\\r\\n                color=\\\"warn\\\"\\r\\n                [diameter]=\\\"40\\\" [strokeWidth]=\\\"7\\\"\\r\\n                mode=\\\"indeterminate\\\">\\r\\n            </mat-progress-spinner> -->\\r\\n          </div>\\r\\n\\r\\n          <!-- Market value -->\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n            <currency-unit fxFlex=\\\"50px\\\"\\r\\n                [id]=\\\"'marketValueUnit'\\\" \\r\\n                [value]=\\\"model.marketValueUnit\\\"\\r\\n                [view]=\\\"'narrow'\\\"\\r\\n                (newValue)=\\\"onCurrencyUnitChange($event)\\\">\\r\\n            </currency-unit>\\r\\n            \\r\\n            <mat-form-field fxFlex fxFlex.sm=\\\"120px\\\" fxFlex.md=\\\"140px\\\" fxFlex.gt-md=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n              <input matInput type=\\\"number\\\" id=\\\"marketValue\\\" name=\\\"marketValue\\\" placeholder=\\\"Market value\\\"\\r\\n                  [(ngModel)]=\\\"model.marketValue\\\" \\r\\n                  [value]=\\\"model.marketValue\\\"\\r\\n                  numberValidator\\r\\n                  #marketValue=\\\"ngModel\\\">\\r\\n              \\r\\n              <mat-hint align=\\\"start\\\">Last sale price.</mat-hint>\\r\\n              <mat-error *ngIf=\\\"marketValue.invalid && (marketValue.dirty || marketValue.touched) && marketValue.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      \\r\\n      <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n        <h3 class=\\\"title\\\">\\r\\n          <p class=\\\"header\\\">Costs</p>\\r\\n        </h3>\\r\\n\\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- Reno cost -->\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n            <currency-unit fxFlex=\\\"50px\\\"\\r\\n                [id]=\\\"'renovationCostUnit'\\\" \\r\\n                [value]=\\\"model.renovationCostUnit\\\"\\r\\n                [view]=\\\"'narrow'\\\"\\r\\n                (newValue)=\\\"onCurrencyUnitChange($event)\\\">\\r\\n            </currency-unit>\\r\\n            \\r\\n            <mat-form-field fxFlex fxFlex.sm=\\\"120px\\\" fxFlex.md=\\\"140px\\\" fxFlex.gt-md=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n              <input matInput type=\\\"number\\\" id=\\\"renovationCost\\\" name=\\\"renovationCost\\\" placeholder=\\\"Renovation cost\\\"\\r\\n                  [(ngModel)]=\\\"model.renovationCost\\\" \\r\\n                  [value]=\\\"model.renovationCost\\\"\\r\\n                  numberValidator\\r\\n                  #renovationCost=\\\"ngModel\\\">\\r\\n              \\r\\n              <mat-hint align=\\\"start\\\">Last sale price.</mat-hint>\\r\\n              <mat-error *ngIf=\\\"renovationCost.invalid && (renovationCost.dirty || renovationCost.touched) && renovationCost.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <!-- Maintenance cost -->\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n            <currency-unit fxFlex=\\\"50px\\\"\\r\\n                [id]=\\\"'maintenanceCostUnit'\\\" \\r\\n                [value]=\\\"model.maintenanceCostUnit\\\"\\r\\n                [view]=\\\"'narrow'\\\"\\r\\n                (newValue)=\\\"onCurrencyUnitChange($event)\\\">\\r\\n            </currency-unit>\\r\\n            \\r\\n            <mat-form-field fxFlex fxFlex.sm=\\\"120px\\\" fxFlex.md=\\\"140px\\\" fxFlex.gt-md=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n              <input matInput type=\\\"number\\\" id=\\\"maintenanceCost\\\" name=\\\"maintenanceCost\\\" placeholder=\\\"Maintenance cost\\\"\\r\\n                  [(ngModel)]=\\\"model.maintenanceCost\\\" \\r\\n                  [value]=\\\"model.maintenanceCost\\\"\\r\\n                  numberValidator\\r\\n                  #maintenanceCost=\\\"ngModel\\\">\\r\\n              \\r\\n              <mat-hint align=\\\"start\\\">Last sale price.</mat-hint>\\r\\n              <mat-error *ngIf=\\\"maintenanceCost.invalid && (maintenanceCost.dirty || maintenanceCost.touched) && maintenanceCost.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          \\r\\n          <!-- Other cost -->\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n            <currency-unit fxFlex=\\\"50px\\\"\\r\\n                [id]=\\\"'otherCostUnit'\\\" \\r\\n                [value]=\\\"model.otherCostUnit\\\"\\r\\n                [view]=\\\"'narrow'\\\"\\r\\n                (newValue)=\\\"onCurrencyUnitChange($event)\\\">\\r\\n            </currency-unit>\\r\\n            \\r\\n            <mat-form-field fxFlex fxFlex.sm=\\\"120px\\\" fxFlex.md=\\\"140px\\\" fxFlex.gt-md=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n              <input matInput type=\\\"number\\\" id=\\\"otherCost\\\" name=\\\"otherCost\\\" placeholder=\\\"Other cost\\\"\\r\\n                  [(ngModel)]=\\\"model.otherCost\\\" \\r\\n                  [value]=\\\"model.otherCost\\\"\\r\\n                  numberValidator\\r\\n                  #otherCost=\\\"ngModel\\\">\\r\\n              \\r\\n              <mat-hint align=\\\"start\\\">Last sale price.</mat-hint>\\r\\n              <mat-error *ngIf=\\\"otherCost.invalid && (otherCost.dirty || otherCost.touched) && otherCost.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      \\r\\n      <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n        <h3 class=\\\"title\\\">\\r\\n          <p class=\\\"header\\\">Other information</p>\\r\\n        </h3>\\r\\n\\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- Date listed -->\\r\\n          <mat-form-field fxFlex fxFlex.gt-xs=\\\"100px\\\" class=\\\"form__field\\\">\\r\\n            <input placeholder=\\\"Listing date\\\"\\r\\n                id=\\\"dateListed\\\"\\r\\n                name=\\\"dateListed\\\"\\r\\n                readonly\\r\\n                #dateListed=\\\"ngModel\\\"\\r\\n                matInput \\r\\n                [(ngModel)]=\\\"model.dateListed\\\" \\r\\n                [matDatepicker]=\\\"pickerDateListed\\\"\\r\\n                (click)=\\\"pickerDateListed.open()\\\">\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"pickerDateListed\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker [touchUi]=\\\"utilService.isGtSm() ? false : true\\\" #pickerDateListed></mat-datepicker>\\r\\n            <mat-error *ngIf=\\\"dateListed.invalid && (dateListed.dirty || dateListed.touched) && dateListed.errors.matDatepickerParse\\\">Buying date is invalid or not follows the pattern \\\"mm/dd/yyyy\\\"</mat-error>\\r\\n          </mat-form-field>\\r\\n  \\r\\n          <!-- Reason for selling -->\\r\\n          <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n            <textarea matInput id=\\\"reasonForSelling\\\" name=\\\"reasonForSelling\\\" placeholder=\\\"Reason for selling\\\"\\r\\n                matTextareaAutosize matAutosizeMinRows=\\\"2\\\" matAutosizeMaxRows=\\\"5\\\"\\r\\n                [(ngModel)]=\\\"model.reasonForSelling\\\" \\r\\n                value=\\\"model.reasonForSelling\\\"\\r\\n                #reasonForSelling=\\\"ngModel\\\">\\r\\n            </textarea>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- Notes -->\\r\\n          <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n            <textarea matInput id=\\\"notes\\\" name=\\\"notes\\\" placeholder=\\\"Other notes\\\"\\r\\n                matTextareaAutosize matAutosizeMinRows=\\\"2\\\" matAutosizeMaxRows=\\\"5\\\"\\r\\n                [(ngModel)]=\\\"model.notes\\\" \\r\\n                value=\\\"model.notes\\\"\\r\\n                #notes=\\\"ngModel\\\">\\r\\n            </textarea>\\r\\n\\r\\n            <mat-icon matPrefix>subject</mat-icon>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n        <houses-edit *ngIf=\\\"type === propertyTypes.HOUSE\\\" \\r\\n            [defaultValues]=\\\"model.propertyTypeData\\\"\\r\\n            [defaultCurrencyUnit]=\\\"user.currency\\\"\\r\\n            (values)=\\\"onPropertyTypeDataChange($event)\\\">\\r\\n        </houses-edit>\\r\\n      </div>\\r\\n    </section>\\r\\n\\r\\n    <section class=\\\"form__actions form__actions--edit-property\\\"\\r\\n        fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\"  \\r\\n        fxLayoutGap=\\\"10px\\\">\\r\\n      \\r\\n      <button mat-fab *ngIf=\\\"!editPropertyServiceRunning\\\" \\r\\n          class=\\\"fab mat-elevation-z10 form__action\\\" \\r\\n          color=\\\"accent\\\" \\r\\n          type=\\\"submit\\\"\\r\\n          matTooltip=\\\"Save changes\\\" matTooltipPosition=\\\"left\\\" \\r\\n          [disabled]=\\\"!(editPropertyForm.form.valid && includedFormsValid())\\\">\\r\\n        <mat-icon aria-label=\\\"Save changes\\\">save</mat-icon>\\r\\n      </button>\\r\\n      \\r\\n      <mat-progress-spinner *ngIf=\\\"editPropertyServiceRunning\\\"\\r\\n          class=\\\"progress-spinner progress-spinner--edit-property\\\"\\r\\n          color=\\\"accent\\\"\\r\\n          [diameter]=\\\"55\\\" [strokeWidth]=\\\"10\\\"\\r\\n          mode=\\\"indeterminate\\\">\\r\\n      </mat-progress-spinner>\\r\\n    </section>\\r\\n  </form>\\r\\n\\r\\n  <!-- Figures -->\\r\\n  <section *ngIf=\\\"!getPropertyServiceRunning\\\" fxHide.lt-md=\\\"true\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" fxFlex=\\\"300px\\\" class=\\\"house-figures-results\\\">\\r\\n    <mat-card>\\r\\n      <mat-card-content>\\r\\n        <!-- Missing required data from -->\\r\\n        <form class=\\\"form__container form__house-figures-results\\\" #houseFiguresResultsForm=\\\"ngForm\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" >\\r\\n          <section fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields\\\">\\r\\n            <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields__row__container\\\">\\r\\n              <h3 class=\\\"title\\\">\\r\\n                <p class=\\\"header\\\">Additional values</p>\\r\\n                <p class=\\\"mat-caption\\\">This information it is not saved in the database, play with these values to evaluate a potencial investment</p>\\r\\n              </h3>\\r\\n\\r\\n              <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields__row\\\">\\r\\n                <!-- Loan coverage -->\\r\\n                <div fxFlex=\\\"none\\\" fxLayout=\\\"column\\\" class=\\\"form__field slider__field\\\">\\r\\n                  <label class=\\\"slider__label\\\">Loan coverage</label>\\r\\n                  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                    <mat-slider fxFlex id=\\\"loanCoverage\\\" name=\\\"loanCoverage\\\"\\r\\n                        color=\\\"accent\\\"\\r\\n                        [max]=\\\"100\\\"\\r\\n                        [min]=\\\"0\\\"\\r\\n                        [step]=\\\"1\\\"\\r\\n                        thumbLabel=\\\"true\\\"\\r\\n                        tickInterval=\\\"1\\\"\\r\\n                        [(ngModel)]=\\\"modelHouseFiguresResults.loanCoverage\\\"\\r\\n                        [value]=\\\"modelHouseFiguresResults.loanCoverage\\\"> \\r\\n                    </mat-slider>\\r\\n                    <span *ngIf=\\\"modelHouseFiguresResults.loanCoverage\\\">{{modelHouseFiguresResults.loanCoverage}}%</span>\\r\\n                  </div>\\r\\n                  <label class=\\\"mat-hint slider__label__hint\\\">Percentage of the purchase price covered by the loan.</label>\\r\\n                </div>\\r\\n\\r\\n                <!-- Loan term -->\\r\\n                <div fxFlex=\\\"none\\\" fxLayout=\\\"column\\\" class=\\\"form__field slider__field\\\">\\r\\n                  <label class=\\\"slider__label\\\">Term</label>\\r\\n                  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                    <mat-slider fxFlex id=\\\"loanTerm\\\" name=\\\"loanTerm\\\"\\r\\n                        color=\\\"accent\\\"\\r\\n                        [max]=\\\"30\\\"\\r\\n                        [min]=\\\"1\\\"\\r\\n                        [step]=\\\"1\\\"\\r\\n                        thumbLabel=\\\"true\\\"\\r\\n                        tickInterval=\\\"1\\\"\\r\\n                        [(ngModel)]=\\\"modelHouseFiguresResults.loanTerm\\\"\\r\\n                        [value]=\\\"modelHouseFiguresResults.loanTerm\\\"> \\r\\n                    </mat-slider>\\r\\n                    <span *ngIf=\\\"modelHouseFiguresResults.loanTerm\\\">{{modelHouseFiguresResults.loanTerm}} years</span>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <!-- Interest rates -->\\r\\n                <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n                  <input matInput type=\\\"number\\\" id=\\\"interestRates\\\" name=\\\"interestRates\\\" placeholder=\\\"Interest rates\\\" \\r\\n                      [(ngModel)]=\\\"modelHouseFiguresResults.interestRates\\\" \\r\\n                      numberValidator='{\\\"min\\\": 0, \\\"max\\\": 100}' \\r\\n                      [value]=\\\"modelHouseFiguresResults.interestRates\\\"\\r\\n                      #interestRates=\\\"ngModel\\\">\\r\\n\\r\\n                  <mat-icon matPrefix>timeline</mat-icon>\\r\\n                  <span matSuffix>%</span>\\r\\n                  <mat-hint align=\\\"start\\\">Average loan interest rates (as a percentage).</mat-hint>\\r\\n                  <mat-error *ngIf=\\\"interestRates.invalid && (interestRates.dirty || interestRates.touched) && interestRates.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n                  <mat-error *ngIf=\\\"interestRates.invalid && (interestRates.dirty || interestRates.touched) && interestRates.errors.numberValidatorMin\\\">Min value must be greater or equal than 0</mat-error>\\r\\n                  <mat-error *ngIf=\\\"interestRates.invalid && (interestRates.dirty || interestRates.touched) && interestRates.errors.numberValidatorMax\\\">Max value must be less or equal than 100</mat-error>\\r\\n                </mat-form-field>\\r\\n\\r\\n                <!-- Payment frecuency -->\\r\\n                <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n                  <mat-select id=\\\"paymentFrecuency\\\" name=\\\"paymentFrecuency\\\" placeholder=\\\"Frecuency\\\" \\r\\n                      [(ngModel)]=\\\"modelHouseFiguresResults.paymentFrecuency\\\" [value]=\\\"modelHouseFiguresResults.paymentFrecuency\\\">\\r\\n                    <mat-option value=\\\"12\\\">Monthly</mat-option>\\r\\n                    <mat-option value=\\\"26\\\">Fornightly</mat-option>\\r\\n                    <mat-option value=\\\"52\\\">Weekly</mat-option>\\r\\n                  </mat-select>\\r\\n                  \\r\\n                  <mat-hint align=\\\"start\\\">Payment frecuency</mat-hint>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n          </section>\\r\\n        </form>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <house-figures-results \\r\\n      title=\\\"Property figures\\\"\\r\\n      subtitle=\\\"This figures asumes that all of the currency inputs in the form are in the same unit\\\"\\r\\n      [purchasePrice]=\\\"model.purchasePrice || model.offerPrice || model.askingPrice || model.walkAwayPrice || 0\\\"\\r\\n      [capitalGrowth]=\\\"model.propertyTypeData.capitalGrowth || 0\\\"\\r\\n      [marketValue]=\\\"model.marketValue\\\"\\r\\n      [loanCoverage]=\\\"modelHouseFiguresResults.loanCoverage\\\"\\r\\n      [interestRates]=\\\"modelHouseFiguresResults.interestRates\\\"\\r\\n      [loanTerm]=\\\"modelHouseFiguresResults.loanTerm\\\"\\r\\n      [paymentFrecuency]=\\\"modelHouseFiguresResults.paymentFrecuency\\\"\\r\\n      [rentPrice]=\\\"model.propertyTypeData.rentPrice\\\"\\r\\n      [rentPaymentFrecuency]=\\\"model.propertyTypeData.rentPricePeriod\\\"\\r\\n      [vacancy]=\\\"model.propertyTypeData.vacancy\\\"\\r\\n      [renovationCost]=\\\"model.renovationCost\\\"\\r\\n      [maintenanceCost]=\\\"model.maintenanceCost\\\"\\r\\n      [bodyCorporate]=\\\"model.propertyTypeData.bodyCorporate\\\"\\r\\n      [houseRates]=\\\"model.propertyTypeData.rates\\\"\\r\\n      [utilities]=\\\"model.propertyTypeData.utilitiesCost\\\"\\r\\n      [insurance]=\\\"model.propertyTypeData.insurance\\\"\\r\\n      [otherCosts]=\\\"model.otherCost\\\"\\r\\n      [managed]=\\\"model.propertyTypeData.managed ? model.propertyTypeData.managerRate : 0\\\">\\r\\n    </house-figures-results>\\r\\n  </section>\\r\\n  <!-- <pre>{{model | json}}</pre> -->\\r\\n\\r\\n  <progress-bar class=\\\"progress-bar--get-property\\\" *ngIf=\\\"getPropertyServiceRunning\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      message=\\\"Loading property info...\\\">\\r\\n  </progress-bar>\\r\\n\\r\\n  <section *ngIf=\\\"!getPropertyServiceRunning\\\" \\r\\n      fxLayout=\\\"column\\\" \\r\\n      fxHide.gt-sm=\\\"true\\\" \\r\\n      class=\\\"actions\\\">\\r\\n    \\r\\n    <button mat-mini-fab class=\\\"mini-fab mat-elevation-z10\\\" color=\\\"primary\\\" *ngIf=\\\"!showPropertyFiguresDialogSpinner\\\"\\r\\n        matTooltip=\\\"Show figures\\\" matTooltipPosition=\\\"left\\\" \\r\\n        (click)=\\\"showPropertyFiguresDialogSpinner = true; openHouseResultsFiguresDialog()\\\">\\r\\n      <mat-icon aria-label=\\\"Show property figures\\\">attach_money</mat-icon>\\r\\n    </button>\\r\\n\\r\\n    <mat-progress-spinner *ngIf=\\\"showPropertyFiguresDialogSpinner\\\"\\r\\n        class=\\\"progress-spinner progress-spinner--open-dialog\\\"\\r\\n        color=\\\"warn\\\"\\r\\n        [diameter]=\\\"40\\\" [strokeWidth]=\\\"7\\\"\\r\\n        mode=\\\"indeterminate\\\">\\r\\n    </mat-progress-spinner>\\r\\n  </section>\\r\\n</div>\"","module.exports = \".progress-bar--get-property,\\n.progress-bar--open-dialog {\\n  width: 100%; }\\n\\n.actions .mini-fab, .actions .progress-spinner--open-dialog {\\n  bottom: 75px; }\\n\\n@media screen and (min-width: 600px) {\\n  .progress-bar--get-property {\\n    width: 300px; }\\n  .progress-bar--open-dialog {\\n    width: 150px; } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wcm9wZXJ0aWVzL2NvbXBvbmVudHMvcHJvcGVydGllcy1lZGl0L0M6XFx3M1xcYXRvbWlDb2NvbnV0XFxjbGllbnQvc3JjXFxhcHBcXG1vZHVsZXNcXHByb3BlcnRpZXNcXGNvbXBvbmVudHNcXHByb3BlcnRpZXMtZWRpdFxccHJvcGVydGllcy1lZGl0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBOztFQUVFLFlBQVcsRUFDWjs7QUFFRDtFQUdJLGFBQVksRUFDYjs7QUFHSDtFQUVFO0lBQ0UsYUFBWSxFQUNiO0VBRUQ7SUFDRSxhQUFZLEVBQ2IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcHJvcGVydGllcy9jb21wb25lbnRzL3Byb3BlcnRpZXMtZWRpdC9wcm9wZXJ0aWVzLWVkaXQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICcuLi8uLi8uLi8uLi8uLi92YXJpYWJsZXMnO1xyXG5cclxuXHJcbi5wcm9ncmVzcy1iYXItLWdldC1wcm9wZXJ0eSwgXHJcbi5wcm9ncmVzcy1iYXItLW9wZW4tZGlhbG9nIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLmFjdGlvbnMge1xyXG5cclxuICAubWluaS1mYWIsIC5wcm9ncmVzcy1zcGlubmVyLS1vcGVuLWRpYWxvZyB7XHJcbiAgICBib3R0b206IDc1cHg7XHJcbiAgfVxyXG59XHJcblxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkc2NyZWVuR3RYcykge1xyXG5cclxuICAucHJvZ3Jlc3MtYmFyLS1nZXQtcHJvcGVydHkge1xyXG4gICAgd2lkdGg6IDMwMHB4O1xyXG4gIH1cclxuXHJcbiAgLnByb2dyZXNzLWJhci0tb3Blbi1kaWFsb2cge1xyXG4gICAgd2lkdGg6IDE1MHB4O1xyXG4gIH1cclxufSJdfQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription, of, Observable } from 'rxjs';\r\nimport { User } from '../../../users/models/user';\r\nimport { Property } from '../../models/property';\r\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { AppService } from '../../../../app.service';\r\nimport { PropertiesService } from '../../properties.service';\r\nimport { MainNavigatorService } from '../../../shared/components/main-navigator/main-navigator.service';\r\nimport { PROPERTY_TYPES } from '../../../../constants';\r\nimport { House } from '../../models/house';\r\nimport { MatSelectChange, DateAdapter, NativeDateAdapter, MatAutocompleteSelectedEvent, MatDialog } from '@angular/material';\r\nimport { UtilService } from '../../../../util.service';\r\nimport { HouseFiguresDialogComponent } from '../house-figures-dialog/house-figures-dialog.component';\r\nimport { PropertyYieldsDialogComponent } from '../property-yields-dialog/property-yields-dialog.component';\r\nimport { map, combineLatest, flatMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'properties-edit',\r\n  templateUrl: './properties-edit.component.html',\r\n  styleUrls: ['./properties-edit.component.scss']\r\n})\r\nexport class PropertiesEditComponent implements OnInit, OnDestroy {\r\n\r\n  editMode = false;\r\n  user: User = null;\r\n  property: Property = null;\r\n  propertyTypes: any = null;\r\n  id: string = null; // property id\r\n  type: string = null; // property type\r\n  subscription: Subscription = new Subscription();\r\n  propertyTypeDataValid = false; // this value is set when property type data form is updated\r\n  addressValid = false;\r\n\r\n  // services flags\r\n  editPropertyServiceRunning = false;\r\n  getPropertyServiceRunning = false;\r\n  showPropertyFiguresDialogSpinner = false;\r\n  showPropertyYieldsDialogSpinner = false;\r\n\r\n  // models\r\n  model: any = {\r\n    id : null,\r\n    email : null, // user email for api check\r\n    type : null,\r\n    propertyTypeData : {}, // specific data related to the property type\r\n    address : {},\r\n    askingPrice : null,\r\n    askingPriceUnit : null,\r\n    offerPrice : null,\r\n    offerPriceUnit : null,\r\n    walkAwayPrice : null,\r\n    walkAwayPriceUnit : null,\r\n    purchasePrice : null,\r\n    purchasePriceUnit : null,\r\n    purchasePrice2 : null,\r\n    purchasePrice2Unit : null,\r\n    purchasePrice3 : null,\r\n    purchasePrice3Unit : null,\r\n    purchasePrice4 : null,\r\n    purchasePrice4Unit : null,\r\n    purchasePrice5 : null,\r\n    purchasePrice5Unit : null,\r\n    dateListed : null,\r\n    reasonForSelling : null,\r\n    marketValue : null,\r\n    marketValueUnit : null,\r\n    renovationCost : null,\r\n    renovationCostUnit : null,\r\n    maintenanceCost : null,\r\n    maintenanceCostUnit : null,\r\n    description : null,\r\n    otherCost : null,\r\n    otherCostUnit : null,\r\n    notes : null\r\n  };\r\n\r\n  modelHouseFiguresResults: any = {\r\n    loanCoverage : 80,\r\n    interestRates : 7,\r\n    loanTerm : 30,\r\n    paymentFrecuency : '26',\r\n  };\r\n\r\n  constructor(private route: ActivatedRoute, private mainNavigatorService: MainNavigatorService, private propertiesService: PropertiesService,\r\n      private appService: AppService, private router: Router, public utilService: UtilService, private dateAdapter: DateAdapter<NativeDateAdapter>,\r\n      public dialog: MatDialog) {\r\n\r\n    this.dateAdapter.setLocale('en-GB');\r\n    this.propertyTypes = PROPERTY_TYPES;\r\n  }\r\n\r\n  ngOnInit() {\r\n    const methodTrace = `${this.constructor.name} > ngOnInit() > `; // for debugging\r\n\r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: '/welcome', selected: false },\r\n      { displayName: 'Investments', url: '/investments', selected: false },\r\n      { displayName: 'Properties', url: '/properties', selected: false }\r\n    ]);\r\n\r\n    // generates a user source object from authUser from resolver\r\n    const user$ = this.route.data.pipe(map((data: { authUser: User }) => data.authUser));\r\n\r\n    // generates an property id source from id parameter in url\r\n    const id$ = this.route.paramMap.pipe(map((params: ParamMap) => params.get('id')));\r\n\r\n    // combine user$ and id$ sources into one object and start listen to it for changes\r\n    const newSubscription = user$.pipe(\r\n      combineLatest(id$, (user, id) => {\r\n        this.user = user;\r\n        return { user, propertyId : id };\r\n      }),\r\n      flatMap((data: any): Observable<Property> => {\r\n        this.model.email = data.user.email;\r\n        this.model.askingPriceUnit = this.model.offerPriceUnit = this.model.walkAwayPriceUnit =\r\n            this.model.purchasePriceUnit = this.model.marketValueUnit = this.model.renovationCostUnit =\r\n            this.model.maintenanceCostUnit = this.model.otherCostUnit = this.user.currency;\r\n        this.model.id = data.propertyId || null;\r\n  \r\n        this.editPropertyServiceRunning = false;\r\n        this.getPropertyServiceRunning = false;\r\n  \r\n        if (!data.propertyId) {\r\n          // we are creating a new property\r\n          this.id = null;\r\n          this.editMode = false;\r\n          this.mainNavigatorService.appendLink({ displayName: 'Create Property', url: '', selected : true });\r\n          return of(null);\r\n        } else {\r\n          this.mainNavigatorService.appendLink({ displayName: 'Edit Property', url: '', selected : true });\r\n          // we are editing an existing property\r\n          this.id = data.propertyId;\r\n          this.editMode = true;\r\n          \r\n          this.getPropertyServiceRunning = true;\r\n          return this.propertiesService.getPropertyById$(this.user.email, data.propertyId);\r\n        }\r\n      })\r\n    ).subscribe((property: Property) => {\r\n      if (property) {\r\n        this.populateModel(property);\r\n      }\r\n      \r\n      this.getPropertyServiceRunning = false;\r\n    },\r\n    (error: any) => {\r\n      this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > `, error);\r\n      if (error.codeno === 400) {\r\n        this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n      } else if (error.codeno === 461 || error.codeno === 462) {\r\n        this.appService.showResults(error.msg, 'error');\r\n        this.router.navigate(['/welcome']);\r\n      } else {\r\n        this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n      }\r\n\r\n      this.getPropertyServiceRunning = false;\r\n    });\r\n    this.subscription.add(newSubscription);\r\n\r\n    // get TYPE parameter\r\n    this.route.paramMap.pipe(map((params: ParamMap) => params.get('type'))).subscribe(type => {\r\n      if (![PROPERTY_TYPES.HOUSE].includes(type)) {\r\n        this.appService.showResults('You must provide a valid property type to continue.', 'error');\r\n        this.router.navigate(['welcome']);\r\n      } else {\r\n        this.type = type;\r\n        this.model.type = type;\r\n        this.model.propertyTypeData.buildingType = type;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Populates the model with the property as param\r\n   * @param { Property } property\r\n   */\r\n  populateModel(property: Property) {\r\n    const methodTrace = `${this.constructor.name} > populateModel() > `; // for debugging\r\n\r\n    this.property = property;\r\n    // populate the model\r\n    this.model.address = property.address;\r\n    this.model.askingPrice = property.askingPrice;\r\n    this.model.askingPriceUnit = property.askingPriceUnit;\r\n    this.model.offerPrice = property.offerPrice;\r\n    this.model.offerPriceUnit = property.offerPriceUnit;\r\n    this.model.walkAwayPrice = property.walkAwayPrice;\r\n    this.model.walkAwayPriceUnit = property.walkAwayPriceUnit;\r\n    this.model.purchasePrice = property.purchasePrice;\r\n    this.model.purchasePriceUnit = property.purchasePriceUnit;\r\n    this.model.purchasePrice2 = property.purchasePrice2;\r\n    this.model.purchasePrice2Unit = property.purchasePrice2Unit;\r\n    this.model.purchasePrice3 = property.purchasePrice3;\r\n    this.model.purchasePrice3Unit = property.purchasePrice3Unit;\r\n    this.model.purchasePrice4 = property.purchasePrice4;\r\n    this.model.purchasePrice4Unit = property.purchasePrice4Unit;\r\n    this.model.purchasePrice5 = property.purchasePrice5;\r\n    this.model.purchasePrice5Unit = property.purchasePrice5Unit;\r\n    this.model.dateListed = property.dateListed;\r\n    this.model.reasonForSelling = property.reasonForSelling;\r\n    this.model.marketValue = property.marketValue;\r\n    this.model.marketValueUnit = property.marketValueUnit;\r\n    this.model.renovationCost = property.renovationCost;\r\n    this.model.renovationCostUnit = property.renovationCostUnit;\r\n    this.model.maintenanceCost = property.maintenanceCost;\r\n    this.model.maintenanceCostUnit = property.maintenanceCostUnit;\r\n    this.model.description = property.description;\r\n    this.model.otherCost = property.otherCost;\r\n    this.model.otherCostUnit = property.otherCostUnit;\r\n    this.model.notes = property.notes;\r\n    this.model.type = property.type;\r\n\r\n    if (property instanceof House) {\r\n      this.model.propertyTypeData = {\r\n        buildingType : property.buildingType,\r\n        titleType : property.titleType,\r\n        landArea : property.landArea,\r\n        floorArea : property.floorArea,\r\n        registeredValue : property.registeredValue,\r\n        registeredValueUnit : property.registeredValueUnit,\r\n        rates : property.rates,\r\n        ratesUnit : property.ratesUnit,\r\n        insurance : property.insurance,\r\n        insuranceUnit : property.insuranceUnit,\r\n        capitalGrowth : property.capitalGrowth,\r\n        bedrooms : property.bedrooms,\r\n        bathrooms : property.bathrooms,\r\n        parkingSpaces : property.parkingSpaces,\r\n        fenced : property.fenced,\r\n        rented : property.rented,\r\n        rentPrice : property.rentPrice,\r\n        rentPriceUnit : property.rentPriceUnit,\r\n        rentPricePeriod : property.rentPricePeriod,\r\n        rentAppraisalDone : property.rentAppraisalDone,\r\n        vacancy : property.vacancy,\r\n        bodyCorporate : property.bodyCorporate,\r\n        bodyCorporateUnit : property.bodyCorporateUnit,\r\n        utilitiesCost : property.utilitiesCost,\r\n        utilitiesCostUnit : property.utilitiesCostUnit,\r\n        managed : property.managed,\r\n        managerRate : property.managerRate,\r\n        agent : property.agent\r\n      };\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    const methodTrace = `${this.constructor.name} > onSubmit() > `; // for debugging\r\n\r\n    this.editPropertyServiceRunning = true;\r\n\r\n    this.model.createdOn = new Date(Date.now());\r\n    this.model.updatedOn = new Date(Date.now());\r\n    // call the investment create service\r\n    const newSubscription = this.propertiesService.create$(this.model).subscribe(\r\n      (data: any) => {\r\n        if (data && data.id && data.type) {\r\n          this.appService.showResults(`Property successfully created!`, 'success');\r\n          this.router.navigate(['/properties/', data.type, 'edit', data.id]);\r\n        } else {\r\n          this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`);\r\n          this.editPropertyServiceRunning = false;\r\n        }\r\n      },\r\n      (error: any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error with the create/edit property service.`, error);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error with the property services, please try again in a few minutes.`, 'error');\r\n        }\r\n\r\n        this.editPropertyServiceRunning = false;\r\n      }\r\n    );\r\n\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n  onUpdate() {\r\n    const methodTrace = `${this.constructor.name} > onUpdate() > `; // for debugging\r\n\r\n    this.editPropertyServiceRunning = true;\r\n\r\n    this.model.updatedOn = new Date(Date.now());\r\n    // call the investment create service\r\n    const newSubscription = this.propertiesService.update$(this.model).subscribe(\r\n      (data: any) => {\r\n        if (data && data.id && data.type) {\r\n          this.appService.showResults(`Property successfully updated!`, 'success');\r\n        } else {\r\n          this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`);\r\n        }\r\n\r\n        this.editPropertyServiceRunning = false;\r\n      },\r\n      (error: any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error with the create/edit property service.`, error);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error with the property services, please try again in a few minutes.`, 'error');\r\n        }\r\n\r\n        this.editPropertyServiceRunning = false;\r\n      }\r\n    );\r\n\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n  onCurrencyUnitChange($event: MatSelectChange) {\r\n    this.model[$event.source.id] = $event.value;\r\n  }\r\n\r\n  onPropertyTypeDataChange($event: any) {\r\n    this.model.propertyTypeData = $event.value.model;\r\n    this.propertyTypeDataValid = $event.value.valid;\r\n  }\r\n\r\n  onAddressChange($event: any) {\r\n    this.model.address = $event.value.address;\r\n    this.addressValid = $event.value.valid;\r\n  }\r\n\r\n  includedFormsValid(): boolean {\r\n    return this.propertyTypeDataValid && this.addressValid;\r\n  }\r\n\r\n  openHouseResultsFiguresDialog() {\r\n    const methodTrace = `${this.constructor.name} > openHouseResultsFiguresDialog() > `; // for debugging\r\n\r\n    const houseFiguresDialogRef = this.dialog.open(HouseFiguresDialogComponent, {\r\n      data: {\r\n        model : this.model,\r\n        modelHouseFiguresResults : this.modelHouseFiguresResults\r\n      }\r\n    });\r\n\r\n    const newSubscription = houseFiguresDialogRef.afterClosed().subscribe(modelHouseFiguresResults => {\r\n      if (houseFiguresDialogRef.componentInstance.modelHouseFiguresResults) {\r\n        this.modelHouseFiguresResults = modelHouseFiguresResults;\r\n      }\r\n\r\n      this.showPropertyFiguresDialogSpinner = false;\r\n    });\r\n    this.subscription.add(newSubscription);\r\n    \r\n    return false;\r\n  }\r\n\r\n  openPropertyYieldsDialog() {\r\n    const methodTrace = `${this.constructor.name} > openPropertyYieldsDialog() > `; // for debugging\r\n\r\n    const propertyYieldsDialogRef = this.dialog.open(PropertyYieldsDialogComponent, {\r\n      data: {\r\n        model : this.model,\r\n      }\r\n    });\r\n\r\n    const newSubscription = propertyYieldsDialogRef.afterClosed().subscribe(dialogResult => {\r\n      if (propertyYieldsDialogRef.componentInstance.model) {\r\n        this.model = propertyYieldsDialogRef.componentInstance.model;\r\n      }\r\n\r\n      this.showPropertyYieldsDialogSpinner = false;\r\n    });\r\n    this.subscription.add(newSubscription);\r\n    \r\n    return false;\r\n  }\r\n}\r\n","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"container__properties-table\\\">\\r\\n  <section class=\\\"table__container\\\" [fxShow]=\\\"!getPropertiesServiceRunning && properties.length > 0\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n    <div class=\\\"table__overlay\\\" *ngIf=\\\"propertyTableActionRunning\\\">\\r\\n        <mat-spinner color=\\\"warn\\\"></mat-spinner>\\r\\n    </div>\\r\\n\\r\\n    <!-- Table fliter -->\\r\\n    <mat-form-field class=\\\"table-filter__input\\\">\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n    </mat-form-field>\\r\\n    \\r\\n    <mat-table #propertiesTable [dataSource]=\\\"propertiesDataSource\\\" matSort>\\r\\n  \\r\\n      <!-- Position Column -->\\r\\n      <ng-container matColumnDef=\\\"address\\\">\\r\\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Address</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"selection.select(element); goToPropertyEdit(element);\\\">{{element.address.description}}</mat-cell>\\r\\n      </ng-container>\\r\\n  \\r\\n      <ng-container matColumnDef=\\\"invest\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>Invest</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <button mat-mini-fab color=\\\"primary\\\" \\r\\n              routerLink=\\\"/investments/property/create/{{element.id}}\\\" \\r\\n              [disabled]=\\\"user.email !== element.createdBy.email\\\"\\r\\n              [matTooltip]=\\\"user.email !== element.createdBy.email ? 'Only the creator (' + element.createdBy.name + ') can perform this action' : ''\\\"\\r\\n              matTooltipPosition=\\\"left\\\"\\r\\n              (click)=\\\"propertyTableActionRunning = true\\\">\\r\\n            <mat-icon aria-label=\\\"Create investment\\\">trending_up</mat-icon>\\r\\n          </button>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n  \\r\\n      <ng-container matColumnDef=\\\"delete\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>Delete</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let element; let propertyIndex = index;\\\">\\r\\n          <button mat-mini-fab color=\\\"warn\\\" \\r\\n              [disabled]=\\\"user.email !== element.createdBy.email\\\"\\r\\n              [matTooltip]=\\\"user.email !== element.createdBy.email ? 'Only the creator (' + element.createdBy.name + ') can perform this action' : ''\\\"\\r\\n              matTooltipPosition=\\\"left\\\"\\r\\n              (click)=\\\"openDeleteTeamDialog(propertyIndex, element)\\\">\\r\\n            <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\r\\n          </button>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      \\r\\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"\\r\\n          [ngClass]=\\\"{ 'selected': selection.isSelected(row)}\\\"></mat-row>\\r\\n    </mat-table>\\r\\n  </section>\\r\\n  <mat-paginator [fxShow]=\\\"!getPropertiesServiceRunning && properties.length > 0\\\" #propertiesPaginator \\r\\n      [pageSize]=\\\"25\\\" \\r\\n      [showFirstLastButtons]=\\\"true\\\"\\r\\n      [pageSizeOptions]=\\\"[25, 50, 100]\\\">\\r\\n  </mat-paginator>\\r\\n  \\r\\n  <section *ngIf=\\\"!getPropertiesServiceRunning && properties.length == 0\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n    <mat-card fxFlex class=\\\"no-properties__card\\\">\\r\\n      <mat-card-content fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\"\\r\\n          fxLayoutAlign=\\\"space-around center\\\">\\r\\n        <p>You do not have any property yet.</p>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n    \\r\\n  </section>\\r\\n  \\r\\n  <progress-bar fxFlexAlign=\\\"center\\\" class=\\\"progress-bar--get-properties\\\" *ngIf=\\\"getPropertiesServiceRunning\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      message=\\\"Loading properties...\\\">\\r\\n  </progress-bar>\\r\\n  \\r\\n</div>\"","module.exports = \".table__container .table-filter__input {\\n  margin: 0 24px; }\\n\\n.table__container mat-table mat-row .mat-column-address {\\n  cursor: pointer; }\\n\\n.table__container mat-table .mat-row.selected {\\n  background: #69f0ae; }\\n\\n.table__container mat-table .mat-row.selected .mat-column-address {\\n    color: rgba(0, 0, 0, 0.87); }\\n\\n.no-properties__card {\\n  text-align: center; }\\n\\n.no-properties__card mat-card-content p {\\n    margin-bottom: 0; }\\n\\n.progress-bar--get-properties {\\n  width: 80%;\\n  margin: 0 24px; }\\n\\n@media screen and (min-width: 600px) {\\n  .table-filter__input {\\n    margin: 0; }\\n  .progress-bar--get-properties {\\n    width: 300px;\\n    margin: 0; } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wcm9wZXJ0aWVzL2NvbXBvbmVudHMvcHJvcGVydGllcy10YWJsZS9DOlxcdzNcXGF0b21pQ29jb251dFxcY2xpZW50L3NyY1xcYXBwXFxtb2R1bGVzXFxwcm9wZXJ0aWVzXFxjb21wb25lbnRzXFxwcm9wZXJ0aWVzLXRhYmxlXFxwcm9wZXJ0aWVzLXRhYmxlLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9tb2R1bGVzL3Byb3BlcnRpZXMvY29tcG9uZW50cy9wcm9wZXJ0aWVzLXRhYmxlL0M6XFx3M1xcYXRvbWlDb2NvbnV0XFxjbGllbnQvc3JjXFxfdmFyaWFibGVzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFHSSxlQUFjLEVBQ2Y7O0FBSkg7RUFTTSxnQkFBZSxFQUNoQjs7QUFWTDtFQWFNLG9CQ1BVLEVEWVg7O0FBbEJMO0lBZ0JRLDJCQUFzQixFQUN2Qjs7QUFNUDtFQUNFLG1CQUFrQixFQVFuQjs7QUFURDtJQU1NLGlCQUFnQixFQUNqQjs7QUFJTDtFQUNFLFdBQVU7RUFDVixlQUFjLEVBQ2Y7O0FBRUQ7RUFFRTtJQUNFLFVBQVMsRUFDVjtFQUVEO0lBQ0UsYUFBWTtJQUNaLFVBQVMsRUFDVixFQUFBIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9wcm9wZXJ0aWVzL2NvbXBvbmVudHMvcHJvcGVydGllcy10YWJsZS9wcm9wZXJ0aWVzLXRhYmxlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnLi4vLi4vLi4vLi4vLi4vdmFyaWFibGVzJztcclxuXHJcbi50YWJsZV9fY29udGFpbmVyIHtcclxuXHJcbiAgLnRhYmxlLWZpbHRlcl9faW5wdXQge1xyXG4gICAgbWFyZ2luOiAwIDI0cHg7XHJcbiAgfVxyXG5cclxuICBtYXQtdGFibGUge1xyXG4gICAgXHJcbiAgICBtYXQtcm93ICAubWF0LWNvbHVtbi1hZGRyZXNzIHtcclxuICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgfVxyXG5cclxuICAgIC5tYXQtcm93LnNlbGVjdGVkIHtcclxuICAgICAgYmFja2dyb3VuZDogJGFjY2VudDtcclxuICBcclxuICAgICAgLm1hdC1jb2x1bW4tYWRkcmVzcyB7XHJcbiAgICAgICAgY29sb3I6IHJnYmEoMCwwLDAsLjg3KTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICB9XHJcbn1cclxuXHJcbi5uby1wcm9wZXJ0aWVzX19jYXJkIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gIG1hdC1jYXJkLWNvbnRlbnQge1xyXG4gICAgXHJcbiAgICBwIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5wcm9ncmVzcy1iYXItLWdldC1wcm9wZXJ0aWVzIHtcclxuICB3aWR0aDogODAlO1xyXG4gIG1hcmdpbjogMCAyNHB4O1xyXG59XHJcblxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkc2NyZWVuR3RYcykge1xyXG5cclxuICAudGFibGUtZmlsdGVyX19pbnB1dCB7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgfVxyXG5cclxuICAucHJvZ3Jlc3MtYmFyLS1nZXQtcHJvcGVydGllcyB7XHJcbiAgICB3aWR0aDogMzAwcHg7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgfVxyXG59IiwiLy9CcmVha3BvaW50c1xyXG4kc2NyZWVuR3RYczogNjAwcHg7XHJcbiRzY3JlZW5HdFNtOiA5NjBweDsgXHJcblxyXG5cclxuLy9Db2xvcnNcclxuJHByaW1hcnk6ICM3YjFmYTI7XHJcbiRzZWNvbmRhcnk6IHJnYigxNTYsIDM5LCAxNzYpO1xyXG4kYWNjZW50OiAjNjlmMGFlO1xyXG4kd2FybiA6ICNmNDQzMzY7XHJcbiRwdXJwbGUgOiAkcHJpbWFyeTtcclxuJHB1cnBsZUZvbnRzIDogI0MzNTJGMztcclxuJGdyZWVuOiAjMjhGRTdDO1xyXG4kcmVkOiAjZmY1MjcxO1xyXG4kbGlnaHRPcmFuZ2UgOiByZ2JhKDI1NSwgMTg3LCAwLCAwLjg3KTtcclxuJGFsbW9zdFdoaXRlIDogcmdiYSgyNTUsMjU1LDI1NSwuODcpO1xyXG4kYWxtb3N0QmxhY2sgOiByZ2JhKDAsMCwwLC44Nyk7Il19 */\"","import { Component, OnInit, OnDestroy, ViewChild, Input, Output, EventEmitter, AfterViewInit } from '@angular/core';\r\nimport { User } from '../../../users/models/user';\r\nimport { Property } from '../../models/property';\r\nimport { MatTable, MatPaginator, MatTableDataSource, MatDialog, MatSort } from '@angular/material';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppService } from '../../../../app.service';\r\nimport { PropertiesService } from '../../properties.service';\r\nimport { YesNoDialogComponent } from '../../../shared/components/yes-no-dialog/yes-no-dialog.component';\r\nimport { SelectionModel, SelectionChange } from '@angular/cdk/collections';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'properties-table',\r\n  templateUrl: './properties-table.component.html',\r\n  styleUrls: ['./properties-table.component.scss']\r\n})\r\nexport class PropertiesTableComponent implements OnInit, OnDestroy, AfterViewInit {\r\n  \r\n  @Input() user: User = null;\r\n  @Input() showActions = true; // if false we hide FAB buttons\r\n  @Input() allowEdition = true; // if false we don't redirect to property edit component when click on adrdresss\r\n  @Input() loadJustUserProperties = false; // if false when it get properties loads current user properties plus properties of investments where the user has a portion of it.\r\n\r\n  @Output() selectedProperty: EventEmitter<Property> = new EventEmitter();\r\n  @Output() onPropertiesLoad: EventEmitter<number> = new EventEmitter();\r\n  \r\n  @ViewChild('propertiesPaginator') propertiesTablePaginator: MatPaginator;\r\n  @ViewChild(MatSort) propertiesSort: MatSort;\r\n  \r\n  properties: Property[] = [];\r\n  propertiesDataSource: MatTableDataSource<Property> = new MatTableDataSource([]);\r\n  selection = new SelectionModel<Property>(false, []);\r\n\r\n  subscription: Subscription = new Subscription();\r\n  getPropertiesServiceRunning = false;\r\n  propertyTableActionRunning = false;\r\n  displayedColumns: string[] = [];\r\n\r\n  constructor(private appService: AppService, private propertiesService: PropertiesService, public dialog: MatDialog, private router: Router) { }\r\n\r\n\r\n  ngOnInit() {\r\n    const methodTrace = `${this.constructor.name} > ngOnInit() > `; // for debugging\r\n\r\n    this.displayedColumns = ['address'];\r\n    if (this.showActions) {\r\n      this.displayedColumns = this.displayedColumns.concat(['invest', 'delete']);\r\n    }\r\n\r\n    if (!this.properties.length) {\r\n      this.getProperties();\r\n    }\r\n\r\n    // selection changed\r\n    const newSubcription: Subscription = this.selection.onChange.subscribe((selectionChange: SelectionChange<Property>) => {\r\n        this.selectedProperty.emit(this.selection.selected[0]);\r\n    });\r\n    this.subscription.add(newSubcription);\r\n\r\n    // set filter predicate function to look just in the address field\r\n    this.propertiesDataSource.filterPredicate = (data: Property, filter: string) => {\r\n      const address = data.address.description.toLowerCase().trim();\r\n      const filterStr = filter.toLowerCase().trim(); \r\n      if (address.indexOf(filterStr) > -1) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    };\r\n\r\n    // this is needed because for fields where the header does not match the property of the data for sorting as address <> description\r\n    this.propertiesDataSource.sortingDataAccessor = (data: Property, sortHeaderId: string) => {\r\n      if (sortHeaderId === 'address') {\r\n        return data.address.description;\r\n      }\r\n\r\n      return 1;\r\n    };\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.propertiesDataSource.sort = this.propertiesSort;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    const methodTrace = `${this.constructor.name} > ngOnDestroy() > `; // for debugging\r\n\r\n    // this.appService.consoleLog('info', `${methodTrace} Component destroyed.`);\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Get my properties from the server\r\n   */\r\n  getProperties() {\r\n    const methodTrace = `${this.constructor.name} > getProperties() > `; // for debugging\r\n\r\n    this.properties = [];\r\n    this.propertiesDataSource.data = [];\r\n    this.propertiesDataSource.paginator = this.propertiesTablePaginator;\r\n\r\n    this.getPropertiesServiceRunning = true;\r\n    \r\n    const newSubscription = this.propertiesService.getProperties$(this.user.email, this.loadJustUserProperties).subscribe(\r\n      (properties: Property[]) => {\r\n        this.properties = properties;\r\n        this.propertiesDataSource.data = properties;\r\n        this.propertiesDataSource.paginator = this.propertiesTablePaginator;\r\n\r\n        this.getPropertiesServiceRunning = false;\r\n        this.onPropertiesLoad.emit(properties.length);\r\n      },\r\n      (error: any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n        } else {\r\n          this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n        }\r\n\r\n        this.getPropertiesServiceRunning = false;\r\n      }\r\n    );\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n  goToPropertyEdit(property: Property) {\r\n    if (this.allowEdition) {\r\n      this.propertyTableActionRunning = true;\r\n      this.router.navigate(['/properties', property.type, 'edit', property.id]);\r\n    }\r\n  }\r\n\r\n  openDeleteTeamDialog(indexInPage: number, property: Property = null) {\r\n    const methodTrace = `${this.constructor.name} > openDeleteTeamDialog() > `; // for debugging\r\n    \r\n    if (!property) {\r\n      this.appService.consoleLog('error', `${methodTrace} Property is required to delete.`);\r\n      return false;\r\n    }\r\n\r\n    // map the index in the table to the indes in the properties array\r\n    let index = indexInPage + this.propertiesTablePaginator.pageIndex * this.propertiesTablePaginator.pageSize;\r\n    if (this.propertiesSort.direction === 'desc') {\r\n      index = (-1) * (index + 1); // add one to index and invert sign\r\n    }\r\n\r\n\r\n    this.propertyTableActionRunning = true;\r\n    const yesNoDialogRef = this.dialog.open(YesNoDialogComponent, {\r\n      width: '250px',\r\n      data: {\r\n        title : 'Delete property', \r\n        message : `Are you sure you want to delete this property forever?`\r\n      }\r\n    });\r\n\r\n    const newSubscription = yesNoDialogRef.afterClosed().subscribe(result => {\r\n      if (result === 'yes') {\r\n        this.delete(index, property);\r\n      } else {\r\n        this.propertyTableActionRunning = false;\r\n      }\r\n    });\r\n    this.subscription.add(newSubscription);\r\n\r\n    return false;\r\n  }\r\n\r\n  delete(index: number, propertyToDelete: Property = null) {\r\n    const methodTrace = `${this.constructor.name} > delete() > `; // for debugging\r\n\r\n    this.propertyTableActionRunning = true;\r\n\r\n    const newSuscription = this.propertiesService.delete$(propertyToDelete.id, this.user.email).subscribe(\r\n      (data: any) => {\r\n        if (data && data.removed > 0) {\r\n          if (!this.propertiesDataSource.filter.length) {\r\n            // data is not filtered, proceed with the easy way\r\n            this.properties.splice(index, 1);\r\n          } else {\r\n            // filtered data, we need to search for the property in order to removeit from the view\r\n            let propertyIndex = 0;\r\n            for (const property of this.properties) {\r\n              if (property.id === propertyToDelete.id) {\r\n                break;\r\n              }\r\n\r\n              propertyIndex += 1;\r\n            }\r\n\r\n            this.properties.splice(propertyIndex, 1);\r\n          }\r\n          \r\n          this.propertiesDataSource.data = this.properties;\r\n          this.appService.showResults(`Property successfully removed!`, 'success');\r\n        } else {\r\n          this.appService.showResults(`Property could not be removed, please try again.`, 'error');\r\n        }\r\n\r\n        this.propertyTableActionRunning = false;\r\n      },\r\n      (error: any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n        } else if (error.codeno === 475) {\r\n          // property associated to an investment\r\n          this.appService.showResults(error.msg, 'error', 7000);\r\n        } else if (error.codeno === 462) {\r\n          this.appService.showResults(`You cannot delete this property because you are not the creator of it. Ask ${error.data.creator.name} to do it.`, 'error');\r\n        } else {\r\n          this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n        }\r\n\r\n        this.propertyTableActionRunning = false;\r\n      }\r\n    );\r\n    this.subscription.add(newSuscription);\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\r\n    this.propertiesDataSource.filter = filterValue; // apply filter\r\n  }\r\n}\r\n","module.exports = \"<h2 mat-dialog-title>Select a property</h2>\\r\\n\\r\\n<mat-dialog-content>\\r\\n  <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"none center\\\" class=\\\"container__yes-no-dialog\\\">\\r\\n    <properties-table [user]=\\\"data.user\\\" \\r\\n        [showActions]=\\\"false\\\" \\r\\n        [allowEdition]=\\\"false\\\"\\r\\n        [loadJustUserProperties]=\\\"true\\\" \\r\\n        (selectedProperty)=\\\"onPropertySelected($event)\\\"\\r\\n        (onPropertiesLoad)=\\\"onPropertiesLoad($event)\\\"></properties-table>\\r\\n      \\r\\n    <a *ngIf=\\\"showLinkToProperties\\\" class=\\\"color__almost-white go-to-properties\\\" (click)=\\\"dialogRef.close(null)\\\" routerLink=\\\"/properties/house/create\\\">\\r\\n      <mat-icon class=\\\"icon--arrow_forward\\\">arrow_forward</mat-icon>\\r\\n      Go and add one...\\r\\n    </a>\\r\\n  </div>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"space-around center\\\">\\r\\n  <button mat-mini-fab color=\\\"warn\\\" [mat-dialog-close]=\\\"null\\\">\\r\\n    <mat-icon aria-label=\\\"No\\\">clear</mat-icon>\\r\\n  </button>\\r\\n</mat-dialog-actions>\"","module.exports = \".mat-dialog-content properties-table {\\n  margin: 0 -24px; }\\n\\n.mat-dialog-content .go-to-properties {\\n  margin-top: 10px; }\\n\\n.mat-dialog-content .go-to-properties .icon--arrow_forward {\\n    float: left; }\\n\\n@media screen and (min-width: 600px) {\\n  .mat-dialog-content properties-table {\\n    margin: 0; } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wcm9wZXJ0aWVzL2NvbXBvbmVudHMvcHJvcGVydHktc2VsZWN0b3ItZGlhbG9nL0M6XFx3M1xcYXRvbWlDb2NvbnV0XFxjbGllbnQvc3JjXFxhcHBcXG1vZHVsZXNcXHByb3BlcnRpZXNcXGNvbXBvbmVudHNcXHByb3BlcnR5LXNlbGVjdG9yLWRpYWxvZ1xccHJvcGVydHktc2VsZWN0b3ItZGlhbG9nLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBR0ksZ0JBQWUsRUFDaEI7O0FBSkg7RUFPSSxpQkFBZ0IsRUFLakI7O0FBWkg7SUFVTSxZQUFXLEVBQ1o7O0FBSUw7RUFFRTtJQUNFLFVBQVMsRUFDVixFQUFBIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9wcm9wZXJ0aWVzL2NvbXBvbmVudHMvcHJvcGVydHktc2VsZWN0b3ItZGlhbG9nL3Byb3BlcnR5LXNlbGVjdG9yLWRpYWxvZy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJy4uLy4uLy4uLy4uLy4uL3ZhcmlhYmxlcyc7XHJcblxyXG4ubWF0LWRpYWxvZy1jb250ZW50IHtcclxuICBcclxuICBwcm9wZXJ0aWVzLXRhYmxlIHtcclxuICAgIG1hcmdpbjogMCAtMjRweDtcclxuICB9XHJcblxyXG4gIC5nby10by1wcm9wZXJ0aWVzIHtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcblxyXG4gICAgLmljb24tLWFycm93X2ZvcndhcmQge1xyXG4gICAgICBmbG9hdDogbGVmdDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRzY3JlZW5HdFhzKSB7XHJcbiAgXHJcbiAgLm1hdC1kaWFsb2ctY29udGVudCBwcm9wZXJ0aWVzLXRhYmxle1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gIH1cclxufVxyXG5cclxuXHJcbiJdfQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-property-selector-dialog',\r\n  templateUrl: './property-selector-dialog.component.html',\r\n  styleUrls: ['./property-selector-dialog.component.scss']\r\n})\r\nexport class PropertySelectorDialogComponent implements OnInit {\r\n\r\n  showLinkToProperties : boolean = false;\r\n\r\n  constructor(public dialogRef: MatDialogRef<PropertySelectorDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n  \r\n  ngOnInit() { }\r\n\r\n  onPropertySelected($event) {\r\n    this.dialogRef.close($event);\r\n  }\r\n\r\n  onPropertiesLoad($event) {\r\n    this.showLinkToProperties = $event <= 0;\r\n  }\r\n\r\n}\r\n","module.exports = \"<!-- <h2 mat-dialog-title></h2> -->\\r\\n<mat-dialog-content>\\r\\n  <section fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"dialog__property-yields\\\">\\r\\n    <form class=\\\"form__container form__property-yields\\\" #propertyYieldsDialogForm=\\\"ngForm\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" >\\r\\n      <section fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields\\\">\\r\\n        <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields__row__container\\\">\\r\\n          <h3 class=\\\"title\\\">\\r\\n            <!-- <p class=\\\"header\\\">Figures extra info</p> -->\\r\\n            <p class=\\\"mat-caption\\\">Play with different purchase prices to get gross/net yields for each of them. Keep the same unit as the rent and expenses</p>\\r\\n            <p class=\\\"mat-caption color__almost-white\\\">Rent: {{rentPrice}} \\\"{{rentPricePeriod}}\\\" | Purchase price: {{model.purchasePriceUnit}}{{purchasePrice}} | Gross yield: {{grossYield | percent : '1.1-2'}} | Net yield: {{netYield | percent : '1.1-2'}}</p>\\r\\n          </h3>\\r\\n\\r\\n          <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n            <!-- Purchase price 2 -->\\r\\n            <mat-form-field fxFlex fxFlex.sm=\\\"120px\\\" fxFlex.md=\\\"140px\\\" fxFlex.gt-md=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n              <input matInput type=\\\"number\\\" id=\\\"purchasePrice2\\\" name=\\\"purchasePrice2\\\" placeholder=\\\"Purchase price 2\\\"\\r\\n                  [(ngModel)]=\\\"model.purchasePrice2\\\" \\r\\n                  [value]=\\\"model.purchasePrice2\\\"\\r\\n                  numberValidator\\r\\n                  #purchasePrice2=\\\"ngModel\\\">\\r\\n              \\r\\n              <mat-error *ngIf=\\\"purchasePrice2.invalid && (purchasePrice2.dirty || purchasePrice2.touched) && purchasePrice2.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n              <info-tooltip\\r\\n                  title=\\\"Gross yield\\\" \\r\\n                  text=\\\"Ratio between Gross annual rent / purchase price (as percentage)\\\"\\r\\n                  position=\\\"right\\\"></info-tooltip>\\r\\n              <span>{{grossYield2 | percent : '1.1-2'}}</span>\\r\\n\\r\\n              <info-tooltip \\r\\n                  title=\\\"Net yield\\\" \\r\\n                  text=\\\"Ratio between (Net annual rent - Expenses) / Purchase price * 100\\\"\\r\\n                  position=\\\"right\\\"></info-tooltip>\\r\\n              <span>{{netYield2 | percent : '1.1-2'}}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n            <!-- Purchase price 3 -->\\r\\n            <mat-form-field fxFlex fxFlex.sm=\\\"120px\\\" fxFlex.md=\\\"140px\\\" fxFlex.gt-md=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n              <input matInput type=\\\"number\\\" id=\\\"purchasePrice3\\\" name=\\\"purchasePrice3\\\" placeholder=\\\"Purchase price 3\\\"\\r\\n                  [(ngModel)]=\\\"model.purchasePrice3\\\" \\r\\n                  [value]=\\\"model.purchasePrice3\\\"\\r\\n                  numberValidator\\r\\n                  #purchasePrice3=\\\"ngModel\\\">\\r\\n              \\r\\n              <mat-error *ngIf=\\\"purchasePrice3.invalid && (purchasePrice3.dirty || purchasePrice3.touched) && purchasePrice3.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n              <info-tooltip\\r\\n                  title=\\\"Gross yield\\\" \\r\\n                  text=\\\"Ratio between Gross annual rent / purchase price (as percentage)\\\"\\r\\n                  position=\\\"right\\\"></info-tooltip>\\r\\n              <span>{{grossYield3 | percent : '1.1-2'}}</span>\\r\\n\\r\\n              <info-tooltip \\r\\n                  title=\\\"Net yield\\\" \\r\\n                  text=\\\"Ratio between (Net annual rent - Expenses) / Purchase price * 100\\\"\\r\\n                  position=\\\"right\\\"></info-tooltip>\\r\\n              <span>{{netYield3 | percent : '1.1-2'}}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n            <!-- Purchase price 4 -->\\r\\n            <mat-form-field fxFlex fxFlex.sm=\\\"120px\\\" fxFlex.md=\\\"140px\\\" fxFlex.gt-md=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n              <input matInput type=\\\"number\\\" id=\\\"purchasePrice4\\\" name=\\\"purchasePrice4\\\" placeholder=\\\"Purchase price 4\\\"\\r\\n                  [(ngModel)]=\\\"model.purchasePrice4\\\" \\r\\n                  [value]=\\\"model.purchasePrice4\\\"\\r\\n                  numberValidator\\r\\n                  #purchasePrice4=\\\"ngModel\\\">\\r\\n              \\r\\n              <mat-error *ngIf=\\\"purchasePrice4.invalid && (purchasePrice4.dirty || purchasePrice4.touched) && purchasePrice4.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n              <info-tooltip\\r\\n                  title=\\\"Gross yield\\\" \\r\\n                  text=\\\"Ratio between Gross annual rent / purchase price (as percentage)\\\"\\r\\n                  position=\\\"right\\\"></info-tooltip>\\r\\n              <span>{{grossYield4 | percent : '1.1-2'}}</span>\\r\\n\\r\\n              <info-tooltip \\r\\n                  title=\\\"Net yield\\\" \\r\\n                  text=\\\"Ratio between (Net annual rent - Expenses) / Purchase price * 100\\\"\\r\\n                  position=\\\"right\\\"></info-tooltip>\\r\\n              <span>{{netYield4 | percent : '1.1-2'}}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n            <!-- Purchase price 5 -->\\r\\n            <mat-form-field fxFlex fxFlex.sm=\\\"120px\\\" fxFlex.md=\\\"140px\\\" fxFlex.gt-md=\\\"200px\\\" class=\\\"form__field\\\">\\r\\n              <input matInput type=\\\"number\\\" id=\\\"purchasePrice5\\\" name=\\\"purchasePrice5\\\" placeholder=\\\"Purchase price 5\\\"\\r\\n                  [(ngModel)]=\\\"model.purchasePrice5\\\" \\r\\n                  [value]=\\\"model.purchasePrice5\\\"\\r\\n                  numberValidator\\r\\n                  #purchasePrice5=\\\"ngModel\\\">\\r\\n              \\r\\n              <mat-error *ngIf=\\\"purchasePrice5.invalid && (purchasePrice5.dirty || purchasePrice5.touched) && purchasePrice5.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n              <info-tooltip\\r\\n                  title=\\\"Gross yield\\\" \\r\\n                  text=\\\"Ratio between Gross annual rent / purchase price (as percentage)\\\"\\r\\n                  position=\\\"right\\\"></info-tooltip>\\r\\n              <span>{{grossYield5 | percent : '1.1-2'}}</span>\\r\\n\\r\\n              <info-tooltip \\r\\n                  title=\\\"Net yield\\\" \\r\\n                  text=\\\"Ratio between (Net annual rent - Expenses) / Purchase price * 100\\\"\\r\\n                  position=\\\"right\\\"></info-tooltip>\\r\\n              <span>{{netYield5 | percent : '1.1-2'}}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </section>\\r\\n    </form>\\r\\n  </section>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"space-around center\\\">\\r\\n  <button mat-mini-fab color=\\\"warn\\\" mat-dialog-close>\\r\\n    <mat-icon aria-label=\\\"No\\\">clear</mat-icon>\\r\\n  </button>\\r\\n</mat-dialog-actions>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcHJvcGVydGllcy9jb21wb25lbnRzL3Byb3BlcnR5LXlpZWxkcy1kaWFsb2cvcHJvcGVydHkteWllbGRzLWRpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject, ViewChild, AfterViewInit, OnDestroy } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatSelectChange } from '@angular/material';\r\nimport { PROPERTY_TYPES } from '../../../../constants';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'property-yields-dialog',\r\n  templateUrl: './property-yields-dialog.component.html',\r\n  styleUrls: ['./property-yields-dialog.component.scss']\r\n})\r\nexport class PropertyYieldsDialogComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n  @ViewChild('propertyYieldsDialogForm') form;\r\n  model: any = {};\r\n  formChangesSubscription: any = null;\r\n  subscription: Subscription = new Subscription();\r\n\r\n  purchasePrice = 0;\r\n  purchasePrice2 = 0;\r\n  purchasePrice3 = 0;\r\n  purchasePrice4 = 0;\r\n  purchasePrice5 = 0;\r\n  grossYield = 0;\r\n  netYield = 0;\r\n  grossYield2 = 0;\r\n  netYield2 = 0;\r\n  grossYield3 = 0;\r\n  netYield3 = 0;\r\n  grossYield4 = 0;\r\n  netYield4 = 0;\r\n  grossYield5 = 0;\r\n  netYield5 = 0;\r\n  grossAnnualRent = 0;\r\n  netAnnualRent = 0;\r\n  expenses = 0;\r\n  weeklyRent = 0;\r\n  rentPrice = 0;\r\n  rentPricePeriod = 'weekly';\r\n  vacancy = 0;\r\n  renovationCost = 0;\r\n  maintenanceCost = 0;\r\n  bodyCorporate = 0;\r\n  rates = 0;\r\n  utilitiesCost = 0;\r\n  insurance = 0;\r\n  otherCost = 0;\r\n  managerRate = 0;\r\n\r\n  constructor(public dialogRef: MatDialogRef<PropertyYieldsDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n    this.model = data.model;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initValues();\r\n    this.calculateYields();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    const methodTrace = `${this.constructor.name} > ngOnDestroy() > `; // for debugging\r\n    \r\n    // this.appService.consoleLog('info', `${methodTrace} Component destroyed.`);\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  initValues() {\r\n    const methodTrace = `${this.constructor.name} > initValues() > `; // for debugging\r\n\r\n    // set the same purchasePrice unit to every purchase price field\r\n    this.model.purchasePrice2Unit = this.model.purchasePrice3Unit = this.model.purchasePrice4Unit = this.model.purchasePrice5Unit = this.model.purchasePriceUnit;\r\n    this.purchasePrice = this.model.purchasePrice || 0;\r\n    this.purchasePrice2 = this.model.purchasePrice2 || 0;\r\n    this.purchasePrice3 = this.model.purchasePrice3 || 0;\r\n    this.purchasePrice4 = this.model.purchasePrice4 || 0;\r\n    this.purchasePrice5 = this.model.purchasePrice5 || 0;\r\n    \r\n    this.rentPrice = this.model.propertyTypeData.rentPrice || 0;\r\n    this.rentPricePeriod = this.model.propertyTypeData.rentPricePeriod || 'weekly';\r\n    this.vacancy = this.model.propertyTypeData.vacancy || 0;\r\n    this.renovationCost = this.model.renovationCost || 0;\r\n    this.maintenanceCost = this.model.maintenanceCost || 0;\r\n    this.bodyCorporate = this.model.propertyTypeData.bodyCorporate || 0;\r\n    this.rates = this.model.propertyTypeData.rates || 0;\r\n    this.utilitiesCost = this.model.propertyTypeData.utilitiesCost || 0;\r\n    this.insurance = this.model.propertyTypeData.insurance || 0;\r\n    this.otherCost = this.model.otherCost || 0;\r\n    this.managerRate = this.model.propertyTypeData.managed ? this.model.propertyTypeData.managerRate || 0 : 0;\r\n  }\r\n\r\n  calculateYields() {\r\n    const methodTrace = `${this.constructor.name} > calculateYields() > `; // for debugging\r\n\r\n    this.weeklyRent = this.getRentPricePerWeek();\r\n    this.grossAnnualRent = this.weeklyRent * 52;\r\n    this.netAnnualRent = this.grossAnnualRent - this.weeklyRent * this.vacancy;\r\n    this.expenses = this.renovationCost + this.maintenanceCost + this.bodyCorporate + this.rates\r\n        + this.utilitiesCost + this.insurance + this.otherCost \r\n        + this.netAnnualRent * (this.managerRate / 100);\r\n    \r\n    this.grossYield = this.grossAnnualRent / this.purchasePrice;\r\n    this.netYield = (this.netAnnualRent - this.expenses) / this.purchasePrice;\r\n    this.grossYield2 = this.grossAnnualRent / this.purchasePrice2;\r\n    this.netYield2 = (this.netAnnualRent - this.expenses) / this.purchasePrice2;\r\n    this.grossYield3 = this.grossAnnualRent / this.purchasePrice3;\r\n    this.netYield3 = (this.netAnnualRent - this.expenses) / this.purchasePrice3;\r\n    this.grossYield4 = this.grossAnnualRent / this.purchasePrice4;\r\n    this.netYield4 = (this.netAnnualRent - this.expenses) / this.purchasePrice4;\r\n    this.grossYield5 = this.grossAnnualRent / this.purchasePrice5;\r\n    this.netYield5 = (this.netAnnualRent - this.expenses) / this.purchasePrice5;\r\n  }\r\n\r\n  /**\r\n   * Calculates the price per week.\r\n   * \r\n   * @returns { number } . Rent price per week\r\n   */\r\n  getRentPricePerWeek(): number {\r\n    let price = 0;\r\n    \r\n    if (this.rentPrice) {\r\n      price = this.rentPricePeriod === 'monthly' ? this.rentPrice * 12 / 52 : this.rentPrice;\r\n    }\r\n    \r\n    return price;\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.form && !this.formChangesSubscription) {\r\n      this.subscribeFormValueChanges();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This methods subscribes to changes on the main form in the view. Any time this form cnges we recalculate the yields values\r\n   */\r\n  subscribeFormValueChanges() {\r\n    this.formChangesSubscription = this.form.valueChanges.pipe(\r\n      debounceTime(500)\r\n    ).subscribe(values => {\r\n      this.initValues();\r\n      this.calculateYields();\r\n    });\r\n\r\n    this.subscription.add(this.formChangesSubscription);\r\n  }\r\n}\r\n","export class Address {\r\n\r\n  description : string;\r\n  mapsPlaceId : string;\r\n  latitude : number;\r\n  longitude : number;\r\n\r\n  constructor(description : string = null, latitude : number = null, longitude : number = null, mapsPlaceId : string = null) {\r\n    \r\n    this.description = description;\r\n    this.latitude = latitude;\r\n    this.longitude = longitude;\r\n    this.mapsPlaceId = mapsPlaceId;\r\n  }\r\n}","import { User } from '../../users/models/user';\r\nimport { Property } from './property';\r\nimport { Address } from './address';\r\n\r\nexport class House extends Property {\r\n\r\n  buildingType: 'house'  | 'unit' | 'apartment';\r\n  titleType: string;\r\n  landArea: number; // square meters\r\n  floorArea: number; // square meters\r\n  registeredValue: number;\r\n  registeredValueUnit: string;\r\n  rates: number;\r\n  ratesUnit: string;\r\n  insurance: number;\r\n  insuranceUnit: string;\r\n  capitalGrowth: number;\r\n  bedrooms: number;\r\n  bathrooms: number;\r\n  parkingSpaces: number;\r\n  fenced: boolean;\r\n  rented: boolean;\r\n  rentPrice: number;\r\n  rentPriceUnit: string;\r\n  rentPricePeriod: 'week' | 'month';\r\n  rentAppraisalDone: boolean;\r\n  vacancy: number;\r\n  bodyCorporate: number;\r\n  bodyCorporateUnit: string;\r\n  utilitiesCost: number;\r\n  utilitiesCostUnit: string;\r\n  managed: boolean;\r\n  managerRate: number;\r\n  agent: string; // this must be a contact in a contact persons module like networking\r\n  \r\n\r\n  constructor(\r\n      id: string = null,\r\n      type: 'house' = 'house',\r\n      address: Address = null,\r\n      createdBy: User = null,\r\n      landArea: number = null,\r\n      floorArea: number = null,\r\n      askingPrice: number = null,\r\n      askingPriceUnit: string = null,\r\n      offerPrice: number = null,\r\n      offerPriceUnit: string = null,\r\n      walkAwayPrice: number = null,\r\n      walkAwayPriceUnit: string = null,\r\n      purchasePrice: number = null,\r\n      purchasePriceUnit: string = null,\r\n      purchasePrice2: number = null,\r\n      purchasePrice2Unit: string = null,\r\n      purchasePrice3: number = null,\r\n      purchasePrice3Unit: string = null,\r\n      purchasePrice4: number = null,\r\n      purchasePrice4Unit: string = null,\r\n      purchasePrice5: number = null,\r\n      purchasePrice5Unit: string = null,\r\n      dateListed: Date = null,\r\n      reasonForSelling: string = null,\r\n      marketValue: number = null,\r\n      marketValueUnit: string = null,\r\n      registeredValue: number = null,\r\n      registeredValueUnit: string = null,\r\n      rates: number = null,\r\n      ratesUnit: string = null,\r\n      insurance: number = null,\r\n      insuranceUnit: string = null,\r\n      renovationCost: number = null,\r\n      renovationCostUnit: string = null,\r\n      maintenanceCost: number = null,\r\n      maintenanceCostUnit: string = null,\r\n      description: string = null,\r\n      otherCost: number = null,\r\n      otherCostUnit: string = null,\r\n      notes: string = null,\r\n      capitalGrowth: number = null,\r\n      bedrooms: number = null,\r\n      bathrooms: number = null,\r\n      parkingSpaces: number = null,\r\n      fenced: boolean = false,\r\n      rented: boolean = false,\r\n      rentPrice: number = null,\r\n      rentPriceUnit: string= null,\r\n      rentPricePeriod: 'week' | 'month' = 'week',\r\n      rentAppraisalDone: boolean = false,\r\n      vacancy: number = null,\r\n      bodyCorporate: number = null,\r\n      bodyCorporateUnit: string= null,\r\n      utilitiesCost: number = null,\r\n      utilitiesCostUnit: string= null,\r\n      agent: string,\r\n      managed: boolean = false,\r\n      managerRate: number = null,\r\n      buildingType: 'house'  | 'unit' | 'apartment' = 'house',\r\n      titleType: string = null) {\r\n    \r\n    super(id, type, address, createdBy, askingPrice, askingPriceUnit, offerPrice, offerPriceUnit,\r\n        walkAwayPrice, walkAwayPriceUnit, purchasePrice, purchasePriceUnit, purchasePrice2, purchasePrice2Unit, purchasePrice3, \r\n        purchasePrice3Unit, purchasePrice4, purchasePrice4Unit, purchasePrice5, purchasePrice5Unit, dateListed, reasonForSelling, marketValue,\r\n        marketValueUnit, renovationCost, renovationCostUnit, maintenanceCost, maintenanceCostUnit, description, otherCost,\r\n        otherCostUnit, notes);\r\n    \r\n    this.landArea = landArea;\r\n    this.floorArea = floorArea;\r\n    this.registeredValue = registeredValue;\r\n    this.registeredValueUnit = registeredValueUnit;\r\n    this.rates = rates;\r\n    this.ratesUnit = ratesUnit;\r\n    this.insurance = insurance;\r\n    this.insuranceUnit = insuranceUnit;\r\n    this.capitalGrowth = capitalGrowth;\r\n    this.bedrooms = bedrooms;\r\n    this.bathrooms = bathrooms;\r\n    this.parkingSpaces = parkingSpaces;\r\n    this.fenced = fenced;\r\n    this.rented = rented;\r\n    this.rentPrice = rentPrice;\r\n    this.rentPriceUnit = rentPriceUnit;\r\n    this.rentPricePeriod = rentPricePeriod;\r\n    this.rentAppraisalDone = rentAppraisalDone;\r\n    this.vacancy = vacancy;\r\n    this.bodyCorporate = bodyCorporate;\r\n    this.bodyCorporateUnit = bodyCorporateUnit;\r\n    this.utilitiesCost = utilitiesCost;\r\n    this.utilitiesCostUnit = utilitiesCostUnit;\r\n    this.agent = agent;\r\n    this.managed = managed;\r\n    this.managerRate = managerRate;\r\n    this.buildingType = buildingType;\r\n    this.titleType = titleType;\r\n  }\r\n}\r\n","import { User } from '../../users/models/user';\r\nimport { Address } from './address';\r\n\r\nexport class Property {\r\n\r\n  id: string;\r\n  type: 'house' /*| 'building' | 'condo'*/;\r\n  address: Address;\r\n  createdBy: User;\r\n  askingPrice: number;\r\n  askingPriceUnit: string;\r\n  offerPrice: number;\r\n  offerPriceUnit: string;\r\n  walkAwayPrice: number;\r\n  walkAwayPriceUnit: string;\r\n  purchasePrice: number;\r\n  purchasePriceUnit: string;\r\n  purchasePrice2: number;\r\n  purchasePrice2Unit: string;\r\n  purchasePrice3: number;\r\n  purchasePrice3Unit: string;\r\n  purchasePrice4: number;\r\n  purchasePrice4Unit: string;\r\n  purchasePrice5: number;\r\n  purchasePrice5Unit: string;\r\n  dateListed: Date;\r\n  reasonForSelling: string;\r\n  marketValue: number;\r\n  marketValueUnit: string;\r\n  renovationCost: number;\r\n  renovationCostUnit: string;\r\n  maintenanceCost: number;\r\n  maintenanceCostUnit: string;\r\n  description: string;\r\n  otherCost: number;\r\n  otherCostUnit: string;\r\n  notes: string;\r\n\r\n  constructor(\r\n      id: string = null,\r\n      type: 'house' = 'house',\r\n      address: Address = null,\r\n      createdBy: User = null,\r\n      askingPrice: number = null,\r\n      askingPriceUnit: string = null,\r\n      offerPrice: number = null,\r\n      offerPriceUnit: string = null,\r\n      walkAwayPrice: number = null,\r\n      walkAwayPriceUnit: string = null,\r\n      purchasePrice: number = null,\r\n      purchasePriceUnit: string = null,\r\n      purchasePrice2: number = null,\r\n      purchasePrice2Unit: string = null,\r\n      purchasePrice3: number = null,\r\n      purchasePrice3Unit: string = null,\r\n      purchasePrice4: number = null,\r\n      purchasePrice4Unit: string = null,\r\n      purchasePrice5: number = null,\r\n      purchasePrice5Unit: string = null,\r\n      dateListed: Date = null,\r\n      reasonForSelling: string = null,\r\n      marketValue: number = null,\r\n      marketValueUnit: string = null,\r\n      renovationCost: number = null,\r\n      renovationCostUnit: string = null,\r\n      maintenanceCost: number = null,\r\n      maintenanceCostUnit: string = null,\r\n      description: string = null,\r\n      otherCost: number = null,\r\n      otherCostUnit: string = null,\r\n      notes: string = null) {\r\n    \r\n    this.id = id;\r\n    this.type = type;\r\n    this.address = address;\r\n    this.createdBy = createdBy;\r\n    this.askingPrice = askingPrice;\r\n    this.askingPriceUnit = askingPriceUnit;\r\n    this.offerPrice = offerPrice;\r\n    this.offerPriceUnit = offerPriceUnit;\r\n    this.walkAwayPrice = walkAwayPrice;\r\n    this.walkAwayPriceUnit = walkAwayPriceUnit;\r\n    this.purchasePrice = purchasePrice;\r\n    this.purchasePriceUnit = purchasePriceUnit;\r\n    this.purchasePrice2 = purchasePrice2;\r\n    this.purchasePrice2Unit = purchasePrice2Unit;\r\n    this.purchasePrice3 = purchasePrice3;\r\n    this.purchasePrice3Unit = purchasePrice3Unit;\r\n    this.purchasePrice4 = purchasePrice4;\r\n    this.purchasePrice4Unit = purchasePrice4Unit;\r\n    this.purchasePrice5 = purchasePrice5;\r\n    this.purchasePrice5Unit = purchasePrice5Unit;\r\n    this.dateListed = dateListed;\r\n    this.reasonForSelling = reasonForSelling;\r\n    this.marketValue = marketValue;\r\n    this.marketValueUnit = marketValueUnit;\r\n    this.renovationCost = renovationCost;\r\n    this.renovationCostUnit = renovationCostUnit;\r\n    this.maintenanceCost = maintenanceCost;\r\n    this.maintenanceCostUnit = maintenanceCostUnit;\r\n    this.description = description;\r\n    this.otherCost = otherCost;\r\n    this.otherCostUnit = otherCostUnit;\r\n    this.notes = notes;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PropertiesEditComponent } from './components/properties-edit/properties-edit.component';\r\nimport { AuthResolver } from '../../auth-resolver.service';\r\nimport { PropertiesDashboardComponent } from './components/properties-dashboard/properties-dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path : 'properties',\r\n    children : [\r\n      { \r\n        path : ':type/create', \r\n        component : PropertiesEditComponent,\r\n        resolve : {\r\n          authUser : AuthResolver\r\n        } \r\n      },\r\n      { \r\n        path : ':type/edit/:id', \r\n        component : PropertiesEditComponent,\r\n        resolve : {\r\n          authUser : AuthResolver\r\n        } \r\n      },\r\n      { \r\n        path : '', \r\n        pathMatch : 'full',\r\n        component : PropertiesDashboardComponent,\r\n        resolve : {\r\n          authUser : AuthResolver\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PropertiesRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PropertiesRoutingModule } from './properties-routing.module';\r\nimport { PropertiesDashboardComponent } from './components/properties-dashboard/properties-dashboard.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { PropertiesService } from './properties.service';\r\nimport { CustomMaterialDesignModule } from '../shared/custom-material-design.module';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { PropertiesEditComponent } from './components/properties-edit/properties-edit.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HousesEditComponent } from './components/houses-edit/houses-edit.component';\r\nimport { PropertiesTableComponent } from './components/properties-table/properties-table.component';\r\nimport { PropertySelectorDialogComponent } from './components/property-selector-dialog/property-selector-dialog.component';\r\nimport { CalculatorsModule } from '../calculators/calculators.module';\r\nimport { HouseFiguresDialogComponent } from './components/house-figures-dialog/house-figures-dialog.component';\r\nimport { PropertyYieldsDialogComponent } from './components/property-yields-dialog/property-yields-dialog.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    PropertiesRoutingModule,\r\n    FormsModule,\r\n    FlexLayoutModule,\r\n    CustomMaterialDesignModule,\r\n    SharedModule,\r\n    CalculatorsModule\r\n  ],\r\n  declarations: [ \r\n    PropertiesDashboardComponent, \r\n    PropertiesEditComponent, \r\n    HousesEditComponent, \r\n    PropertiesTableComponent, \r\n    PropertySelectorDialogComponent, \r\n    HouseFiguresDialogComponent, \r\n    PropertyYieldsDialogComponent \r\n  ],\r\n  providers: [ PropertiesService ],\r\n  entryComponents: [\r\n    PropertySelectorDialogComponent, // added as material doc suggest to allow AOT on this on the fly created class\r\n    HouseFiguresDialogComponent,\r\n    PropertyYieldsDialogComponent\r\n  ]\r\n})\r\nexport class PropertiesModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { AppService } from '../../app.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Property } from './models/property';\r\nimport { Response } from '../../models/response';\r\nimport { User } from '../users/models/user';\r\nimport { PROPERTY_TYPES } from '../../constants';\r\nimport { House } from './models/house';\r\nimport { Address } from './models/address';\r\nimport { map, catchError, switchMap, flatMap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class PropertiesService {\r\n\r\n  private serverHost: string = environment.apiHost + '/api/properties';\r\n  private headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n\r\n  constructor(private http: HttpClient, private appService: AppService) {}\r\n\r\n  /**\r\n   * Server call to Create a new property in the system \r\n   * @param postData \r\n   * \r\n   * @return { Observable<any> }\r\n   */\r\n  create$(postData: any = {}): Observable<any> {\r\n    const methodTrace = `${this.constructor.name} > create() > `; // for debugging\r\n\r\n    return this.http.post<Response>(`${this.serverHost}/create`, postData, { headers : this.headers }).pipe(\r\n      map(this.appService.extractData),\r\n      catchError(this.appService.handleError)\r\n    );\r\n  } \r\n  \r\n  /**\r\n   * Server call to Update an investment in the system \r\n   * @param postData \r\n   * \r\n   * @return { Observable<Property> }\r\n   */\r\n  update$(postData: any = {}): Observable<any> {\r\n    const methodTrace = `${this.constructor.name} > update() > `; // for debugging\r\n\r\n    return this.http.post<Response>(`${this.serverHost}/update`, postData, { headers : this.headers }).pipe(\r\n      map(this.appService.extractData),\r\n      catchError(this.appService.handleError)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Server call to Get a property from the server based on its ID\r\n   * @param {string} id . The property id\r\n   * \r\n   * @return { Observable<Property> }\r\n   */\r\n  getPropertyById$(email: string, id: string): Observable<Property> {\r\n    const methodTrace = `${this.constructor.name} > getPropertyById() > `; // for debugging\r\n\r\n    if (!id || !email) {\r\n      this.appService.consoleLog('error', `${methodTrace} Required parameters missing.`);\r\n      return of(null);\r\n    }\r\n\r\n    const params = new HttpParams().set('email', email);\r\n\r\n    return this.http.get<Response>(`${this.serverHost}/${id}`, { params }).pipe(\r\n      map(this.appService.extractData),\r\n      flatMap((data) => {\r\n        return of(this.populate(data));\r\n      }),\r\n      catchError(this.appService.handleError)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Populates a property from an object from server\r\n   * @param { any } data\r\n   * \r\n   * @return { Property } \r\n   */\r\n  private populate(data: any): Property {\r\n    const methodTrace = `${this.constructor.name} > populateTeam() > `; // for debugging\r\n\r\n    if (data && data._id) {\r\n      const createdBy = new User(data.createdBy.name, data.createdBy.email, data.createdBy.gravatar);\r\n      \r\n      let address = new Address();\r\n      if (data.location) {\r\n        address = new Address(data.location.address, data.location.coordinates[1], data.location.coordinates[0], data.location.mapsPlaceId);\r\n      }\r\n      \r\n      if (data.propertyType === PROPERTY_TYPES.HOUSE) {\r\n        return new House(data._id, data.propertyType, address, createdBy, data.propertyTypeData.landArea, data.propertyTypeData.floorArea, data.askingPrice, data.askingPriceUnit,\r\n            data.offerPrice, data.offerPriceUnit, data.walkAwayPrice, data.walkAwayPriceUnit, data.purchasePrice, data.purchasePriceUnit, data.purchasePrice2, data.purchasePrice2Unit, \r\n            data.purchasePrice3, data.purchasePrice3Unit, data.purchasePrice4, data.purchasePrice4Unit, data.purchasePrice5, data.purchasePrice5Unit, data.dateListed, \r\n            data.reasonForSelling, data.marketValue, data.marketValueUnit, data.propertyTypeData.registeredValue, data.propertyTypeData.registeredValueUnit, data.propertyTypeData.rates, data.propertyTypeData.ratesUnit,\r\n            data.propertyTypeData.insurance, data.propertyTypeData.insuranceUnit, data.renovationCost, data.renovationCostUnit, data.maintenanceCost, data.maintenanceCostUnit, \r\n            data.description, data.otherCost, data.otherCostUnit, data.notes, data.propertyTypeData.capitalGrowth, data.propertyTypeData.bedrooms, data.propertyTypeData.bathrooms, data.propertyTypeData.parkingSpaces,\r\n            data.propertyTypeData.fenced, data.propertyTypeData.rented, data.propertyTypeData.rentPrice, data.propertyTypeData.rentPriceUnit, data.propertyTypeData.rentPricePeriod, data.propertyTypeData.rentAppraisalDone, data.propertyTypeData.vacancy, data.propertyTypeData.bodyCorporate,\r\n            data.propertyTypeData.bodyCorporateUnit, data.propertyTypeData.utilitiesCost, data.propertyTypeData.utilitiesCostUnit, data.propertyTypeData.agent, data.propertyTypeData.managed, data.propertyTypeData.managerRate, data.propertyTypeData.buildingType, data.propertyTypeData.titleType);\r\n      }\r\n    } else {\r\n      this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Server call to Get all the properties for the current user from the server.\r\n   * This proeprties will be the properties the user created plus the investment properties where she/he has a piece of the cake.\r\n   * @param {string} email . The user email\r\n   * @param {boolean} justUserProperties . If false it get properties created by the user with the email provided plus properties from investments where the user has a portion of it.\r\n   *                                       If true it just bring back the properties created by the user with the email provided.\r\n   * \r\n   * @return { Observable<Property[]> } \r\n   */\r\n  getProperties$(email: string, justUserProperties: boolean = false): Observable<Property[]> {\r\n    const methodTrace = `${this.constructor.name} > getProperties() > `; // for debugging\r\n\r\n    if (!email) {\r\n      this.appService.consoleLog('error', `${methodTrace} Required parameters missing.`);\r\n      return of([]);\r\n    }\r\n\r\n    const params = new HttpParams().set('email', email).set('justUserProperties', justUserProperties + '');\r\n\r\n    return this.http.get<Response>(`${this.serverHost}/getAll`, { params }).pipe(\r\n      map(this.appService.extractData),\r\n      flatMap((responseData) => {\r\n        const properties: Property[] = [];\r\n  \r\n        if (responseData && responseData instanceof Array) {\r\n          for (const data of responseData) {\r\n            properties.push(this.populate(data));\r\n          }\r\n        } else {\r\n          this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`);\r\n        }\r\n  \r\n        return of(properties);\r\n      }),\r\n      catchError(this.appService.handleError)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Server call to delete a property from the system\r\n   * @param {string} id . The record id\r\n   * @param {string} email . The current user email.\r\n   * \r\n   * @return { any }\r\n   * \r\n   */\r\n  delete$(id: string, email: string): Observable<any> {\r\n    const methodTrace = `${this.constructor.name} > delete() > `; // for debugging\r\n\r\n    if (!id || !email) {\r\n      this.appService.consoleLog('error', `${methodTrace} Required parameters missing.`);\r\n      return Observable.throw(null);\r\n    }\r\n\r\n    const params = new HttpParams().set('email', email);\r\n\r\n    return this.http.delete<Response>(`${this.serverHost}/delete/${id}`, { headers : this.headers, params } ).pipe(\r\n      map(this.appService.extractData),\r\n      catchError(this.appService.handleError)\r\n    );\r\n  }\r\n}\r\n","module.exports = \"<form class=\\\"form__container form__address-autocomplete\\\" #addressAutocompleteForm=\\\"ngForm\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n  <section fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields\\\">\\r\\n\\r\\n    <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n      <!-- <h3 class=\\\"title\\\">\\r\\n        <p class=\\\"header\\\">Features</p>\\r\\n      </h3> -->\\r\\n\\r\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n        <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n          \\r\\n          <input matInput type=\\\"text\\\" [id]=\\\"id\\\" [name]=\\\"id\\\" [placeholder]=\\\"placeHolder\\\" \\r\\n              [(ngModel)]=\\\"model\\\"\\r\\n              [matAutocomplete]=\\\"addressAutocomplete\\\"\\r\\n              required\\r\\n              #addressInput=\\\"ngModel\\\">\\r\\n\\r\\n          <mat-icon matPrefix>directions</mat-icon>\\r\\n          <mat-error *ngIf=\\\"addressInput.invalid && (addressInput.dirty || addressInput.touched) && addressInput.errors.required\\\">This field is required.</mat-error>\\r\\n          \\r\\n          <mat-autocomplete autoActiveFirstOption #addressAutocomplete=\\\"matAutocomplete\\\" (optionSelected)=\\\"onOptionSelected($event)\\\" [displayWith]=\\\"autocompleteDisplayFn\\\">\\r\\n            <mat-option *ngFor=\\\"let option of options\\\" [value]=\\\"option\\\">\\r\\n              {{ option.description }}\\r\\n            </mat-option>\\r\\n          </mat-autocomplete>  \\r\\n          \\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n  </section>\\r\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2hhcmVkL2NvbXBvbmVudHMvYWRkcmVzcy1hdXRvY29tcGxldGUvYWRkcmVzcy1hdXRvY29tcGxldGUuY29tcG9uZW50LnNjc3MifQ== */\"","/// <reference types=\"@types/googlemaps\" />\r\nimport { Component, OnInit, EventEmitter, Input, Output, ViewChild, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\r\nimport { MatAutocompleteSelectedEvent } from '@angular/material';\r\nimport { MapsAPILoader } from '@agm/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { Address } from '../../../properties/models/address';\r\nimport { NgModel } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'address-autocomplete',\r\n  templateUrl: './address-autocomplete.component.html',\r\n  styleUrls: ['./address-autocomplete.component.scss']\r\n})\r\nexport class AddressAutocompleteComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n  @ViewChild('addressAutocompleteForm') form;\r\n  @ViewChild('addressInput') addressInput: NgModel;\r\n  @Input() id: string;\r\n  @Input() placeHolder: string;\r\n  @Input() defaultValues: any = null; // the default values of the component model\r\n  @Output() values: EventEmitter<any> = new EventEmitter();\r\n\r\n  model: any = {\r\n    description : null,\r\n    latitude : null,\r\n    longitude : null,\r\n    mapsPlaceId : null\r\n  };\r\n  options: any[] = [];\r\n  subscription: Subscription = new Subscription();\r\n\r\n  private autocompleteService: google.maps.places.AutocompleteService = null;\r\n  private placesService: google.maps.places.PlacesService = null;\r\n\r\n  constructor(private mapsAPILoader: MapsAPILoader) { }\r\n\r\n  ngOnInit() {\r\n    Object.assign(this.model, this.defaultValues);\r\n    \r\n    this.mapsAPILoader.load().then(() => {\r\n      this.autocompleteService = new google.maps.places.AutocompleteService();\r\n      this.placesService = new google.maps.places.PlacesService(document.createElement('div'));\r\n    });\r\n    \r\n  }\r\n\r\n  ngOnDestroy() {\r\n    const methodTrace = `${this.constructor.name} > ngOnDestroy() > `; // for debugging\r\n    \r\n    // this.appService.consoleLog('info', `${methodTrace} Component destroyed.`);\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // send data before touching any value\r\n    this.emitValues();\r\n\r\n    // after any event in the form we send updated data\r\n    const newSubscription = this.form.valueChanges.pipe(debounceTime(500)).subscribe(values => {\r\n\r\n      if (values.address) {\r\n        if (values.address.description) {\r\n          if (values.address.mapsPlaceId) {\r\n            // when the user selected an option from the autocomplete suggestions\r\n            this.getPlaceDetails(values.address.mapsPlaceId);\r\n          } else {\r\n            // the user save a custom address. She did not picked it from the suggestion list.\r\n            this.emitValues(values.address.description);\r\n          }\r\n        } else if (typeof values.address === 'string') {\r\n          // This happens while the user is writing in the field before selecting an option from suggestion list\r\n\r\n          // retrieve matching places\r\n          this.autocompleteService.getQueryPredictions({input : values.address},\r\n              (data: google.maps.places.QueryAutocompletePrediction[], status: google.maps.places.PlacesServiceStatus) => {\r\n            \r\n            if (status === google.maps.places.PlacesServiceStatus.OK) {\r\n              this.options = data;\r\n            } else {\r\n              this.options = [];\r\n            }\r\n          });\r\n\r\n          this.emitValues(values.address);\r\n        } else {\r\n          this.options = [];\r\n          this.emitValues();\r\n        }\r\n      } else {\r\n        this.options = [];\r\n        this.emitValues();\r\n      }\r\n    });\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n  /**\r\n   * Using this function we can map our selection to the item description intead the whole object\r\n   */\r\n  autocompleteDisplayFn(place?: google.maps.places.QueryAutocompletePrediction): string | undefined {\r\n    return place ? place.description : '';\r\n  }\r\n\r\n  onOptionSelected(matAutocompleteSelectedEvent: MatAutocompleteSelectedEvent) {\r\n    this.getPlaceDetails(matAutocompleteSelectedEvent.option.value.place_id);\r\n  }\r\n\r\n  getPlaceDetails(mapsPlaceId: string) {\r\n    if (!mapsPlaceId) {\r\n      return false;\r\n    }\r\n\r\n    this.placesService.getDetails({ placeId : mapsPlaceId },\r\n        (data: google.maps.places.PlaceResult, status: google.maps.places.PlacesServiceStatus) => {\r\n\r\n      if (status === google.maps.places.PlacesServiceStatus.OK) {\r\n        this.model.latitude = data.geometry.location.lat();\r\n        this.model.longitude = data.geometry.location.lng();\r\n        this.model.description = data.formatted_address;\r\n        this.model.mapsPlaceId = mapsPlaceId;\r\n      } else {\r\n        this.model.latitude = null;\r\n        this.model.longitude = null;\r\n        this.model.description = null;\r\n        this.model.place_id = null;\r\n      }\r\n\r\n      this.emitValues();\r\n    });\r\n  }\r\n\r\n  emitValues(description: string = null) {\r\n    let address = null;\r\n    let valid = this.form.valid;\r\n\r\n    if (this.model.mapsPlaceId) {\r\n      // the user picked from the suggestion list\r\n      address = new Address(this.model.description, this.model.latitude, this.model.longitude, this.model.mapsPlaceId);\r\n    } else if (description) {\r\n      // the user just type a custom address\r\n      address = new Address(description, null, null, null);\r\n    } else {\r\n      // none of above, return invalid\r\n      valid = false;\r\n    }\r\n\r\n\r\n    this.values.emit({\r\n      value : {\r\n        address,\r\n        valid\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<mat-form-field class=\\\"form__field\\\" *ngIf=\\\"type === 'currency'\\\">\\r\\n  <mat-select id=\\\"{{id}}\\\" placeholder=\\\"{{placeHolder}}\\\" [value]=\\\"value\\\" (selectionChange)=\\\"onSelectionChange($event)\\\">\\r\\n    <mat-option value=\\\"AUD\\\">{{view === 'narrow' ? 'AUD' : 'Australian Dollar'}}</mat-option>\\r\\n    <mat-option value=\\\"EUR\\\">{{view === 'narrow' ? 'EUR' : 'Euro'}}</mat-option>\\r\\n    <mat-option value=\\\"NZD\\\">{{view === 'narrow' ? 'NZD' : 'New Zealand Dollar'}}</mat-option>\\r\\n    <mat-option value=\\\"USD\\\">{{view === 'narrow' ? 'USD' : 'US Dollar'}}</mat-option>\\r\\n  </mat-select>\\r\\n  \\r\\n  <mat-hint align=\\\"start\\\">{{hint}}</mat-hint>\\r\\n</mat-form-field>\\r\\n\\r\\n<mat-form-field class=\\\"form__field\\\" *ngIf=\\\"type === 'crypto'\\\">\\r\\n  <mat-select id=\\\"{{id}}\\\" placeholder=\\\"{{placeHolder}}\\\" [value]=\\\"value\\\" (selectionChange)=\\\"onSelectionChange($event)\\\">\\r\\n    <mat-option value=\\\"BTC\\\">{{view === 'narrow' ? 'BTC' : 'Bitcoin'}}</mat-option>\\r\\n    <mat-option value=\\\"XMR\\\">{{view === 'narrow' ? 'XMR' : 'Monero'}}</mat-option>\\r\\n  </mat-select>\\r\\n  \\r\\n  <mat-hint align=\\\"start\\\">{{hint}}</mat-hint>\\r\\n</mat-form-field>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2hhcmVkL2NvbXBvbmVudHMvY3VycmVuY3ktdW5pdC9jdXJyZW5jeS11bml0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { MatSelectChange } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'currency-unit',\r\n  templateUrl: './currency-unit.component.html',\r\n  styleUrls: ['./currency-unit.component.scss']\r\n})\r\nexport class CurrencyUnitComponent implements OnInit {\r\n\r\n  @Input() id: string;\r\n  @Input() hint: string;\r\n  @Input() view = 'normal';\r\n  @Input() type = 'currency';\r\n  @Input() placeHolder: string;\r\n  @Input() value: string;\r\n  @Output() newValue: EventEmitter<MatSelectChange> = new EventEmitter();\r\n\r\n  model: any = {};\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n  onSelectionChange(matSelectChange: MatSelectChange) {\r\n    this.newValue.emit(matSelectChange);\r\n  }\r\n}\r\n","module.exports = \"<!-- this creates a google map on the page with the given lat/lng from -->\\r\\n<!-- the component as the initial center of the map: -->\\r\\n<agm-map *ngIf=\\\"latitude && longitude\\\" [latitude]=\\\"latitude\\\" [longitude]=\\\"longitude\\\" [zoom]=\\\"17\\\" [ngStyle]=\\\"{'height' : mapContainerHeight + 'px'}\\\">\\r\\n  <agm-marker *ngFor=\\\"let marker of markers\\\"  [latitude]=\\\"marker.latitude\\\" [longitude]=\\\"marker.longitude\\\"></agm-marker>\\r\\n</agm-map>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2hhcmVkL2NvbXBvbmVudHMvZHluYW1pYy1tYXAvZHluYW1pYy1tYXAuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'dynamic-map',\r\n  templateUrl: './dynamic-map.component.html',\r\n  styleUrls: ['./dynamic-map.component.scss']\r\n})\r\nexport class DynamicMapComponent implements OnInit {\r\n\r\n  @Input() latitude = null;\r\n  @Input() longitude = null;\r\n  @Input() markers = [];\r\n  @Input() mapContainerHeight = '300'; // px\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<span fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\" fxLayoutAlign=\\\"start center\\\" *ngIf=\\\"(title && title.length > 0) || (text && text.length > 0)\\\" class=\\\"color__almost-white\\\">\\r\\n    <label *ngIf=\\\"title && title.length > 0\\\">{{title}}</label>\\r\\n    <mat-icon *ngIf=\\\"text && text.length > 0\\\" \\r\\n        [matTooltip]=\\\"text\\\" \\r\\n        [matTooltipPosition]=\\\"position\\\"\\r\\n        [matTooltipHideDelay]=\\\"5000\\\">info_outline</mat-icon>  \\r\\n</span>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2hhcmVkL2NvbXBvbmVudHMvaW5mby10b29sdGlwL2luZm8tdG9vbHRpcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'info-tooltip',\r\n  templateUrl: './info-tooltip.component.html',\r\n  styleUrls: ['./info-tooltip.component.scss']\r\n})\r\nexport class InfoTooltipComponent implements OnInit {\r\n\r\n  @Input() title = '';\r\n  @Input() text = '';\r\n  @Input() position = 'above';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<nav class=\\\"navigation--main\\\">\\r\\n  <mat-chip-list fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"10px\\\">\\r\\n    <mat-chip class=\\\"nav--item\\\" *ngFor=\\\"let link of links\\\" [routerLink]=\\\"link.url\\\" [selected]=\\\"link.selected\\\">{{link.displayName}}</mat-chip>\\r\\n  </mat-chip-list>      \\r\\n</nav>\"","module.exports = \".navigation--main mat-chip.nav--item {\\n  margin: 0 8px 8px 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9zaGFyZWQvY29tcG9uZW50cy9tYWluLW5hdmlnYXRvci9DOlxcdzNcXGF0b21pQ29jb251dFxcY2xpZW50L3NyY1xcYXBwXFxtb2R1bGVzXFxzaGFyZWRcXGNvbXBvbmVudHNcXG1haW4tbmF2aWdhdG9yXFxtYWluLW5hdmlnYXRvci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUdJLG9CQUFtQixFQUNwQiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2hhcmVkL2NvbXBvbmVudHMvbWFpbi1uYXZpZ2F0b3IvbWFpbi1uYXZpZ2F0b3IuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubmF2aWdhdGlvbi0tbWFpbiB7XHJcblxyXG4gIG1hdC1jaGlwLm5hdi0taXRlbSB7XHJcbiAgICBtYXJnaW46IDAgOHB4IDhweCAwO1xyXG4gIH1cclxufSJdfQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { MainNavigatorService } from './main-navigator.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppService } from '../../../../app.service';\r\n\r\n@Component({\r\n  selector: 'main-navigator',\r\n  templateUrl: './main-navigator.component.html',\r\n  styleUrls: ['./main-navigator.component.scss']\r\n})\r\nexport class MainNavigatorComponent implements OnInit, OnDestroy {\r\n  \r\n  links: any;\r\n  subscription: Subscription = new Subscription();\r\n  \r\n  constructor(private mainNavigatorService: MainNavigatorService, private appService: AppService) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription = this.mainNavigatorService.links$.subscribe((links: any[]) => this.links = links);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    const methodTrace = `${this.constructor.name} > ngOnDestroy() > `; // for debugging\r\n    \r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class MainNavigatorService {\r\n  \r\n  private linksSource: BehaviorSubject<any[]>; // Observable source\r\n  links$: Observable<any[]>; // Observable stream\r\n\r\n  constructor() {\r\n    this.linksSource = new BehaviorSubject<any[]>(null);\r\n    this.links$ = this.linksSource.asObservable();\r\n  }\r\n\r\n  // links source feeder\r\n  setLinks(newLinks: any[]) {\r\n    this.linksSource.next(newLinks);\r\n  }\r\n\r\n  // add a link to the source feeder\r\n  appendLink(link: any) {\r\n    const currentLinks: any[] = this.linksSource.getValue();\r\n    currentLinks.push(link);\r\n    this.setLinks(currentLinks);\r\n  }\r\n}\r\n","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"start center\\\" [ngClass]=\\\"extraClasses\\\" class=\\\"progress-bar\\\">\\r\\n  <mat-progress-bar \\r\\n      [color]=\\\"color\\\"\\r\\n      mode=\\\"indeterminate\\\">\\r\\n  </mat-progress-bar>\\r\\n  <p *ngIf=\\\"message\\\">{{ message }}</p>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2hhcmVkL2NvbXBvbmVudHMvcHJvZ3Jlc3MtYmFyL3Byb2dyZXNzLWJhci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'progress-bar',\r\n  templateUrl: './progress-bar.component.html',\r\n  styleUrls: ['./progress-bar.component.scss']\r\n})\r\nexport class ProgressBarComponent implements OnInit {\r\n\r\n  @Input() message = '';\r\n  @Input() color = 'primary';\r\n  @Input() extraClasses = '';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"space-around center\\\" class=\\\"snackbar--simple\\\">\\r\\n  <p fxFlex class=\\\"message\\\">{{data.message}}</p>\\r\\n  <mat-icon class=\\\"icon\\\" aria-label=\\\"Close\\\" (click)=\\\"actionClicked()\\\">clear</mat-icon>\\r\\n</div>\\r\\n\"","module.exports = \".snackbar--simple {\\n  font-size: 12px;\\n  cursor: default; }\\n  .snackbar--simple .icon {\\n    cursor: pointer; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9zaGFyZWQvY29tcG9uZW50cy9zbmFja2Jhci1zaW1wbGUvQzpcXHczXFxhdG9taUNvY29udXRcXGNsaWVudC9zcmNcXGFwcFxcbW9kdWxlc1xcc2hhcmVkXFxjb21wb25lbnRzXFxzbmFja2Jhci1zaW1wbGVcXHNuYWNrYmFyLXNpbXBsZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNFLGdCQUFlO0VBQ2YsZ0JBQWUsRUFLaEI7RUFQRDtJQUtJLGdCQUFlLEVBQ2hCIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9zaGFyZWQvY29tcG9uZW50cy9zbmFja2Jhci1zaW1wbGUvc25hY2tiYXItc2ltcGxlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnLi4vLi4vLi4vLi4vLi4vdmFyaWFibGVzJztcclxuXHJcbi5zbmFja2Jhci0tc2ltcGxlIHtcclxuICBmb250LXNpemU6IDEycHg7XHJcbiAgY3Vyc29yOiBkZWZhdWx0O1xyXG5cclxuICAuaWNvbiB7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgfVxyXG59Il19 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatSnackBarRef, MAT_SNACK_BAR_DATA} from '@angular/material';\r\n@Component({\r\n  selector: 'app-snackbar-simple',\r\n  templateUrl: './snackbar-simple.component.html',\r\n  styleUrls: ['./snackbar-simple.component.scss']\r\n})\r\nexport class SnackbarSimpleComponent implements OnInit {\r\n\r\n  constructor(public snackBarRef: MatSnackBarRef<SnackbarSimpleComponent>, @Inject(MAT_SNACK_BAR_DATA) public data: any) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  actionClicked() {\r\n    this.snackBarRef.dismiss();\r\n  }\r\n\r\n}\r\n","module.exports = \"<h2 mat-dialog-title>{{data.title}}</h2>\\r\\n\\r\\n<mat-dialog-content>\\r\\n  <div fxLayout=\\\"column\\\" class=\\\"container__yes-no-dialog\\\">\\r\\n    {{data.message}}\\r\\n  </div>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"space-around center\\\">\\r\\n  <button mat-mini-fab color=\\\"warn\\\" mat-dialog-close=\\\"no\\\">\\r\\n    <mat-icon aria-label=\\\"No\\\">clear</mat-icon>\\r\\n  </button>\\r\\n  <button mat-mini-fab color=\\\"accent\\\" mat-dialog-close=\\\"yes\\\">\\r\\n    <mat-icon aria-label=\\\"Yes\\\">done</mat-icon>\\r\\n  </button>\\r\\n</mat-dialog-actions>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2hhcmVkL2NvbXBvbmVudHMveWVzLW5vLWRpYWxvZy95ZXMtbm8tZGlhbG9nLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-yes-no-dialog',\r\n  templateUrl: './yes-no-dialog.component.html',\r\n  styleUrls: ['./yes-no-dialog.component.scss']\r\n})\r\nexport class YesNoDialogComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<YesNoDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n  \r\n  ngOnInit() { }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  MatButtonModule, \r\n  MatCheckboxModule, \r\n  MatSnackBarModule, \r\n  MatChipsModule, \r\n  MatDatepickerModule,\r\n  MatSlideToggleModule,\r\n  MatMenuModule,\r\n  MatToolbarModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatCardModule, \r\n  MatNativeDateModule,\r\n  MatTabsModule,\r\n  MatExpansionModule,\r\n  MatTooltipModule,\r\n  MatDialogModule,\r\n  MatSelectModule,\r\n  MatButtonToggleModule,\r\n  MatRadioModule,\r\n  MatSliderModule,\r\n  MatTableModule,\r\n  MatPaginatorModule,\r\n  MatSortModule,\r\n  MatAutocompleteModule\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule, \r\n    MatButtonModule, \r\n    MatCheckboxModule, \r\n    MatSnackBarModule, \r\n    MatChipsModule, \r\n    MatDatepickerModule,\r\n    MatSlideToggleModule,\r\n    MatMenuModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatCardModule,\r\n    MatNativeDateModule,\r\n    MatTabsModule,\r\n    MatExpansionModule,\r\n    MatTooltipModule,\r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    MatButtonToggleModule,\r\n    MatRadioModule,\r\n    MatSliderModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatAutocompleteModule\r\n  ],\r\n  exports: [\r\n    MatButtonModule, \r\n    MatCheckboxModule, \r\n    MatSnackBarModule, \r\n    MatChipsModule, \r\n    MatDatepickerModule,\r\n    MatSlideToggleModule,\r\n    MatMenuModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatCardModule,\r\n    MatNativeDateModule,\r\n    MatTabsModule,\r\n    MatExpansionModule,\r\n    MatTooltipModule,\r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    MatButtonToggleModule,\r\n    MatRadioModule,\r\n    MatSliderModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatAutocompleteModule\r\n  ]\r\n})\r\nexport class CustomMaterialDesignModule { }\r\n","import { Directive, Input, Attribute } from '@angular/core';\r\nimport { ValidatorFn, Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[equalvalidator]',\r\n  providers: [{provide: NG_VALIDATORS, useExisting: EqualValidatorDirective, multi: true}]\r\n})\r\nexport class EqualValidatorDirective implements Validator {\r\n  \r\n  constructor(@Attribute('equalvalidator') public equalFormControlName: string,\r\n      @Attribute('reverse') public reverse: string) {}\r\n  \r\n\r\n  private get isReverse() {\r\n    if (!this.reverse) {\r\n      return false;\r\n    }\r\n\r\n    return this.reverse === 'true' ? true : false;\r\n  }\r\n\r\n  validate(control: AbstractControl): { [key: string]: any } {\r\n    const equalsFormControl = control.root.get(this.equalFormControlName);\r\n    if (equalsFormControl && equalsFormControl.value !== control.value) {\r\n      if (this.isReverse) {\r\n        equalsFormControl.setErrors({ 'equalvalidator' : true });\r\n      } else {\r\n        return { 'equalvalidator' : true };\r\n      }\r\n    } else if (equalsFormControl) {\r\n      // value is the same on both\r\n      if (this.reverse) {\r\n        delete equalsFormControl.errors['equalvalidator'];\r\n        if (!Object.keys(equalsFormControl.errors).length) {\r\n          equalsFormControl.setErrors(null);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  }\r\n}\r\n","import { Directive, Input, Attribute } from '@angular/core';\r\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\nimport { validateConfig } from '@angular/router/src/config';\r\n\r\n@Directive({\r\n  selector: '[numberValidator]',\r\n  providers: [{provide: NG_VALIDATORS, useExisting: NumberValidatorDirective, multi: true}]\r\n})\r\nexport class NumberValidatorDirective {\r\n\r\n  \r\n\r\n  constructor(@Attribute('numberValidator') public validationType: string) {}\r\n\r\n  validate(control: AbstractControl): { [key: string]: any } {\r\n    \r\n    // if the field is empty return valid\r\n    const val: number = control.value;\r\n    if (!val) {\r\n      return null;\r\n    } \r\n\r\n    let validationObj: any = {};\r\n    if (this.validationType) {\r\n      validationObj = JSON.parse(this.validationType);\r\n    }\r\n\r\n    // original pattern: ^[+-]?[0-9]{1,9}(?:\\.[0-9]{1,2})?$\r\n    let pattern = '^[+-]?[0-9]{1,';\r\n    pattern += !isNaN(validationObj.maxIntegerDigits) && validationObj.maxIntegerDigits > 1 ? validationObj.maxIntegerDigits : 9;\r\n    pattern += '}(?:\\.[0-9]{1,';\r\n    pattern += !isNaN(validationObj.maxFractionDigits) && validationObj.maxFractionDigits > 1 ? validationObj.maxFractionDigits : 2;\r\n    pattern += '})?$';\r\n\r\n    const numberRegExp = new RegExp(pattern);\r\n\r\n    if (!numberRegExp.test(val + '')) {\r\n      return {'numberValidator': true};\r\n    }\r\n    \r\n    const result: any = {};\r\n    if (!isNaN(validationObj.min) && val < validationObj.min) {\r\n      result.numberValidatorMin = true;\r\n    }\r\n    \r\n    if (!isNaN(validationObj.max) && val > validationObj.max) {\r\n      result.numberValidatorMax = true;\r\n    }\r\n\r\n    return Object.keys(result).length ? result : null;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MainNavigatorComponent } from './components/main-navigator/main-navigator.component';\r\nimport { CurrencyUnitComponent } from './components/currency-unit/currency-unit.component';\r\nimport { CustomMaterialDesignModule } from '../../modules/shared/custom-material-design.module';\r\nimport { YesNoDialogComponent } from './components/yes-no-dialog/yes-no-dialog.component';\r\nimport { SnackbarSimpleComponent } from './components/snackbar-simple/snackbar-simple.component';\r\nimport { EqualValidatorDirective } from './directives/equal-validator.directive';\r\nimport { NumberValidatorDirective } from './directives/number-validator.directive';\r\nimport { InfoTooltipComponent } from './components/info-tooltip/info-tooltip.component';\r\nimport { AddressAutocompleteComponent } from './components/address-autocomplete/address-autocomplete.component';\r\nimport { DynamicMapComponent } from './components/dynamic-map/dynamic-map.component';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { environment } from '../../../environments/environment';\r\nimport { ProgressBarComponent } from './components/progress-bar/progress-bar.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    FlexLayoutModule,\r\n    CustomMaterialDesignModule,\r\n    AgmCoreModule.forRoot({\r\n      apiKey: environment.mapsApiKey,\r\n      libraries: ['places']\r\n    }),\r\n  ],\r\n  declarations: [ \r\n    MainNavigatorComponent, \r\n    CurrencyUnitComponent, \r\n    YesNoDialogComponent, \r\n    SnackbarSimpleComponent, \r\n    EqualValidatorDirective, \r\n    NumberValidatorDirective,\r\n    InfoTooltipComponent,\r\n    AddressAutocompleteComponent,\r\n    DynamicMapComponent,\r\n    ProgressBarComponent\r\n  ],\r\n  exports: [ \r\n    MainNavigatorComponent, \r\n    CurrencyUnitComponent, \r\n    YesNoDialogComponent, \r\n    SnackbarSimpleComponent,\r\n    EqualValidatorDirective,\r\n    NumberValidatorDirective,\r\n    InfoTooltipComponent,\r\n    AddressAutocompleteComponent,\r\n    DynamicMapComponent,\r\n    ProgressBarComponent\r\n  ],\r\n  entryComponents: [\r\n    YesNoDialogComponent, // added as material doc suggest to allow AOT on this on the fly created class\r\n    SnackbarSimpleComponent\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","module.exports = \"\\r\\n\\r\\n<h2 mat-dialog-title>Add team member</h2>\\r\\n\\r\\n<mat-dialog-content>\\r\\n  <div fxLayout=\\\"column\\\" class=\\\"container__add-person-to-team\\\">\\r\\n    <form class=\\\"form__container form__add-person-to-team\\\" #addPersonToTeamForm=\\\"ngForm\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n      \\r\\n      <section fxLayout=\\\"column\\\" class=\\\"form__fields\\\">\\r\\n        <div fxLayout=\\\"column\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- Member email -->\\r\\n          <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"tezt\\\" id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Member email\\\" \\r\\n                [(ngModel)]=\\\"model.email\\\"\\r\\n                required \\r\\n                email\\r\\n                #email=\\\"ngModel\\\">\\r\\n\\r\\n            <mat-icon matPrefix>email</mat-icon>\\r\\n            <mat-error *ngIf=\\\"email.invalid && (email.dirty || email.touched) && email.errors.required\\\">Email is required</mat-error>\\r\\n            <mat-error *ngIf=\\\"email.invalid && (email.dirty || email.touched) && email.errors.email\\\">Email must be a valid email address</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </section>\\r\\n    </form>\\r\\n  </div>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"space-around center\\\">\\r\\n  <button mat-mini-fab color=\\\"warn\\\" mat-dialog-close>\\r\\n    <mat-icon aria-label=\\\"Cancel\\\">clear</mat-icon>\\r\\n  </button>\\r\\n  <button mat-mini-fab color=\\\"accent\\\" [mat-dialog-close]=\\\"email.value || null\\\" [disabled]=\\\"!addPersonToTeamForm.form.valid\\\">\\r\\n    <mat-icon aria-label=\\\"Add\\\">done</mat-icon>\\r\\n  </button>\\r\\n</mat-dialog-actions>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdGVhbXMvY29tcG9uZW50cy9hZGQtcGVyc29uLXRvLXRlYW0tZGlhbG9nL2FkZC1wZXJzb24tdG8tdGVhbS1kaWFsb2cuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-add-person-to-team-dialog',\r\n  templateUrl: './add-person-to-team-dialog.component.html',\r\n  styleUrls: ['./add-person-to-team-dialog.component.scss']\r\n})\r\nexport class AddPersonToTeamDialogComponent implements OnInit {\r\n\r\n  model : any = { email : null };\r\n\r\n  constructor(public dialogRef: MatDialogRef<AddPersonToTeamDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"container__teams\\\">\\r\\n  <section  \\r\\n      fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row wrap\\\" \\r\\n      fxLayoutGap=\\\"10px\\\" fxLayoutGap.gt-xs=\\\"none\\\" \\r\\n      fxLayoutAlign=\\\"none none\\\" fxLayoutAlign.gt-xs=\\\"space-around center\\\">\\r\\n    \\r\\n    <div *ngIf=\\\"!teams.length && !getTeamsServiceRunning\\\" fxFlexAlign=\\\"center\\\">You are not member of any team yet.</div>\\r\\n    <!-- Team Cards -->\\r\\n    <mat-expansion-panel *ngFor=\\\"let team of teams; index as teamIndex\\\"\\r\\n        fxFlex=\\\"none\\\" fxFlex.sm=\\\"45\\\" fxFlex.gt-sm=\\\"30\\\" \\r\\n        class=\\\"team-card\\\">\\r\\n      <mat-expansion-panel-header>\\r\\n        <mat-panel-title>\\r\\n          {{team.name}}\\r\\n        </mat-panel-title>\\r\\n        <mat-panel-description>\\r\\n          \\r\\n        </mat-panel-description>\\r\\n      </mat-expansion-panel-header>\\r\\n      \\r\\n      <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"team-card__content\\\">\\r\\n        <section *ngIf=\\\"team.description\\\" class=\\\"description\\\">\\r\\n          <p>{{team.description}}</p>\\r\\n        </section>\\r\\n\\r\\n        <section class=\\\"members\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n          <div *ngFor=\\\"let member of team.members\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" class=\\\"member\\\">\\r\\n            <img class=\\\"member__avatar\\\" [src]=\\\"member.avatar\\\"/>\\r\\n            <div class=\\\"member__info\\\" fxLayout=\\\"column\\\" [matTooltip]=\\\"member.email === team.admin.email ? 'Administrator' : ''\\\" matTooltipPosition=\\\"right\\\">\\r\\n              <p class=\\\"member__name\\\">{{member.name}} <mat-icon *ngIf=\\\"member.email === team.admin.email\\\" class=\\\"admin-icon\\\" aria-label=\\\"Admin\\\" >lock</mat-icon></p>\\r\\n              <p class=\\\"member__email\\\">{{member.email}}</p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </section>\\r\\n\\r\\n        <section *ngIf=\\\"team.admin.email === user.email\\\" class=\\\"card__actions\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end none\\\" fxLayoutGap=\\\"10px\\\">\\r\\n          <button *ngIf=\\\"!teamActionRunning[teamIndex]\\\" mat-mini-fab routerLink=\\\"/teams/edit/{{team.slug}}\\\" color=\\\"primary\\\" (click)=\\\"teamActionRunning[teamIndex] = true\\\">\\r\\n            <mat-icon aria-label=\\\"Edit team\\\">edit</mat-icon>\\r\\n          </button>\\r\\n\\r\\n          <button *ngIf=\\\"!teamActionRunning[teamIndex]\\\" mat-mini-fab color=\\\"warn\\\" (click)=\\\"openDeleteTeamDialog(teamIndex, team)\\\">\\r\\n            <mat-icon aria-label=\\\"Delete team\\\">delete</mat-icon>\\r\\n          </button>\\r\\n\\r\\n          <mat-progress-spinner *ngIf=\\\"teamActionRunning[teamIndex]\\\"\\r\\n            class=\\\"progress-spinner progress-spinner--delete-team\\\"\\r\\n            color=\\\"warn\\\"\\r\\n            [diameter]=\\\"40\\\" [strokeWidth]=\\\"7\\\"\\r\\n            mode=\\\"indeterminate\\\">\\r\\n          </mat-progress-spinner>\\r\\n        </section>\\r\\n      </div>\\r\\n      \\r\\n    </mat-expansion-panel>\\r\\n    <!-- EOF Team Cards -->\\r\\n  </section>\\r\\n\\r\\n  <progress-bar fxFlexAlign=\\\"center\\\" class=\\\"progress-bar--get-teams\\\" *ngIf=\\\"getTeamsServiceRunning\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      message=\\\"Loading your teams...\\\">\\r\\n  </progress-bar>\\r\\n\\r\\n  <section fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start end\\\" class=\\\"actions\\\">\\r\\n    <button mat-fab routerLink=\\\"create\\\" color=\\\"primary\\\" class=\\\"fab mat-elevation-z10\\\" matTooltip=\\\"Create team\\\" matTooltipPosition=\\\"left\\\">\\r\\n      <mat-icon class=\\\"mat-24\\\" aria-label=\\\"Create team\\\">group_add</mat-icon>\\r\\n    </button>\\r\\n  </section>\\r\\n</div>\"","module.exports = \".container__teams .team-card {\\n  cursor: default; }\\n  .container__teams .team-card mat-panel-title {\\n    font-size: 18px; }\\n  .container__teams .team-card .team-card__content .description {\\n    margin-bottom: 20px;\\n    font-size: 13px; }\\n  .container__teams .team-card .team-card__content .members .member .member__avatar {\\n    border-radius: 50%;\\n    width: 40px;\\n    height: 40px;\\n    padding: 0 10px 0 0; }\\n  .container__teams .team-card .team-card__content .members .member .member__info .admin-icon {\\n    font-size: 14px;\\n    height: auto;\\n    width: auto; }\\n  .container__teams .team-card .team-card__content .members .member .member__info .member__email {\\n    font-size: 11px; }\\n  .container__teams .team-card .team-card__content .card__actions {\\n    margin: 0 8px 8px 0; }\\n  .container__teams .progress-bar--get-teams {\\n  width: 100%; }\\n  @media screen and (min-width: 600px) {\\n  .container__teams .team-card {\\n    margin-bottom: 10px; }\\n  .container__teams .progress-bar--get-teams {\\n    width: 300px; } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy90ZWFtcy9jb21wb25lbnRzL3RlYW1zLWRhc2hib2FyZC9DOlxcdzNcXGF0b21pQ29jb251dFxcY2xpZW50L3NyY1xcYXBwXFxtb2R1bGVzXFx0ZWFtc1xcY29tcG9uZW50c1xcdGVhbXMtZGFzaGJvYXJkXFx0ZWFtcy1kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFHSSxnQkFBZSxFQXlDaEI7RUE1Q0g7SUFNTSxnQkFBZSxFQUNoQjtFQVBMO0lBWVEsb0JBQW1CO0lBQ25CLGdCQUFlLEVBQ2hCO0VBZFA7SUFtQlUsbUJBQWtCO0lBQ2xCLFlBQVc7SUFDWCxhQUFZO0lBQ1osb0JBQW1CLEVBQ3BCO0VBdkJUO0lBNEJZLGdCQUFlO0lBQ2YsYUFBWTtJQUNaLFlBQVcsRUFDWjtFQS9CWDtJQWtDWSxnQkFBZSxFQUNoQjtFQW5DWDtJQXdDUSxvQkFBbUIsRUFDcEI7RUF6Q1A7RUErQ0ksWUFBVyxFQUNaO0VBR0g7RUFFRTtJQUdJLG9CQUFtQixFQUNwQjtFQUpIO0lBT0ksYUFBWSxFQUNiLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3RlYW1zL2NvbXBvbmVudHMvdGVhbXMtZGFzaGJvYXJkL3RlYW1zLWRhc2hib2FyZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJy4uLy4uLy4uLy4uLy4uL3ZhcmlhYmxlcyc7XHJcblxyXG4uY29udGFpbmVyX190ZWFtcyB7XHJcblxyXG4gIC50ZWFtLWNhcmQge1xyXG4gICAgY3Vyc29yOiBkZWZhdWx0O1xyXG5cclxuICAgIG1hdC1wYW5lbC10aXRsZSB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgIH1cclxuXHJcbiAgICAudGVhbS1jYXJkX19jb250ZW50IHtcclxuXHJcbiAgICAgIC5kZXNjcmlwdGlvbiB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgICAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC5tZW1iZXJzIC5tZW1iZXIge1xyXG4gICAgICAgIFxyXG4gICAgICAgIC5tZW1iZXJfX2F2YXRhciB7XHJcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgICAgICB3aWR0aDogNDBweDtcclxuICAgICAgICAgIGhlaWdodDogNDBweDtcclxuICAgICAgICAgIHBhZGRpbmc6IDAgMTBweCAwIDA7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAubWVtYmVyX19pbmZvIHtcclxuICAgICAgICAgIFxyXG4gICAgICAgICAgLmFkbWluLWljb24ge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgICAgICAgd2lkdGg6IGF1dG87XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgLm1lbWJlcl9fZW1haWwge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDExcHg7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAuY2FyZF9fYWN0aW9ucyB7XHJcbiAgICAgICAgbWFyZ2luOiAwIDhweCA4cHggMDsgXHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gIH1cclxuXHJcbiAgLnByb2dyZXNzLWJhci0tZ2V0LXRlYW1zIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxufVxyXG5cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJHNjcmVlbkd0WHMpIHtcclxuICBcclxuICAuY29udGFpbmVyX190ZWFtcyB7XHJcblxyXG4gICAgLnRlYW0tY2FyZCB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5wcm9ncmVzcy1iYXItLWdldC10ZWFtcyB7XHJcbiAgICAgIHdpZHRoOiAzMDBweDtcclxuICAgIH1cclxuICB9XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { MainNavigatorService } from '../../../shared/components/main-navigator/main-navigator.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TeamsService } from '../../teams.service';\r\nimport { AppService } from '../../../../app.service';\r\nimport { Team } from '../../models/team';\r\nimport { User } from '../../../users/models/user';\r\nimport { YesNoDialogComponent } from '../../../shared/components/yes-no-dialog/yes-no-dialog.component';\r\nimport { Subscription, Observable, of } from 'rxjs';\r\nimport { OnDestroy } from '@angular/core/src/metadata/lifecycle_hooks';\r\nimport { map, switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-teams-dashboard',\r\n  templateUrl: './teams-dashboard.component.html',\r\n  styleUrls: ['./teams-dashboard.component.scss']\r\n})\r\nexport class TeamsDashboardComponent implements OnInit, OnDestroy {\r\n\r\n  user: User = null;\r\n  getTeamsServiceRunning = false;\r\n  teamActionRunning: boolean[] = [];\r\n  teams: Team[] = [];\r\n  subscription: Subscription = new Subscription();\r\n\r\n  constructor(private route: ActivatedRoute, private mainNavigatorService: MainNavigatorService, private teamsService: TeamsService,\r\n    private appService: AppService, private router: Router, public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    const methodTrace = `${this.constructor.name} > ngOnInit() > `; // for debugging\r\n    \r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: '/welcome', selected: false },\r\n      { displayName: 'Teams', url: null, selected: true }\r\n    ]);\r\n\r\n    // get authUser from resolver\r\n    this.route.data.subscribe((data: { authUser: User }) => {\r\n      this.user = data.authUser;\r\n    });\r\n    // generates a user source object from authUser from resolver\r\n    const user$ = this.route.data.pipe(map((data: { authUser: User }) => data.authUser));\r\n    \r\n    \r\n    const newSubscription = user$.pipe(\r\n      switchMap((user: User): Observable<any> => {\r\n        this.user = user;\r\n\r\n        if (!this.teams.length) {\r\n          return this.getTeams$();\r\n        } else {\r\n          return of(this.teams);\r\n        }\r\n      })\r\n    ).subscribe(\r\n      (teams: Team[]) => {\r\n        this.teams = teams;\r\n        this.teamActionRunning = new Array(teams.length).fill(false);\r\n        this.getTeamsServiceRunning = false;\r\n      },\r\n      (error: any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n        } else {\r\n          this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n        }\r\n\r\n        this.getTeamsServiceRunning = false;\r\n      }\r\n    );\r\n    \r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    const methodTrace = `${this.constructor.name} > ngOnDestroy() > `; // for debugging\r\n\r\n    // this.appService.consoleLog('info', `${methodTrace} Component destroyed.`);\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Get a teams observable from server\r\n   * \r\n   * @return { Observable<Team[]> }\r\n   */\r\n  getTeams$(): Observable<Team[]> {\r\n    const methodTrace = `${this.constructor.name} > getTeams$() > `; // for debugging\r\n\r\n    this.teams = [];\r\n    this.getTeamsServiceRunning = true;\r\n\r\n    return  this.teamsService.getTeams$(this.user.email);\r\n  }\r\n\r\n  openDeleteTeamDialog(index: number, team: Team = null) {\r\n    const methodTrace = `${this.constructor.name} > openDeleteTeamDialog() > `; // for debugging\r\n    \r\n    if (!team) {\r\n      this.appService.consoleLog('error', `${methodTrace} Team is required to delete.`);\r\n      return false;\r\n    }\r\n\r\n    this.teamActionRunning[index] = true;\r\n    const yesNoDialogRef = this.dialog.open(YesNoDialogComponent, {\r\n      width: '250px',\r\n      data: {\r\n        title : 'Delete team', \r\n        message : `Are you sure you want to delete the team \"${team.name}\" forever?`\r\n      }\r\n    });\r\n\r\n    const newSubscription = yesNoDialogRef.afterClosed().subscribe(result => {\r\n      if (result === 'yes') {\r\n        this.delete(index, team);\r\n      } else {\r\n        this.teamActionRunning[index] = false;\r\n      }\r\n    });\r\n    this.subscription.add(newSubscription);\r\n\r\n    return false;\r\n  }\r\n\r\n  delete(index: number, team: Team = null) {\r\n    const methodTrace = `${this.constructor.name} > delete() > `; // for debugging\r\n\r\n    this.teamActionRunning[index] = true;\r\n\r\n    const newSubscription = this.teamsService.delete$(team.slug, this.user.email).subscribe(\r\n      (data: any) => {\r\n        if (data && data.removed > 0) {\r\n          this.teams.splice(index, 1);\r\n          this.teamActionRunning.splice(index, 1);\r\n          this.appService.showResults(`Team \"${team.name}\" successfully removed!`, 'success');\r\n        } else {\r\n          this.appService.showResults(`Team \"${team.name}\" could not be removed, please try again.`, 'error');\r\n        }\r\n\r\n        this.teamActionRunning[index] = false;\r\n      },\r\n      (error: any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n        } else if (error.codeno === 471) {\r\n          this.appService.showResults(error.msg, 'error', 7000);\r\n        } else {\r\n          this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n        }\r\n\r\n        this.teamActionRunning[index] = false;\r\n      }\r\n    );\r\n\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container__edit-team\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"none none\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign.gt-xs=\\\"center none\\\" fxLayoutGap=\\\"10px\\\">\\r\\n  <form *ngIf=\\\"!getTeamServiceRunning\\\" class=\\\"form__container form__edit-team\\\" (ngSubmit)=\\\"editMode ? onUpdate() : onSubmit()\\\" #editTeamForm=\\\"ngForm\\\" \\r\\n      novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n    \\r\\n    <section fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields\\\">\\r\\n      <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n        <h3 class=\\\"title\\\">\\r\\n          <p class=\\\"header\\\">Basic information</p>\\r\\n        </h3>\\r\\n        \\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- Team name -->\\r\\n          <mat-form-field fxFlex fxFlex.gt-xs=\\\"290px\\\" class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"tezt\\\" id=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Team name\\\" \\r\\n                [(ngModel)]=\\\"model.name\\\" \\r\\n                value=\\\"model.name\\\"\\r\\n                required\\r\\n                minlength=\\\"4\\\"\\r\\n                #name=\\\"ngModel\\\">\\r\\n            <mat-error *ngIf=\\\"name.invalid && (name.dirty || name.touched) && name.errors.required\\\">Name is required</mat-error>\\r\\n            <mat-error *ngIf=\\\"name.invalid && (name.dirty || name.touched) && name.errors.minlength\\\">Value must be longer than 3 characters</mat-error>\\r\\n          </mat-form-field>\\r\\n\\r\\n          <!-- Description -->\\r\\n          <mat-form-field fxFlex fxFlex.gt-xs=\\\"290px\\\" fxFlex.gt-sm=\\\"500px\\\" class=\\\"form__field\\\">\\r\\n            <textarea matInput id=\\\"description\\\" name=\\\"description\\\" placeholder=\\\"Description\\\"\\r\\n                matTextareaAutosize matAutosizeMinRows=\\\"2\\\" matAutosizeMaxRows=\\\"5\\\"\\r\\n                [(ngModel)]=\\\"model.description\\\" \\r\\n                value=\\\"model.description\\\"\\r\\n                #description=\\\"ngModel\\\">\\r\\n            </textarea>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"editMode\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n        <h3 class=\\\"title\\\">\\r\\n          <p class=\\\"header\\\">Members</p>\\r\\n          <p class=\\\"mat-caption\\\">Add or remove members. If a member(email) is not active on the platform we are going to send him/her an invitation to join AtomiCoconut</p>\\r\\n        </h3>\\r\\n        \\r\\n        <div class=\\\"members\\\" fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row wrap\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" fxLayoutGap=\\\"10px\\\">\\r\\n          <mat-card fxFlex fxFlex.gt-xs=\\\"none\\\"  *ngFor=\\\"let member of team.members; index as memberIndex\\\" class=\\\"member\\\" [class.not-saved-yet]=\\\"!member.name && !member.avatar\\\">\\r\\n            <mat-card-content fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"none center\\\">\\r\\n              \\r\\n              <img *ngIf=\\\"member.avatar\\\" class=\\\"member__avatar\\\" [src]=\\\"member.avatar\\\"/>\\r\\n              <mat-icon *ngIf=\\\"!member.avatar\\\" class=\\\"member__avatar member__avatar--default\\\">account_circle</mat-icon>\\r\\n              \\r\\n              <div fxFlex class=\\\"member__info\\\" fxLayout=\\\"column\\\" [matTooltip]=\\\"member.email === team.admin.email ? 'Administrator' : ''\\\" matTooltipPosition=\\\"right\\\">\\r\\n                <p *ngIf=\\\"member.name\\\" class=\\\"member__name\\\">\\r\\n                  {{member.name}}\\r\\n                  <mat-icon *ngIf=\\\"member.email === team.admin.email\\\" class=\\\"icon__admin\\\" aria-label=\\\"Admin\\\" >lock</mat-icon>\\r\\n                </p>\\r\\n                <p class=\\\"member__email\\\">{{member.email}}</p>\\r\\n              </div>\\r\\n    \\r\\n              <mat-icon  *ngIf=\\\"member.email !== team.admin.email\\\" matTooltip=\\\"Remove\\\" class=\\\"icon__remove-member\\\" (click)=\\\"removeMember(memberIndex)\\\">clear</mat-icon>\\r\\n            </mat-card-content>\\r\\n          </mat-card>\\r\\n        </div>\\r\\n      </div>\\r\\n    </section>\\r\\n\\r\\n    <section *ngIf=\\\"editMode\\\" class=\\\"add-members\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start end\\\">\\r\\n      <button mat-fab color=\\\"primary\\\" (click)=\\\"openAddPersonDialog()\\\">\\r\\n        <mat-icon aria-label=\\\"Add new member\\\">person_add</mat-icon>\\r\\n      </button>\\r\\n    </section>\\r\\n\\r\\n    <section class=\\\"form__actions form__actions--edit-team\\\"\\r\\n        fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" \\r\\n        fxLayoutAlign=\\\"none start\\\" fxLayoutAlign.gt-sm=\\\"center start\\\" \\r\\n        fxLayoutGap=\\\"10px\\\">\\r\\n\\r\\n      <button mat-fab *ngIf=\\\"!editTeamServiceRunning\\\" \\r\\n          class=\\\"fab mat-elevation-z10 form__action\\\" \\r\\n          color=\\\"accent\\\" \\r\\n          type=\\\"submit\\\"\\r\\n          matTooltip=\\\"Save changes\\\" matTooltipPosition=\\\"left\\\" \\r\\n          [disabled]=\\\"!editTeamForm.form.valid\\\">\\r\\n        <mat-icon aria-label=\\\"Save changes\\\">save</mat-icon>\\r\\n      </button>\\r\\n      \\r\\n      <mat-progress-spinner *ngIf=\\\"editTeamServiceRunning\\\"\\r\\n          class=\\\"progress-spinner progress-spinner--edit-team\\\"\\r\\n          color=\\\"accent\\\"\\r\\n          [diameter]=\\\"55\\\" [strokeWidth]=\\\"10\\\"\\r\\n          mode=\\\"indeterminate\\\">\\r\\n      </mat-progress-spinner>\\r\\n    </section>\\r\\n    \\r\\n  </form>\\r\\n\\r\\n  <progress-bar class=\\\"progress-bar--get-team\\\" *ngIf=\\\"getTeamServiceRunning\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      message=\\\"Loading team info...\\\">\\r\\n  </progress-bar>\\r\\n  \\r\\n</div>\"","module.exports = \".progress-bar--get-team {\\n  width: 100%; }\\n\\n.form__edit-team .form__actions--edit-team {\\n  margin: 20px 0; }\\n\\n.members .member {\\n  margin-bottom: 10px;\\n  padding: 14px;\\n  border-radius: 50px;\\n  cursor: default; }\\n\\n.members .member .member__avatar {\\n    border-radius: 50%;\\n    width: 40px;\\n    height: 40px; }\\n\\n.members .member .member__info .icon__admin {\\n    font-size: 14px;\\n    height: auto;\\n    width: auto; }\\n\\n.members .member .member__info .member__email {\\n    font-size: 11px; }\\n\\n.members .member .icon__remove-member {\\n    font-size: 16px;\\n    height: auto;\\n    width: auto;\\n    cursor: pointer; }\\n\\n.members .member.not-saved-yet .member__avatar--default {\\n    font-size: 40px;\\n    color: #f44336; }\\n\\n@media screen and (min-width: 600px) {\\n  .progress-bar--get-team {\\n    width: 300px; } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy90ZWFtcy9jb21wb25lbnRzL3RlYW1zLWVkaXQvQzpcXHczXFxhdG9taUNvY29udXRcXGNsaWVudC9zcmNcXGFwcFxcbW9kdWxlc1xcdGVhbXNcXGNvbXBvbmVudHNcXHRlYW1zLWVkaXRcXHRlYW1zLWVkaXQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21vZHVsZXMvdGVhbXMvY29tcG9uZW50cy90ZWFtcy1lZGl0L0M6XFx3M1xcYXRvbWlDb2NvbnV0XFxjbGllbnQvc3JjXFxfdmFyaWFibGVzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7RUFDRSxZQUFXLEVBQ1o7O0FBRUQ7RUFHSSxlQUFjLEVBQ2Y7O0FBR0g7RUFDRSxvQkFBbUI7RUFDbkIsY0FBYTtFQUNiLG9CQUFtQjtFQUNuQixnQkFBZSxFQW9DaEI7O0FBeENEO0lBT0ksbUJBQWtCO0lBQ2xCLFlBQVc7SUFDWCxhQUFZLEVBQ2I7O0FBVkg7SUFlTSxnQkFBZTtJQUNmLGFBQVk7SUFDWixZQUFXLEVBQ1o7O0FBbEJMO0lBcUJNLGdCQUFlLEVBQ2hCOztBQXRCTDtJQTJCSSxnQkFBZTtJQUNmLGFBQVk7SUFDWixZQUFXO0lBQ1gsZ0JBQWUsRUFDaEI7O0FBL0JIO0lBb0NNLGdCQUFlO0lBQ2YsZUMxQ1MsRUQyQ1Y7O0FBSUw7RUFFRTtJQUNFLGFBQVksRUFDYixFQUFBIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy90ZWFtcy9jb21wb25lbnRzL3RlYW1zLWVkaXQvdGVhbXMtZWRpdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJy4uLy4uLy4uLy4uLy4uL3ZhcmlhYmxlcyc7XHJcblxyXG5cclxuLnByb2dyZXNzLWJhci0tZ2V0LXRlYW0ge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uZm9ybV9fZWRpdC10ZWFtIHtcclxuXHJcbiAgLmZvcm1fX2FjdGlvbnMtLWVkaXQtdGVhbSB7XHJcbiAgICBtYXJnaW46IDIwcHggMDtcclxuICB9XHJcbn1cclxuXHJcbi5tZW1iZXJzIC5tZW1iZXIge1xyXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgcGFkZGluZzogMTRweDtcclxuICBib3JkZXItcmFkaXVzOiA1MHB4O1xyXG4gIGN1cnNvcjogZGVmYXVsdDtcclxuXHJcbiAgLm1lbWJlcl9fYXZhdGFyIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgaGVpZ2h0OiA0MHB4O1xyXG4gIH1cclxuXHJcbiAgLm1lbWJlcl9faW5mbyB7XHJcbiAgICBcclxuICAgIC5pY29uX19hZG1pbiB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICB3aWR0aDogYXV0bztcclxuICAgIH1cclxuXHJcbiAgICAubWVtYmVyX19lbWFpbCB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTFweDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICAgXHJcbiAgLmljb25fX3JlbW92ZS1tZW1iZXIge1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgfVxyXG5cclxuICAmLm5vdC1zYXZlZC15ZXQge1xyXG4gICAgXHJcbiAgICAubWVtYmVyX19hdmF0YXItLWRlZmF1bHQge1xyXG4gICAgICBmb250LXNpemU6IDQwcHg7XHJcbiAgICAgIGNvbG9yIDogJHdhcm47XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkc2NyZWVuR3RYcykge1xyXG5cclxuICAucHJvZ3Jlc3MtYmFyLS1nZXQtdGVhbSB7XHJcbiAgICB3aWR0aDogMzAwcHg7XHJcbiAgfVxyXG59IiwiLy9CcmVha3BvaW50c1xyXG4kc2NyZWVuR3RYczogNjAwcHg7XHJcbiRzY3JlZW5HdFNtOiA5NjBweDsgXHJcblxyXG5cclxuLy9Db2xvcnNcclxuJHByaW1hcnk6ICM3YjFmYTI7XHJcbiRzZWNvbmRhcnk6IHJnYigxNTYsIDM5LCAxNzYpO1xyXG4kYWNjZW50OiAjNjlmMGFlO1xyXG4kd2FybiA6ICNmNDQzMzY7XHJcbiRwdXJwbGUgOiAkcHJpbWFyeTtcclxuJHB1cnBsZUZvbnRzIDogI0MzNTJGMztcclxuJGdyZWVuOiAjMjhGRTdDO1xyXG4kcmVkOiAjZmY1MjcxO1xyXG4kbGlnaHRPcmFuZ2UgOiByZ2JhKDI1NSwgMTg3LCAwLCAwLjg3KTtcclxuJGFsbW9zdFdoaXRlIDogcmdiYSgyNTUsMjU1LDI1NSwuODcpO1xyXG4kYWxtb3N0QmxhY2sgOiByZ2JhKDAsMCwwLC44Nyk7Il19 */\"","import { Component, OnInit, OnDestroy} from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { MainNavigatorService } from '../../../shared/components/main-navigator/main-navigator.service';\r\nimport { AddPersonToTeamDialogComponent } from '../../components/add-person-to-team-dialog/add-person-to-team-dialog.component';\r\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\r\nimport { User } from '../../../users/models/user';\r\nimport { TeamsService } from '../../teams.service';\r\nimport { AppService } from '../../../../app.service';\r\nimport { Team } from '../../models/team';\r\nimport { Subscription, of, Observable } from 'rxjs';\r\nimport { map, combineLatest, switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-teams-edit',\r\n  templateUrl: './teams-edit.component.html',\r\n  styleUrls: ['./teams-edit.component.scss']\r\n})\r\nexport class TeamsEditComponent implements OnInit, OnDestroy {\r\n\r\n  editMode = false;\r\n  user: User = null;\r\n  team: Team = null;\r\n  editTeamServiceRunning = false;\r\n  getTeamServiceRunning = false;\r\n  model: any = {\r\n    name : null,\r\n    description : null,\r\n    email : null, // user email for api check\r\n    members : []\r\n  };\r\n  slug: string = null;\r\n  subscription: Subscription = new Subscription();\r\n\r\n  constructor(private route: ActivatedRoute, private mainNavigatorService: MainNavigatorService, private teamsService: TeamsService,\r\n      private appService: AppService, private router: Router, public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    const methodTrace = `${this.constructor.name} > ngOnInit() > `; // for debugging\r\n\r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: '/welcome', selected: false },\r\n      { displayName: 'Teams', url: '/teams', selected: false }\r\n    ]);\r\n\r\n    // generates a user source object from authUser from resolver\r\n    const user$ = this.route.data.pipe(map((data: { authUser: User }) => data.authUser));\r\n    \r\n    // generates an investment id source from id parameter in url\r\n    const slug$ = this.route.paramMap.pipe(map((params: ParamMap) => params.get('slug')));\r\n\r\n    // combine user$ and id$ sources into one object and start listen to it for changes\r\n    const newSubscription: Subscription = user$.pipe(\r\n      combineLatest(slug$, (user, slug) => { \r\n        return { user, teamSlug : slug }; \r\n      }), \r\n      switchMap((data: any) => {\r\n        this.user = data.user;\r\n        this.model.email = data.user.email;\r\n\r\n        this.editTeamServiceRunning = false;\r\n        this.getTeamServiceRunning = false;\r\n        \r\n        if (!data.teamSlug) {\r\n          // we are creating a new team\r\n          this.slug = null;\r\n          this.editMode = false;\r\n          this.mainNavigatorService.appendLink({ displayName: 'Create Team', url: '', selected : true });\r\n          return of(null);\r\n        } else {\r\n          if (this.slug) {\r\n            // if this is true means the user updated the name and we refresh the page to update the slug in the url\r\n            // in this case we don't want to append the edit team link to the navigation component because it is already there.\r\n          } else {\r\n            this.mainNavigatorService.appendLink({ displayName: 'Edit Team', url: '', selected : true });\r\n          }\r\n          // we are editing an existing investment\r\n          this.slug = data.teamSlug; // the new slug\r\n          this.editMode = true;\r\n          \r\n          return this.getTeam$(data.teamSlug); // get data\r\n        }\r\n      })\r\n    ).subscribe((team: Team) => {\r\n      if (team) {\r\n        // we are editing a team\r\n        this.team = team;\r\n        // populate the model\r\n        this.model.name = this.team.name;\r\n        this.model.description = this.team.description;  \r\n      } else {\r\n        // we are creating a team, do nothing\r\n      }\r\n      \r\n      this.getTeamServiceRunning = false;\r\n    },\r\n    (error: any) => {\r\n      this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n      if (error.codeno === 400) {\r\n        this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n      } else if (error.codeno === 461 || error.codeno === 462) {\r\n        this.appService.showResults(error.msg, 'error');\r\n        this.router.navigate(['/welcome']);\r\n      } else {\r\n        this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n      }\r\n\r\n      this.getTeamServiceRunning = false;\r\n    });\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n  /**\r\n   * Get a team observable from server based on the slug provided\r\n   * @param {string} slug \r\n   * \r\n   * @return {Observable<Team>} teams source\r\n   */\r\n  getTeam$(slug: string): Observable<Team> {\r\n    const methodTrace = `${this.constructor.name} > getTeam$() > `; // for debugging\r\n\r\n    if (!slug) {\r\n      this.appService.showResults(`Invalid team ID`, 'error');\r\n      this.appService.consoleLog('error', `${methodTrace} Slug parameter must be provided, but was: `, slug);\r\n      return of(null);\r\n    }\r\n\r\n    this.getTeamServiceRunning = true;\r\n\r\n    return this.teamsService.getMyTeamBySlug$(this.user.email, slug);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    const methodTrace = `${this.constructor.name} > ngOnDestroy() > `; // for debugging\r\n\r\n    // this.appService.consoleLog('info', `${methodTrace} Component destroyed.`);\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onSubmit() {\r\n    const methodTrace = `${this.constructor.name} > onSubmit() > `; // for debugging\r\n\r\n    this.editTeamServiceRunning = true;\r\n    // call the team create service\r\n    const newSubscription = this.teamsService.create$(this.model).subscribe(\r\n      (newTeam: Team) => {\r\n        if (newTeam && newTeam.slug) {\r\n          this.appService.showResults(`Team ${newTeam.name} successfully created!`, 'success');\r\n          this.router.navigate(['/teams/edit', newTeam.slug]);\r\n        } else {\r\n          this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`);\r\n          this.editTeamServiceRunning = false;\r\n        }\r\n      },\r\n      (error: any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error with the create/edit team service.`, error);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error with the team services, please try again in a few minutes.`, 'error');\r\n        }\r\n\r\n        this.editTeamServiceRunning = false;\r\n      }\r\n    );\r\n\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n  onUpdate() {\r\n    const methodTrace = `${this.constructor.name} > onUpdate() > `; // for debugging\r\n    \r\n    this.editTeamServiceRunning = true;\r\n\r\n    // add slug and members to service payload\r\n    this.model.slug = this.slug;\r\n    this.model.members = []; // reset the members array\r\n    for (const member of this.team.members) {\r\n      this.model.members.push(member.email);\r\n    }\r\n\r\n    // TODO check the new members are not duplicated, especially the admin\r\n\r\n    // call the team update service\r\n    const newSubscription = this.teamsService.update$(this.model).subscribe(\r\n      (team: Team) => {\r\n          \r\n        if (this.slug !== team.slug) {\r\n          // this means that the team name was update and therefore the slug too\r\n          this.router.navigate(['/teams/edit', team.slug]); // go home \r\n        } else {\r\n          // create team\r\n          this.team = team;\r\n          // populate the model\r\n          this.model.name = this.team.name;\r\n          this.model.description = this.team.description;\r\n          this.editTeamServiceRunning = false;  \r\n        }\r\n      },\r\n      (error: any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n        } else {\r\n          this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n        }\r\n\r\n        this.editTeamServiceRunning = false;\r\n      }\r\n    );\r\n\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n  openAddPersonDialog() {\r\n    const addPersonDialogRef = this.dialog.open(AddPersonToTeamDialogComponent, {\r\n      width: '250px',\r\n      data: {}\r\n    });\r\n\r\n    const newSubscription = addPersonDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        const newMember = new User('', result);\r\n        this.team.members.push(newMember);\r\n      }\r\n    });\r\n\r\n    this.subscription.add(newSubscription);\r\n\r\n    return false;\r\n  }\r\n\r\n  removeMember(index: number) {\r\n    this.team.members.splice(index, 1);\r\n  }\r\n}\r\n","import { User } from '../../users/models/user';\r\n\r\nexport class Team {\r\n\r\n  name: string;\r\n  description: string;\r\n  slug: string;\r\n  members: User[];\r\n  admin: User;\r\n\r\n  constructor(name: string = null, description: string = null, slug: string = null, admin: User = null, members: User[] = null) {\r\n    this.name = name;\r\n    this.slug = slug;\r\n    this.description = description;\r\n    this.admin = admin;\r\n    this.members = members;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TeamsDashboardComponent } from './components/teams-dashboard/teams-dashboard.component';\r\nimport { TeamsEditComponent } from './components/teams-edit/teams-edit.component';\r\nimport { AuthResolver } from '../../auth-resolver.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path : 'teams',\r\n    children : [\r\n      { \r\n        path : 'create', \r\n        component : TeamsEditComponent,\r\n        resolve : {\r\n          authUser : AuthResolver\r\n        } \r\n      },\r\n      { \r\n        path : 'edit/:slug', \r\n        component : TeamsEditComponent,\r\n        resolve : {\r\n          authUser : AuthResolver\r\n        } \r\n      },\r\n      { \r\n        path : '', \r\n        pathMatch : 'full',\r\n        component : TeamsDashboardComponent,\r\n        resolve : {\r\n          authUser : AuthResolver\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TeamsRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { TeamsRoutingModule } from './teams-routing.module';\r\nimport { TeamsDashboardComponent } from './components/teams-dashboard/teams-dashboard.component';\r\nimport { CustomMaterialDesignModule } from '../../modules/shared/custom-material-design.module';\r\nimport { TeamsEditComponent } from './components/teams-edit/teams-edit.component';\r\nimport { TeamsService } from './teams.service';\r\nimport { AddPersonToTeamDialogComponent } from './components/add-person-to-team-dialog/add-person-to-team-dialog.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TeamsRoutingModule,\r\n    CustomMaterialDesignModule,\r\n    FormsModule,\r\n    FlexLayoutModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    TeamsDashboardComponent, \r\n    TeamsEditComponent, \r\n    AddPersonToTeamDialogComponent\r\n  ],\r\n  entryComponents: [\r\n    AddPersonToTeamDialogComponent //added as material doc suggest to allow AOT on this on the fly created class\r\n  ],\r\n  providers : [ TeamsService ]\r\n})\r\nexport class TeamsModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\nimport { AppService } from '../../app.service';\r\nimport { Team } from './models/team';\r\nimport { User } from '../users/models/user';\r\nimport { Observable } from 'rxjs';\r\nimport { Response } from '../../models/response';\r\nimport { of } from 'rxjs';\r\nimport { map, catchError, flatMap } from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class TeamsService {\r\n\r\n  private serverHost: string = environment.apiHost + '/api/teams';\r\n  private headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n\r\n  constructor(private http: HttpClient, private appService: AppService) {}\r\n\r\n  /**\r\n   * Server call to Create a new team in the system \r\n   * @param postData \r\n   * \r\n   * @return { Observable<Team> }\r\n   */\r\n  create$(postData: any = {}): Observable<Team> {\r\n    const methodTrace = `${this.constructor.name} > create$() > `; // for debugging\r\n\r\n    return this.http.post<Response>(`${this.serverHost}/create`, postData, { headers : this.headers }).pipe(\r\n      map(this.appService.extractData),\r\n      catchError(this.appService.handleError),\r\n      flatMap((data: any): Observable<Team> => {\r\n        return of(this.populate(data));\r\n      })\r\n    );\r\n  } \r\n  \r\n  /**\r\n   * Server call to Update a team in the system \r\n   * @param postData\r\n   * \r\n   * @return { Observable<Team> } \r\n   */\r\n  update$(postData: any = {}): Observable<Team> {\r\n    const methodTrace = `${this.constructor.name} > update$() > `; // for debugging\r\n\r\n    return this.http.post<Response>(`${this.serverHost}/update`, postData, { headers : this.headers }).pipe(\r\n      map(this.appService.extractData),\r\n      catchError(this.appService.handleError),\r\n      flatMap((data: any): Observable<Team> => {\r\n        if (data && data.team && data.team.slug) {\r\n          const messages: any[] = [\r\n            {\r\n              message : `Team \"${data.team.name}\" successfully updated!`,\r\n              type : 'success'\r\n            }\r\n          ];\r\n\r\n          if (data.usersNotRegistered.length) {\r\n            // handle not registered users\r\n            const message = {\r\n              message : `The following emails added to the team are not registered users in AtomiCoconut: `,\r\n              duration : 8000\r\n            };\r\n            \r\n            for (const email of data.usersNotRegistered) {\r\n              message.message += `\"${email}\", `;\r\n            }\r\n\r\n            message.message = message.message.slice(0, -2); // remove last comma char\r\n            message.message += '. We sent them an email to create an account. Once they do it try to add them again.';\r\n\r\n            messages.push(message);\r\n          }\r\n\r\n          this.appService.showManyResults(messages);\r\n          return of(this.populate(data.team));\r\n        } else {\r\n          this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`);\r\n        }\r\n\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Server call to Get a team from the server based on its slug\r\n   * @param {string} slug . The team slug\r\n   * \r\n   * @return { Observable<Team> }\r\n   */\r\n  getMyTeamBySlug$(email: string, slug: string): Observable<Team> {\r\n    const methodTrace = `${this.constructor.name} > getMyTeamBySlug$() > `; // for debugging\r\n\r\n    if (!email || !slug) {\r\n      this.appService.consoleLog('error', `${methodTrace} Required parameters missing.`);\r\n      return of(null);\r\n    }\r\n\r\n    const params = new HttpParams()\r\n        .set('email', email)\r\n        .set('slug', slug);\r\n\r\n    return this.http.get<Response>(`${this.serverHost}/getMyTeamBySlug`, { params }).pipe(\r\n      map(this.appService.extractData),\r\n      catchError(this.appService.handleError),\r\n      flatMap((data: any): Observable<Team> => {\r\n        return of(this.populate(data));\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Server call to Get all the teams for the current user from the server\r\n   * @param {string} slug . The team slug\r\n   * \r\n   * @return { Observable<Team[]> }\r\n   */\r\n  getTeams$(email: string): Observable<Team[]> {\r\n    const methodTrace = `${this.constructor.name} > getTeams$() > `; // for debugging\r\n\r\n    if (!email) {\r\n      this.appService.consoleLog('error', `${methodTrace} Required parameters missing.`);\r\n      return of([]);\r\n    }\r\n\r\n    const params = new HttpParams().set('email', email);\r\n\r\n    const teamsData$ = this.http.get<Response>(`${this.serverHost}/getAll`, { params })\r\n        .pipe(\r\n          map(this.appService.extractData),\r\n          catchError(this.appService.handleError)\r\n        );\r\n    \r\n    return teamsData$.pipe(flatMap((teamsData): Observable<Team[]> => {\r\n      const teams: Team[] = [];\r\n\r\n      if (teamsData && teamsData instanceof Array) {\r\n        for (const item of teamsData) {\r\n          teams.push(this.populate(item));\r\n        }\r\n      } else {\r\n        this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`);\r\n      }\r\n\r\n      return of(teams);\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Populates a team from an object from server\r\n   * @param { any } teamData\r\n   * \r\n   * @return { Team } \r\n   */\r\n  populate(teamData: any): Team {\r\n    const methodTrace = `${this.constructor.name} > populate() > `; // for debugging\r\n\r\n    if (teamData && teamData.slug) {\r\n      // populate admin\r\n      const admin = new User(teamData.admin.name, teamData.admin.email, teamData.admin.gravatar);\r\n      // populate members\r\n      const members = [];\r\n      for (const member of teamData.members) {\r\n        const newMember = new User(member.name, member.email, member.gravatar);\r\n        members.push(newMember);\r\n      }\r\n      // create team\r\n      return new Team(teamData.name, teamData.description || null, teamData.slug, admin, members);\r\n    } else {\r\n      this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Server call to Get all the teams for the current user from the server\r\n   * @param {string} slug . The team slug\r\n   * @param {string} email . The current user email.\r\n   * \r\n   * @return { Observable<any> }\r\n   */\r\n  delete$(slug: string, email: string): Observable<any> {\r\n    const methodTrace = `${this.constructor.name} > delete$() > `; // for debugging\r\n\r\n    if (!slug || !email) {\r\n      this.appService.consoleLog('error', `${methodTrace} Required parameters missing.`);\r\n      return Observable.throw(null);\r\n    }\r\n\r\n    const params = new HttpParams().set('email', email);\r\n\r\n    return this.http.delete<Response>(`${this.serverHost}/delete/${slug}`, {headers : this.headers, params } )\r\n        .pipe(\r\n          map(this.appService.extractData),\r\n          catchError(this.appService.handleError)\r\n        );\r\n  }\r\n}\r\n","module.exports = \"\\r\\n<div class=\\\"container__account-finance\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"none none\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign.gt-xs=\\\"center none\\\" fxLayoutGap=\\\"10px\\\">\\r\\n  <form class=\\\"form__container form__account-finance\\\" #financeForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" >\\r\\n    <section fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields\\\">      \\r\\n      <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n\\r\\n          <!-- Active income -->\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n            <currency-unit fxFlex=\\\"50px\\\"\\r\\n                [id]=\\\"'annualIncomeUnit'\\\" \\r\\n                [value]=\\\"model.annualIncomeUnit\\\"\\r\\n                [view]=\\\"'narrow'\\\"\\r\\n                (newValue)=\\\"onCurrencyUnitChange($event)\\\">\\r\\n            </currency-unit>\\r\\n            \\r\\n            <mat-form-field fxFlex fxFlex.gt-xs=\\\"300px\\\" class=\\\"form__field\\\">\\r\\n              <input matInput type=\\\"number\\\" id=\\\"annualIncome\\\" name=\\\"annualIncome\\\" placeholder=\\\"Annual Income\\\"\\r\\n                  [(ngModel)]=\\\"model.annualIncome\\\" \\r\\n                  value=\\\"model.annualIncome\\\"\\r\\n                  numberValidator \\r\\n                  #annualIncome=\\\"ngModel\\\">\\r\\n              <mat-hint align=\\\"start\\\">Annual income amount pre-tax.</mat-hint>\\r\\n              <mat-error *ngIf=\\\"annualIncome.invalid && (annualIncome.dirty || annualIncome.touched) && annualIncome.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <!-- Tax rate -->\\r\\n          <div fxFlex=\\\"none\\\" fxFlex.gt-xs fxLayout=\\\"column\\\" class=\\\"form__field slider__field\\\">\\r\\n            <label class=\\\"slider__label\\\">Income tax rate</label>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n              <mat-slider fxFlex id=\\\"incomeTaxRate\\\" name=\\\"incomeTaxRate\\\"\\r\\n                  color=\\\"accent\\\"\\r\\n                  [max]=\\\"50\\\"\\r\\n                  [min]=\\\"0\\\"\\r\\n                  [step]=\\\"1\\\"\\r\\n                  thumbLabel=\\\"true\\\"\\r\\n                  tickInterval=\\\"1\\\"\\r\\n                  [(ngModel)]=\\\"model.incomeTaxRate\\\"\\r\\n                  [value]=\\\"model.incomeTaxRate\\\"> \\r\\n              </mat-slider>\\r\\n              <span *ngIf=\\\"model.incomeTaxRate\\\">{{model.incomeTaxRate}}%</span>\\r\\n            </div>\\r\\n            <label class=\\\"mat-hint slider__label__hint\\\">Percentage of your income being taxed.</label>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- Savings -->\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n            <currency-unit fxFlex=\\\"50px\\\"\\r\\n                [id]=\\\"'savingsUnit'\\\" \\r\\n                [value]=\\\"model.savingsUnit\\\"\\r\\n                [view]=\\\"'narrow'\\\"\\r\\n                (newValue)=\\\"onCurrencyUnitChange($event)\\\">\\r\\n            </currency-unit>\\r\\n            \\r\\n            <mat-form-field fxFlex fxFlex.gt-xs=\\\"300px\\\" class=\\\"form__field\\\">\\r\\n              <input matInput type=\\\"number\\\" id=\\\"savings\\\" name=\\\"savings\\\" placeholder=\\\"Current savings\\\" \\r\\n                  [(ngModel)]=\\\"model.savings\\\" \\r\\n                  value=\\\"model.savings\\\"\\r\\n                  numberValidator\\r\\n                  #savings=\\\"ngModel\\\">\\r\\n\\r\\n              <mat-error *ngIf=\\\"savings.invalid && (savings.dirty || savings.touched) && savings.errors.numberValidator\\\">Value must be numeric, with no more than two decimal digits</mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </section>\\r\\n\\r\\n    <section class=\\\"form__actions form__actions--account-finance\\\"\\r\\n        fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" \\r\\n        fxLayoutAlign=\\\"none start\\\" fxLayoutAlign.gt-sm=\\\"center start\\\" \\r\\n        fxLayoutGap=\\\"10px\\\">\\r\\n        \\r\\n      <button mat-fab *ngIf=\\\"!accountFinanceServiceRunning\\\" \\r\\n          class=\\\"fab mat-elevation-z10 form__action\\\" \\r\\n          color=\\\"accent\\\" \\r\\n          type=\\\"submit\\\"\\r\\n          matTooltip=\\\"Save changes\\\" matTooltipPosition=\\\"left\\\" \\r\\n          [disabled]=\\\"!financeForm.form.valid\\\">\\r\\n        <mat-icon aria-label=\\\"Save changes\\\">save</mat-icon>\\r\\n      </button>\\r\\n      \\r\\n      <mat-progress-spinner *ngIf=\\\"accountFinanceServiceRunning\\\"\\r\\n          class=\\\"progress-spinner progress-spinner--account-finance\\\"\\r\\n          color=\\\"accent\\\"\\r\\n          [diameter]=\\\"55\\\" [strokeWidth]=\\\"10\\\"\\r\\n          mode=\\\"indeterminate\\\">\\r\\n      </mat-progress-spinner>\\r\\n    </section>\\r\\n  </form>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdXNlcnMvY29tcG9uZW50cy9hY2NvdW50LWZpbmFuY2UtaW5mby9hY2NvdW50LWZpbmFuY2UtaW5mby5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { MatSelectChange } from '@angular/material';\r\nimport { User } from '../../models/user';\r\nimport { AccountFinance } from '../../models/account-finance';\r\nimport { UsersService } from '../../users.service';\r\nimport { AppService } from '../../../../app.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'account-finance-info',\r\n  templateUrl: './account-finance-info.component.html',\r\n  styleUrls: ['./account-finance-info.component.scss']\r\n})\r\nexport class AccountFinanceInfoComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() user: User;\r\n  model: any = { \r\n    email : null, \r\n    annualIncome : null,\r\n    annualIncomeUnit : null,\r\n    incomeTaxRate : null, \r\n    savings : null,\r\n    savingsUnit : null\r\n  };\r\n  accountFinanceServiceRunning = false;\r\n  subscription: Subscription = new Subscription();\r\n  \r\n  constructor(private usersService: UsersService, private appService: AppService) {}\r\n\r\n  ngOnInit() {\r\n    const methodTrace = `${this.constructor.name} > ngOnInit() > `; // for debugging\r\n    \r\n    this.model.email = this.user.email;\r\n    this.model.annualIncomeUnit = this.user.currency;\r\n    this.model.savingsUnit = this.user.currency;\r\n\r\n    if (this.user.financialInfo) {\r\n      Object.assign(this.model, {\r\n        annualIncome : this.user.financialInfo.annualIncome,\r\n        annualIncomeUnit : this.user.financialInfo.annualIncomeUnit,\r\n        incomeTaxRate : this.user.financialInfo.incomeTaxRate,\r\n        savings : this.user.financialInfo.savings,\r\n        savingsUnit : this.user.financialInfo.savingsUnit\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    const methodTrace = `${this.constructor.name} > ngOnDestroy() > `; // for debugging\r\n\r\n    // this.appService.consoleLog('info', `${methodTrace} Component destroyed.`);\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onCurrencyUnitChange($event: MatSelectChange) {\r\n    if ($event.source.id === 'annualIncomeUnit') {\r\n      this.model.annualIncomeUnit = $event.value;\r\n    } else if ($event.source.id === 'savingsUnit') {\r\n      this.model.savingsUnit = $event.value;\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    const methodTrace = `${this.constructor.name} > onSubmit() > `; // for debugging\r\n\r\n    this.accountFinanceServiceRunning = true;\r\n\r\n    // call the account service\r\n    const newSubscription: Subscription = this.usersService.updateFinancialInfo$(this.model).subscribe(\r\n      (user: User) => {\r\n        if (user) {\r\n          this.appService.showResults(`Your financial information was successfully updated!.`, 'success');\r\n        }\r\n\r\n        this.accountFinanceServiceRunning = false;\r\n      },\r\n      (error: any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n        } else {\r\n          this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n        }\r\n\r\n        this.accountFinanceServiceRunning = false;\r\n      }\r\n    );\r\n    this.subscription.add(newSubscription);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container__account-personal\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"none none\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign.gt-xs=\\\"center none\\\" fxLayoutGap=\\\"10px\\\">\\r\\n  <form class=\\\"form__container form__account-personal\\\" #personalInfoForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" >\\r\\n    <section fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields\\\">      \\r\\n      <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n\\r\\n          <!-- Birthday -->\\r\\n          <mat-form-field fxFlex fxFlex.gt-xs=\\\"300px\\\" class=\\\"form__field\\\">\\r\\n            <input placeholder=\\\"Day of birth\\\"\\r\\n                id=\\\"birthday\\\"\\r\\n                name=\\\"birthday\\\"\\r\\n                readonly\\r\\n                required\\r\\n                #birthday=\\\"ngModel\\\"\\r\\n                matInput \\r\\n                [(ngModel)]=\\\"model.birthday\\\" \\r\\n                [matDatepicker]=\\\"pickerBirthday\\\"\\r\\n                (click)=\\\"pickerBirthday.open()\\\">\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"pickerBirthday\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker [touchUi]=\\\"utilService.isGtSm() ? false : true\\\" #pickerBirthday startView=\\\"year\\\" [startAt]=\\\"startAt\\\"></mat-datepicker>\\r\\n            <mat-error *ngIf=\\\"birthday.invalid && (birthday.dirty || birthday.touched) && birthday.errors.matDatepickerParse\\\">Day of birth is invalid or not follow the pattern \\\"mm/dd/yyyy\\\"</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n    </section>\\r\\n    \\r\\n    <section class=\\\"form__actions form__actions--account-personal\\\"\\r\\n        fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" \\r\\n        fxLayoutAlign=\\\"none start\\\" fxLayoutAlign.gt-sm=\\\"center start\\\" \\r\\n        fxLayoutGap=\\\"10px\\\">\\r\\n        \\r\\n      <button mat-fab *ngIf=\\\"!accountPersonalServiceRunning\\\" \\r\\n          class=\\\"fab mat-elevation-z10 form__action\\\" \\r\\n          color=\\\"accent\\\" \\r\\n          type=\\\"submit\\\"\\r\\n          matTooltip=\\\"Save changes\\\" matTooltipPosition=\\\"left\\\" \\r\\n          [disabled]=\\\"!personalInfoForm.form.valid\\\">\\r\\n        <mat-icon aria-label=\\\"Save changes\\\">save</mat-icon>\\r\\n      </button>\\r\\n      \\r\\n      <mat-progress-spinner *ngIf=\\\"accountPersonalServiceRunning\\\"\\r\\n          class=\\\"progress-spinner progress-spinner--account-personal\\\"\\r\\n          color=\\\"accent\\\"\\r\\n          [diameter]=\\\"55\\\" [strokeWidth]=\\\"10\\\"\\r\\n          mode=\\\"indeterminate\\\">\\r\\n      </mat-progress-spinner>\\r\\n    </section>\\r\\n  </form>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdXNlcnMvY29tcG9uZW50cy9hY2NvdW50LXBlcnNvbmFsLWluZm8vYWNjb3VudC1wZXJzb25hbC1pbmZvLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { DateAdapter, NativeDateAdapter } from '@angular/material';\r\nimport {User} from '../../models/user';\r\nimport {AccountPersonal} from '../../models/account-personal';\r\nimport { UsersService } from '../../users.service';\r\nimport { AppService } from '../../../../app.service';\r\nimport { UtilService } from '../../../../util.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'account-personal-info',\r\n  templateUrl: './account-personal-info.component.html',\r\n  styleUrls: ['./account-personal-info.component.scss']\r\n})\r\nexport class AccountPersonalInfoComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() user: User;\r\n  model: any = { birthday : null, email : null };\r\n  startAt: Date = new Date(1990, 0, 1);\r\n  accountPersonalServiceRunning = false;\r\n  subscription: Subscription = new Subscription();\r\n\r\n  constructor(private dateAdapter: DateAdapter<NativeDateAdapter>, private usersService: UsersService, private appService: AppService, \r\n        public utilService: UtilService) {\r\n    this.dateAdapter.setLocale('en-GB');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.model.email = this.user.email;\r\n    \r\n    if (this.user.personalInfo) {\r\n      this.model.birthday = this.user.personalInfo.birthday;\r\n      \r\n      if (this.user.personalInfo.birthday) {\r\n        this.startAt = this.user.personalInfo.birthday;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    const methodTrace = `${this.constructor.name} > ngOnDestroy() > `; // for debugging\r\n\r\n    // this.appService.consoleLog('info', `${methodTrace} Component destroyed.`);\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onSubmit() {\r\n    const methodTrace = `${this.constructor.name} > onSubmit() > `; // for debugging\r\n\r\n    this.accountPersonalServiceRunning = true;\r\n    // call the account service\r\n    const newSubscription = this.usersService.updatePersonalInfo$(this.model).subscribe(\r\n      (user: User) => {\r\n        if (user) {\r\n          this.appService.showResults(`Your personal information was successfully updated!.`, 'success');\r\n        }\r\n\r\n        this.accountPersonalServiceRunning = false;\r\n      },\r\n      (error: any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n        } else {\r\n          this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n        }\r\n\r\n        this.accountPersonalServiceRunning = false;\r\n      }\r\n    );\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container__account-user\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"none none\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign.gt-xs=\\\"center none\\\" fxLayoutGap=\\\"10px\\\">\\r\\n  <form class=\\\"form__container form__account-user\\\" #accountForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" >\\r\\n    <section fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields\\\">      \\r\\n      <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- Name -->\\r\\n          <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Name\\\" \\r\\n                [(ngModel)]=\\\"model.name\\\" \\r\\n                required minlength=\\\"4\\\"\\r\\n                value=\\\"model.name\\\"\\r\\n                #name=\\\"ngModel\\\">\\r\\n\\r\\n            <mat-error *ngIf=\\\"name.invalid && (name.dirty || name.touched) && name.errors.required\\\">Name is required</mat-error>\\r\\n            <mat-error *ngIf=\\\"name.invalid && (name.dirty || name.touched) && name.errors.minlength\\\">Name must contains more than 4 characters</mat-error>\\r\\n          </mat-form-field>\\r\\n          \\r\\n          <!-- Preferred currency -->\\r\\n          <currency-unit fxFlex fxFlex.gt-xs=\\\"200px\\\"\\r\\n              [id]=\\\"'preferredCurrency'\\\"\\r\\n              [hint]=\\\"'Your preferred currency format to use across the platform'\\\" \\r\\n              [placeHolder]=\\\"'Preferred currency'\\\" \\r\\n              [value]=\\\"model.currency\\\"\\r\\n              (newValue)=\\\"onCurrencyUnitChange($event)\\\">\\r\\n          </currency-unit>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- Email -->\\r\\n          <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Email address\\\" \\r\\n                [(ngModel)]=\\\"model.email\\\" \\r\\n                required email\\r\\n                value=\\\"model.email\\\"\\r\\n                #email=\\\"ngModel\\\">\\r\\n                \\r\\n            <mat-icon matPrefix>email</mat-icon>\\r\\n            <mat-error *ngIf=\\\"email.invalid && (email.dirty || email.touched) && email.errors.required\\\">Email is required</mat-error>\\r\\n            <mat-error *ngIf=\\\"email.invalid && (email.dirty || email.touched) && email.errors.email\\\">Email must be a valid email address</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n    </section>\\r\\n    <section class=\\\"form__actions form__actions--account-user\\\"\\r\\n        fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" \\r\\n        fxLayoutAlign=\\\"none start\\\" fxLayoutAlign.gt-sm=\\\"center start\\\" \\r\\n        fxLayoutGap=\\\"10px\\\">\\r\\n        \\r\\n      <button mat-fab *ngIf=\\\"!updateAccountServiceRunning\\\" \\r\\n          class=\\\"fab mat-elevation-z10 form__action\\\" \\r\\n          color=\\\"accent\\\" \\r\\n          type=\\\"submit\\\"\\r\\n          matTooltip=\\\"Save changes\\\" matTooltipPosition=\\\"left\\\" \\r\\n          [disabled]=\\\"!accountForm.form.valid\\\">\\r\\n        <mat-icon aria-label=\\\"Save changes\\\">save</mat-icon>\\r\\n      </button>\\r\\n      \\r\\n      <mat-progress-spinner *ngIf=\\\"updateAccountServiceRunning\\\"\\r\\n          class=\\\"progress-spinner progress-spinner--account-user\\\"\\r\\n          color=\\\"accent\\\"\\r\\n          [diameter]=\\\"55\\\" [strokeWidth]=\\\"10\\\"\\r\\n          mode=\\\"indeterminate\\\">\\r\\n      </mat-progress-spinner>\\r\\n    </section>\\r\\n  </form>\\r\\n</div>\"","module.exports = \"form .form__actions .progress-bar {\\n  width: 100%; }\\n\\n@media screen and (min-width: 600px) {\\n  form .form__actions .progress-bar {\\n    width: 88px; } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy91c2Vycy9jb21wb25lbnRzL2FjY291bnQtdXNlci1pbmZvL0M6XFx3M1xcYXRvbWlDb2NvbnV0XFxjbGllbnQvc3JjXFxhcHBcXG1vZHVsZXNcXHVzZXJzXFxjb21wb25lbnRzXFxhY2NvdW50LXVzZXItaW5mb1xcYWNjb3VudC11c2VyLWluZm8uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFLTSxZQUFXLEVBQ1o7O0FBSUw7RUFFRTtJQUtNLFlBQVcsRUFDWixFQUFBIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy91c2Vycy9jb21wb25lbnRzL2FjY291bnQtdXNlci1pbmZvL2FjY291bnQtdXNlci1pbmZvLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnLi4vLi4vLi4vLi4vLi4vdmFyaWFibGVzJztcclxuXHJcbmZvcm0ge1xyXG4gIFxyXG4gIC5mb3JtX19hY3Rpb25zIHtcclxuXHJcbiAgICAucHJvZ3Jlc3MtYmFyIHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkc2NyZWVuR3RYcykge1xyXG4gIFxyXG4gIGZvcm0ge1xyXG4gICAgXHJcbiAgICAuZm9ybV9fYWN0aW9ucyB7XHJcbiAgXHJcbiAgICAgIC5wcm9ncmVzcy1iYXIge1xyXG4gICAgICAgIHdpZHRoOiA4OHB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59Il19 */\"","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { MatSelectChange } from '@angular/material';\r\nimport {User} from '../../models/user';\r\nimport { UsersService } from '../../users.service';\r\nimport { AppService } from '../../../../app.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'account-user-info',\r\n  templateUrl: './account-user-info.component.html',\r\n  styleUrls: ['./account-user-info.component.scss']\r\n})\r\nexport class AccountUserInfoComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() user: User = null;\r\n  public model: any = {name : '', email : '', currency : ''};\r\n  public updateAccountServiceRunning = false;\r\n  subscription: Subscription = new Subscription();\r\n\r\n  \r\n  constructor(private usersService: UsersService, private appService: AppService) {}\r\n\r\n  ngOnInit() {\r\n    this.model = { name : this.user.name, email : this.user.email, currency : this.user.currency };\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    const methodTrace = `${this.constructor.name} > ngOnDestroy() > `; // for debugging\r\n\r\n    // this.appService.consoleLog('info', `${methodTrace} Component destroyed.`);\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onCurrencyUnitChange($event: MatSelectChange) {\r\n    if ($event.source.id === 'preferredCurrency') {\r\n      this.model.currency = $event.value;\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  /**\r\n   * When user submits the register form.\r\n   */\r\n  onSubmit() { \r\n    const methodTrace = `${this.constructor.name} > onSubmit() > `; // for debugging\r\n    this.updateAccountServiceRunning = true;\r\n    \r\n    // call the account service\r\n    const newSubscription = this.usersService.updateAccount$(this.model).subscribe(\r\n      (user: User) => {\r\n        if (user) {\r\n          this.appService.showResults(`Your profile was successfully updated!.`, 'success');\r\n        }\r\n\r\n        this.updateAccountServiceRunning = false;\r\n      },\r\n      (error: any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n        } else {\r\n          this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n        }\r\n\r\n        this.updateAccountServiceRunning = false;\r\n      }\r\n    );\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n}\r\n","module.exports = \"<!-- SM and higher view -->\\r\\n<mat-tab-group *ngIf=\\\"utilService.isGtXs()\\\">\\r\\n  <mat-tab label=\\\"Account info\\\">\\r\\n    <account-user-info [user]=\\\"user\\\"></account-user-info>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Personal info\\\">\\r\\n    <account-personal-info [user]=\\\"user\\\"></account-personal-info>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Financial info\\\">\\r\\n    <account-finance-info [user]=\\\"user\\\"></account-finance-info>\\r\\n  </mat-tab>\\r\\n</mat-tab-group>\\r\\n\\r\\n<!-- XS view -->\\r\\n<mat-accordion *ngIf=\\\"utilService.isXs()\\\">  \\r\\n  <mat-expansion-panel>\\r\\n    <mat-expansion-panel-header>\\r\\n      Account info\\r\\n    </mat-expansion-panel-header>\\r\\n\\r\\n    <account-user-info [user]=\\\"user\\\"></account-user-info>\\r\\n  </mat-expansion-panel>\\r\\n\\r\\n  <mat-expansion-panel>\\r\\n    <mat-expansion-panel-header>\\r\\n      Personal info\\r\\n    </mat-expansion-panel-header>\\r\\n\\r\\n    <account-personal-info [user]=\\\"user\\\"></account-personal-info>\\r\\n  </mat-expansion-panel>\\r\\n\\r\\n  <mat-expansion-panel>\\r\\n    <mat-expansion-panel-header>\\r\\n      Financial info\\r\\n    </mat-expansion-panel-header>\\r\\n\\r\\n    <account-finance-info [user]=\\\"user\\\"></account-finance-info>\\r\\n  </mat-expansion-panel>\\r\\n\\r\\n</mat-accordion>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdXNlcnMvY29tcG9uZW50cy9hY2NvdW50L2FjY291bnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UtilService } from '../../../../util.service';\r\nimport {User} from '../../models/user';\r\nimport { MainNavigatorService } from '../../../shared/components/main-navigator/main-navigator.service';\r\n\r\n@Component({\r\n  selector: 'app-account',\r\n  templateUrl: './account.component.html',\r\n  styleUrls: ['./account.component.scss']\r\n})\r\nexport class AccountComponent implements OnInit {\r\n\r\n  public user: User = null;\r\n\r\n  constructor(private mainNavigatorService: MainNavigatorService, private route: ActivatedRoute, public utilService: UtilService) { }\r\n\r\n  ngOnInit() {\r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: '/welcome', selected: false },\r\n      { displayName: 'My account', url: null, selected: true }]);\r\n    \r\n    // get authUser from resolver\r\n    this.route.data.subscribe((data: { authUser: User }) => {\r\n      this.user = data.authUser;\r\n    });\r\n  }\r\n\r\n  \r\n\r\n}\r\n","module.exports = \"<div class=\\\"container__login\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"none none\\\" fxLayoutAlign.gt-xs=\\\"none center\\\" fxLayoutGap=\\\"10px\\\">\\r\\n  <form class=\\\"form__container form__login\\\" #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" >\\r\\n    <section fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields\\\" *ngIf=\\\"!forgotModel.forgot\\\">      \\r\\n      <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- Email -->\\r\\n          <mat-form-field fxFlex fxFlex.gt-xs=\\\"450px\\\" class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Email address\\\" \\r\\n                [(ngModel)]=\\\"model.email\\\" \\r\\n                required email\\r\\n                #email=\\\"ngModel\\\">\\r\\n\\r\\n            <mat-icon matPrefix>email</mat-icon>\\r\\n            <mat-error *ngIf=\\\"email.invalid && (email.dirty || email.touched) && email.errors.required\\\">Email is required</mat-error>\\r\\n            <mat-error *ngIf=\\\"email.invalid && (email.dirty || email.touched) && email.errors.email\\\">Email must be a valid email address</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- Password -->\\r\\n          <mat-form-field  class=\\\"form__field field__password\\\">\\r\\n            <input matInput [type]=\\\"showPassword ? 'text' : 'password'\\\" id=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" \\r\\n                [(ngModel)]=\\\"model.password\\\" \\r\\n                required minlength=\\\"3\\\" maxlength=\\\"8\\\"\\r\\n                #password=\\\"ngModel\\\">\\r\\n            \\r\\n            <mat-icon matPrefix>vpn_key</mat-icon>\\r\\n            <mat-icon class=\\\"icon__suffix\\\" matSuffix matTooltip=\\\"Show password\\\" *ngIf=\\\"!showPassword\\\" (click)=\\\"showPassword = true\\\">visibility</mat-icon>\\r\\n            <mat-icon class=\\\"icon__suffix\\\" matSuffix matTooltip=\\\"Hide password\\\" *ngIf=\\\"showPassword\\\" (click)=\\\"showPassword = false\\\">visibility_off</mat-icon>\\r\\n            <mat-error *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.required\\\">Password is required</mat-error>\\r\\n            <mat-error *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.minlength\\\">Password must be longer than 3 characters</mat-error>\\r\\n            <mat-error *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.maxlength\\\">Password must be shorter than 8 characters</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n    </section>\\r\\n\\r\\n    <section class=\\\"form__actions form__actions--login\\\"\\r\\n        fxLayout=\\\"row\\\" fxFlexAlign=\\\"center\\\"\\r\\n        fxLayoutGap=\\\"10px\\\" *ngIf=\\\"!forgotModel.forgot\\\">\\r\\n        \\r\\n      <button mat-fab *ngIf=\\\"!loginServiceRunning\\\" \\r\\n          class=\\\"fab mat-elevation-z10 form__action\\\" \\r\\n          color=\\\"accent\\\" \\r\\n          type=\\\"submit\\\"\\r\\n          matTooltip=\\\"Login\\\" matTooltipPosition=\\\"left\\\" \\r\\n          [disabled]=\\\"!loginForm.form.valid\\\">\\r\\n        <mat-icon aria-label=\\\"Login\\\">arrow_forward</mat-icon>\\r\\n      </button>\\r\\n      \\r\\n      <mat-progress-spinner *ngIf=\\\"loginServiceRunning\\\"\\r\\n          class=\\\"progress-spinner progress-spinner--login\\\"\\r\\n          color=\\\"accent\\\"\\r\\n          [diameter]=\\\"55\\\" [strokeWidth]=\\\"10\\\"\\r\\n          mode=\\\"indeterminate\\\">\\r\\n      </mat-progress-spinner>\\r\\n    </section>\\r\\n\\r\\n    <section fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields\\\">      \\r\\n      <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"none center\\\" fxLayoutAlign.gt-xs=\\\"center none\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- Forgot my password checkbox  -->\\r\\n          <mat-checkbox [(ngModel)]=\\\"forgotModel.forgot\\\" name=\\\"forgot\\\" id=\\\"forgot\\\">Forgot my password</mat-checkbox>\\r\\n        </div>\\r\\n      </div>\\r\\n    </section>\\r\\n  </form>\\r\\n\\r\\n  <!-- Forgot password form -->\\r\\n  <form class=\\\"form__container form__forgot\\\" #forgotForm=\\\"ngForm\\\" (ngSubmit)=\\\"onForgotSubmit()\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" *ngIf=\\\"forgotModel.forgot\\\">\\r\\n    <section fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields\\\">      \\r\\n      <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"none none\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields__row\\\">\\r\\n          <mat-form-field fxFlex fxFlex.gt-xs=\\\"450px\\\" class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"email\\\" id=\\\"emailForgot\\\" name=\\\"emailForgot\\\" placeholder=\\\"Email address\\\" \\r\\n                [(ngModel)]=\\\"forgotModel.email\\\" \\r\\n                required email\\r\\n                #emailForgot=\\\"ngModel\\\">\\r\\n    \\r\\n            <mat-icon matPrefix>email</mat-icon>\\r\\n            <mat-hint>Type your email and we will send you an email to reset your password.</mat-hint>\\r\\n            <mat-error *ngIf=\\\"emailForgot.invalid && (emailForgot.dirty || emailForgot.touched) && emailForgot.errors.required\\\">Email is required</mat-error>\\r\\n            <mat-error *ngIf=\\\"emailForgot.invalid && (emailForgot.dirty || emailForgot.touched) && emailForgot.errors.email\\\">Email must be a valid email address</mat-error>\\r\\n          </mat-form-field>\\r\\n\\r\\n          <button mat-mini-fab *ngIf=\\\"!forgotServiceRunning\\\" \\r\\n              class=\\\"fab mat-elevation-z10 form__action\\\" \\r\\n              color=\\\"primary\\\" \\r\\n              type=\\\"submit\\\"\\r\\n              matTooltip=\\\"Send\\\" matTooltipPosition=\\\"left\\\" \\r\\n              [disabled]=\\\"!forgotForm.form.valid\\\">\\r\\n            <mat-icon aria-label=\\\"Send\\\">arrow_forward</mat-icon>\\r\\n          </button>\\r\\n\\r\\n          <mat-progress-spinner *ngIf=\\\"forgotServiceRunning\\\"\\r\\n              class=\\\"progress-spinner progress-spinner--forgot\\\"\\r\\n              color=\\\"accent\\\"\\r\\n              [diameter]=\\\"40\\\" [strokeWidth]=\\\"7\\\"\\r\\n              mode=\\\"indeterminate\\\">\\r\\n          </mat-progress-spinner>\\r\\n        </div>\\r\\n      </div>\\r\\n    </section>\\r\\n  </form>\\r\\n\\r\\n  <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"center none\\\" class=\\\"container__new-account\\\">\\r\\n    <p>I don't have an account yet</p>\\r\\n    <button mat-raised-button type=\\\"button\\\" color=\\\"primary\\\" class=\\\"color__almost-white\\\" routerLink=\\\"/users/register\\\">Create new account</button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n  \"","module.exports = \".container__login form .form__actions .fab, .container__login form .form__actions .progress-spinner {\\n  position: relative; }\\n\\n.container__login form .form__actions .fab {\\n  -webkit-transform: translate(-50%, 0);\\n          transform: translate(-50%, 0);\\n  right: auto;\\n  left: 50%; }\\n\\n.container__login form .form__actions .progress-spinner {\\n  left: -28%; }\\n\\n.container__login .form__login .field__password .icon__suffix {\\n  cursor: pointer; }\\n\\n.container__login .container__new-account {\\n  margin-top: 60px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy91c2Vycy9jb21wb25lbnRzL2xvZ2luL0M6XFx3M1xcYXRvbWlDb2NvbnV0XFxjbGllbnQvc3JjXFxhcHBcXG1vZHVsZXNcXHVzZXJzXFxjb21wb25lbnRzXFxsb2dpblxcbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFPUSxtQkFBa0IsRUFDbkI7O0FBUlA7RUFXUSxzQ0FBNkI7VUFBN0IsOEJBQTZCO0VBQzdCLFlBQVc7RUFDWCxVQUFTLEVBQ1Y7O0FBZFA7RUFpQlEsV0FBVSxFQUNYOztBQWxCUDtFQXlCTSxnQkFBZSxFQUNoQjs7QUExQkw7RUE4QkksaUJBQWdCLEVBQ2pCIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy91c2Vycy9jb21wb25lbnRzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnLi4vLi4vLi4vLi4vLi4vdmFyaWFibGVzJztcclxuXHJcbi5jb250YWluZXJfX2xvZ2luIHtcclxuXHJcbiAgZm9ybSB7XHJcblxyXG4gICAgLmZvcm1fX2FjdGlvbnMge1xyXG4gICAgICBcclxuICAgICAgLmZhYiwgLnByb2dyZXNzLXNwaW5uZXIge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgfVxyXG5cclxuICAgICAgLmZhYiB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgMCk7XHJcbiAgICAgICAgcmlnaHQ6IGF1dG87XHJcbiAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAucHJvZ3Jlc3Mtc3Bpbm5lciB7XHJcbiAgICAgICAgbGVmdDogLTI4JTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICBcclxuICAuZm9ybV9fbG9naW4ge1xyXG4gIFxyXG4gICAgLmZpZWxkX19wYXNzd29yZCAuaWNvbl9fc3VmZml4IHtcclxuICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLmNvbnRhaW5lcl9fbmV3LWFjY291bnQge1xyXG4gICAgbWFyZ2luLXRvcDogNjBweDtcclxuICB9XHJcbn1cclxuXHJcblxyXG5cclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRzY3JlZW5HdFhzKSB7XHJcblxyXG59Il19 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\nimport { UsersService } from '../../users.service';\r\nimport { AppService } from '../../../../app.service';\r\nimport {User} from '../../models/user';\r\nimport { MainNavigatorService } from '../../../shared/components/main-navigator/main-navigator.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'users-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n\r\n  model: any = {email : '', password : ''};\r\n  forgotModel: any = { email : '', forgot : false };\r\n  loginServiceRunning = false;\r\n  forgotServiceRunning = false;\r\n  showPassword = false;\r\n  subscription: Subscription = new Subscription();\r\n\r\n  constructor(private usersService: UsersService, private appService: AppService,  \r\n    private mainNavigatorService: MainNavigatorService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    const methodTrace = `${this.constructor.name} > ngOnInit() > `; // for debugging\r\n    \r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: '/welcome', selected: false },\r\n      { displayName: 'Login', url: null, selected: true }]);\r\n\r\n    this.route.paramMap.pipe(map((params: ParamMap) => params.get('state')))\r\n        .subscribe(state => {\r\n          if (state === 'reset-password-token-expired') {\r\n            this.appService.showResults('Reset password token has expired or is invalid. Click on \"Forgot my password\" again to create a new one.', 'error', 10000);\r\n          }\r\n        });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    const methodTrace = `${this.constructor.name} > ngOnDestroy() > `; // for debugging\r\n\r\n    // this.appService.consoleLog('info', `${methodTrace} Component destroyed.`);\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * When user submits the login form\r\n   */\r\n  onSubmit() { \r\n    const methodTrace = `${this.constructor.name} > onSubmit() > `; // for debugging\r\n\r\n    this.loginServiceRunning = true;\r\n    \r\n    // call the register service\r\n    const newSubscription: Subscription = this.usersService.login$(this.model).subscribe(\r\n      (user: User) => {\r\n        if (user) {\r\n          const redirectUrl = this.usersService.routerRedirectUrl ? this.usersService.routerRedirectUrl : '/';\r\n          this.usersService.routerRedirectUrl = null;\r\n          this.router.navigate([redirectUrl]);\r\n        }\r\n\r\n        this.loginServiceRunning = false;\r\n      },\r\n      (error: any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n        } else if (error.codeno === 451) {\r\n          this.appService.showResults(error.msg, 'error');\r\n        } else {\r\n          this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n        }\r\n\r\n        this.loginServiceRunning = false;\r\n      }\r\n    );\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n  /**\r\n   * When user submits the forgot password form\r\n   */\r\n  onForgotSubmit() { \r\n    const methodTrace = `${this.constructor.name} > onForgotSubmit() > `; // for debugging\r\n\r\n    this.forgotServiceRunning = true;\r\n    // call the register service\r\n    const newSubscription: Subscription = this.usersService.forgot$(this.forgotModel).subscribe(\r\n      (data: any) => {\r\n        if (data && data.email && data.expires) {\r\n          this.appService.showResults(`We sent an email to ${data.email} with a password reset link that will expire in ${data.expires}.`, 'info');\r\n        } else {\r\n          this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`);\r\n        }\r\n        \r\n        this.forgotServiceRunning = false;\r\n      },\r\n      (error: any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n        } else if (error.codeno === 455) {\r\n          // invalid email\r\n          this.appService.showResults(error.msg, 'error');\r\n        } else {\r\n          this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n        }\r\n        this.forgotServiceRunning = false;\r\n      }\r\n    );\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n  \r\n}\r\n","module.exports = \"<div class=\\\"container__register\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"none none\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign.gt-xs=\\\"center none\\\" fxLayoutGap=\\\"10px\\\">\\r\\n  <form class=\\\"form__container form__register\\\" #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" >\\r\\n    <section fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields\\\">      \\r\\n      <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- Name -->\\r\\n          <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Name\\\" \\r\\n                [(ngModel)]=\\\"model.name\\\" \\r\\n                required minlength=\\\"4\\\"\\r\\n                #name=\\\"ngModel\\\">\\r\\n\\r\\n            <mat-error *ngIf=\\\"name.invalid && (name.dirty || name.touched) && name.errors.required\\\">Name is required</mat-error>\\r\\n            <mat-error *ngIf=\\\"name.invalid && (name.dirty || name.touched) && name.errors.minlength\\\">Name must contains more than 4 characters</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- Email -->\\r\\n          <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n            <input matInput type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Email address\\\" \\r\\n                [(ngModel)]=\\\"model.email\\\" \\r\\n                required email\\r\\n                #email=\\\"ngModel\\\">\\r\\n\\r\\n            <mat-icon matPrefix>email</mat-icon>\\r\\n            <mat-error *ngIf=\\\"email.invalid && (email.dirty || email.touched) && email.errors.required\\\">Email is required</mat-error>\\r\\n            <mat-error *ngIf=\\\"email.invalid && (email.dirty || email.touched) && email.errors.email\\\">Email must be a valid email address</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- Password -->\\r\\n          <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n            <input matInput [type]=\\\"showPassword ? 'text' : 'password'\\\" id=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" \\r\\n                [(ngModel)]=\\\"model.password\\\" \\r\\n                required minlength=\\\"3\\\" maxlength=\\\"8\\\" equalvalidator=\\\"passwordConfirm\\\" reverse=\\\"true\\\"\\r\\n                #password=\\\"ngModel\\\">\\r\\n\\r\\n            <mat-icon matPrefix>vpn_key</mat-icon>\\r\\n            <mat-icon class=\\\"icon__suffix\\\" matSuffix matTooltip=\\\"Show password\\\" *ngIf=\\\"!showPassword\\\" (click)=\\\"showPassword = true\\\">visibility</mat-icon>\\r\\n            <mat-icon class=\\\"icon__suffix\\\" matSuffix matTooltip=\\\"Hide password\\\" *ngIf=\\\"showPassword\\\" (click)=\\\"showPassword = false\\\">visibility_off</mat-icon>\\r\\n            <mat-error *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.required\\\">Password is required</mat-error>\\r\\n            <mat-error *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.minlength\\\">Password must be longer than 3 characters</mat-error>\\r\\n            <mat-error *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.maxlength\\\">Password must be shorter than 8 characters</mat-error>\\r\\n          </mat-form-field>\\r\\n\\r\\n          <!-- Password confirm -->\\r\\n          <mat-form-field fxFlex class=\\\"form__field\\\">\\r\\n            <input matInput [type]=\\\"showPassword ? 'text' : 'password'\\\" id=\\\"passwordConfirm\\\" name=\\\"passwordConfirm\\\" placeholder=\\\"Confirm password\\\" \\r\\n                [(ngModel)]=\\\"model['password-confirm']\\\" \\r\\n                required minlength=\\\"3\\\" maxlength=\\\"8\\\" equalvalidator=\\\"password\\\"\\r\\n                #passwordConfirm=\\\"ngModel\\\">\\r\\n\\r\\n            <mat-icon matPrefix>vpn_key</mat-icon>\\r\\n            <mat-icon class=\\\"icon__suffix\\\" matSuffix matTooltip=\\\"Show password\\\" *ngIf=\\\"!showPassword\\\" (click)=\\\"showPassword = true\\\">visibility</mat-icon>\\r\\n            <mat-icon class=\\\"icon__suffix\\\" matSuffix matTooltip=\\\"Hide password\\\" *ngIf=\\\"showPassword\\\" (click)=\\\"showPassword = false\\\">visibility_off</mat-icon>\\r\\n            <mat-error *ngIf=\\\"passwordConfirm.invalid && (passwordConfirm.dirty || passwordConfirm.touched) && passwordConfirm.errors.required\\\">Confirm password is required</mat-error>\\r\\n            <mat-error *ngIf=\\\"passwordConfirm.invalid && (passwordConfirm.dirty || passwordConfirm.touched) && passwordConfirm.errors.minlength\\\">Confirm password must be longer than 3 characters</mat-error>\\r\\n            <mat-error *ngIf=\\\"passwordConfirm.invalid && (passwordConfirm.dirty || passwordConfirm.touched) && passwordConfirm.errors.maxlength\\\">Confirm password must be shorter than 8 characters</mat-error>\\r\\n            <mat-error *ngIf=\\\"passwordConfirm.invalid && (passwordConfirm.dirty || passwordConfirm.touched) && passwordConfirm.errors.equalvalidator\\\">Confirm password must match password</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n    </section>\\r\\n\\r\\n    <section class=\\\"form__actions form__actions--register\\\"\\r\\n        fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" \\r\\n        fxLayoutAlign=\\\"none start\\\" fxLayoutAlign.gt-sm=\\\"center start\\\" \\r\\n        fxLayoutGap=\\\"10px\\\">\\r\\n        \\r\\n      <button mat-fab *ngIf=\\\"!registerServiceRunning\\\" \\r\\n          class=\\\"fab mat-elevation-z10 form__action\\\" \\r\\n          color=\\\"accent\\\" \\r\\n          type=\\\"submit\\\"\\r\\n          matTooltip=\\\"Save account\\\" matTooltipPosition=\\\"left\\\" \\r\\n          [disabled]=\\\"!registerForm.form.valid\\\">\\r\\n        <mat-icon aria-label=\\\"Save account\\\">save</mat-icon>\\r\\n      </button>\\r\\n      \\r\\n      <mat-progress-spinner *ngIf=\\\"registerServiceRunning\\\"\\r\\n          class=\\\"progress-spinner progress-spinner--register\\\"\\r\\n          color=\\\"accent\\\"\\r\\n          [diameter]=\\\"55\\\" [strokeWidth]=\\\"10\\\"\\r\\n          mode=\\\"indeterminate\\\">\\r\\n      </mat-progress-spinner>\\r\\n    </section>\\r\\n  </form>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdXNlcnMvY29tcG9uZW50cy9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { UsersService } from '../../users.service';\r\nimport { AppService } from '../../../../app.service';\r\nimport {User} from '../../models/user';\r\nimport { MainNavigatorService } from '../../../shared/components/main-navigator/main-navigator.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'users-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit, OnDestroy {\r\n\r\n  public model: any = {name : '', email : '', password : '', 'password-confirm' : ''};\r\n  public registerServiceRunning = false;\r\n  showPassword = false;\r\n  subscription: Subscription = new Subscription();\r\n  \r\n  constructor(private usersService: UsersService, private appService: AppService, private router: Router,\r\n      private mainNavigatorService: MainNavigatorService) {}\r\n\r\n  ngOnInit() {\r\n    const methodTrace = `${this.constructor.name} > ngOnInit() > `; // for debugging\r\n\r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: '/welcome', selected: false },\r\n      { displayName: 'Login', url: '/users/login', selected: false },\r\n      { displayName: 'Create account', url: null, selected: true }]);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    const methodTrace = `${this.constructor.name} > ngOnDestroy() > `; // for debugging\r\n\r\n    // this.appService.consoleLog('info', `${methodTrace} Component destroyed.`);\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * When user submits the register form.\r\n   */\r\n  onSubmit() { \r\n    const methodTrace = `${this.constructor.name} > onSubmit() > `; // for debugging\r\n\r\n    this.registerServiceRunning = true;\r\n\r\n    // chech that the password and the confirmed password are the same\r\n    if (this.model.password !== this.model['password-confirm']) {\r\n      this.appService.consoleLog('error', `${methodTrace} Confirm password must match password.`);\r\n      this.registerServiceRunning = false;\r\n      return false;\r\n    }\r\n    \r\n    // call the register service\r\n    const newSubscription: Subscription = this.usersService.register$(this.model).subscribe(\r\n      (user: User) => {\r\n        if (user) {\r\n          this.router.navigate(['/']); // go home\r\n          this.appService.showResults(`${user.name} welcome to AtomiCoconut!`, 'success');\r\n        }\r\n\r\n        this.registerServiceRunning = false;\r\n      },\r\n      (error: any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n        if (error.codeno === 400) {\r\n          if (error.data && error.data.name === 'UserExistsError') {\r\n            // the mail system failed for external reasons\r\n            this.appService.showResults(`The selected email address already in use by another person, pick a different one please.`, 'error');\r\n          } else {\r\n            this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n          }\r\n        } else {\r\n          this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n        }\r\n\r\n        this.registerServiceRunning = false;\r\n      }\r\n    );\r\n    this.subscription.add(newSubscription);\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container__reset\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"none none\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign.gt-xs=\\\"center none\\\" fxLayoutGap=\\\"10px\\\">\\r\\n  <form class=\\\"form__container form__reset\\\" #resetForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" >\\r\\n    <section fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" class=\\\"form__fields\\\">      \\r\\n      <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\" class=\\\"form__fields__row__container\\\">\\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- Password -->\\r\\n          <mat-form-field fxFlex fxFlex.gt-xs=\\\"450px\\\" class=\\\"form__field field__password\\\">\\r\\n            <input matInput [type]=\\\"showPassword ? 'text' : 'password'\\\" id=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" \\r\\n                [(ngModel)]=\\\"model.password\\\" \\r\\n                required minlength=\\\"3\\\" maxlength=\\\"8\\\" equalvalidator=\\\"passwordConfirm\\\" reverse=\\\"true\\\"\\r\\n                #password=\\\"ngModel\\\">\\r\\n\\r\\n            <mat-icon matPrefix>vpn_key</mat-icon>\\r\\n            <mat-icon class=\\\"icon__suffix\\\" matSuffix matTooltip=\\\"Show password\\\" *ngIf=\\\"!showPassword\\\" (click)=\\\"showPassword = true\\\">visibility</mat-icon>\\r\\n            <mat-icon class=\\\"icon__suffix\\\" matSuffix matTooltip=\\\"Hide password\\\" *ngIf=\\\"showPassword\\\" (click)=\\\"showPassword = false\\\">visibility_off</mat-icon>\\r\\n            <mat-error *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.required\\\">Password is required</mat-error>\\r\\n            <mat-error *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.minlength\\\">Password must be longer than 3 characters</mat-error>\\r\\n            <mat-error *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.maxlength\\\">Password must be shorter than 8 characters</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign.gt-xs=\\\"start center\\\" class=\\\"form__fields__row\\\">\\r\\n          <!-- Password confirm -->\\r\\n          <mat-form-field class=\\\"form__field field__password-confirm\\\">\\r\\n            <input matInput [type]=\\\"showPassword ? 'text' : 'password'\\\" id=\\\"passwordConfirm\\\" name=\\\"passwordConfirm\\\" placeholder=\\\"Confirm password\\\" \\r\\n                [(ngModel)]=\\\"model['password-confirm']\\\" \\r\\n                required minlength=\\\"3\\\" maxlength=\\\"8\\\" equalvalidator=\\\"password\\\"\\r\\n                #passwordConfirm=\\\"ngModel\\\">\\r\\n            \\r\\n            <mat-icon matPrefix>vpn_key</mat-icon>\\r\\n            <mat-icon class=\\\"icon__suffix\\\" matSuffix matTooltip=\\\"Show password\\\" *ngIf=\\\"!showPassword\\\" (click)=\\\"showPassword = true\\\">visibility</mat-icon>\\r\\n            <mat-icon class=\\\"icon__suffix\\\" matSuffix matTooltip=\\\"Hide password\\\" *ngIf=\\\"showPassword\\\" (click)=\\\"showPassword = false\\\">visibility_off</mat-icon>\\r\\n            <mat-error *ngIf=\\\"passwordConfirm.invalid && (passwordConfirm.dirty || passwordConfirm.touched) && passwordConfirm.errors.required\\\">Confirm password is required</mat-error>\\r\\n            <mat-error *ngIf=\\\"passwordConfirm.invalid && (passwordConfirm.dirty || passwordConfirm.touched) && passwordConfirm.errors.minlength\\\">Confirm password must be longer than 3 characters</mat-error>\\r\\n            <mat-error *ngIf=\\\"passwordConfirm.invalid && (passwordConfirm.dirty || passwordConfirm.touched) && passwordConfirm.errors.maxlength\\\">Confirm password must be shorter than 8 characters</mat-error>\\r\\n            <mat-error *ngIf=\\\"passwordConfirm.invalid && (passwordConfirm.dirty || passwordConfirm.touched) && passwordConfirm.errors.equalvalidator\\\">Confirm password must match password</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n    </section>\\r\\n\\r\\n    <section class=\\\"form__actions form__actions--reset\\\"\\r\\n        fxLayout=\\\"row\\\" fxFlexAlign=\\\"end\\\" fxFlexAlign.gt-xs=\\\"center\\\"\\r\\n        fxLayoutGap=\\\"10px\\\">\\r\\n        \\r\\n      <button mat-fab *ngIf=\\\"!resetPasswordServiceRunning\\\" \\r\\n          class=\\\"fab mat-elevation-z10 form__action\\\" \\r\\n          color=\\\"accent\\\" \\r\\n          type=\\\"submit\\\"\\r\\n          matTooltip=\\\"Save changes\\\" matTooltipPosition=\\\"left\\\" \\r\\n          [disabled]=\\\"!resetForm.form.valid\\\">\\r\\n        <mat-icon aria-label=\\\"Save changes\\\">save</mat-icon>\\r\\n      </button>\\r\\n      \\r\\n      <mat-progress-spinner *ngIf=\\\"resetPasswordServiceRunning\\\"\\r\\n          class=\\\"progress-spinner progress-spinner--reset\\\"\\r\\n          color=\\\"accent\\\"\\r\\n          [diameter]=\\\"55\\\" [strokeWidth]=\\\"10\\\"\\r\\n          mode=\\\"indeterminate\\\">\\r\\n      </mat-progress-spinner>\\r\\n    </section>\\r\\n  </form>\\r\\n</div>\"","module.exports = \"form .field__password .icon__suffix, form .field__password-confirm .icon__suffix {\\n  cursor: pointer; }\\n\\nform .form__actions .fab, form .form__actions .progress-spinner {\\n  position: relative; }\\n\\nform .form__actions .fab {\\n  -webkit-transform: translate(-50%, 0);\\n          transform: translate(-50%, 0);\\n  right: auto;\\n  left: 50%; }\\n\\nform .form__actions .progress-spinner {\\n  left: -28%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy91c2Vycy9jb21wb25lbnRzL3Jlc2V0LXBhc3N3b3JkL0M6XFx3M1xcYXRvbWlDb2NvbnV0XFxjbGllbnQvc3JjXFxhcHBcXG1vZHVsZXNcXHVzZXJzXFxjb21wb25lbnRzXFxyZXNldC1wYXNzd29yZFxccmVzZXQtcGFzc3dvcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFHSSxnQkFBZSxFQUNoQjs7QUFKSDtFQVNNLG1CQUFrQixFQUNuQjs7QUFWTDtFQWFNLHNDQUE2QjtVQUE3Qiw4QkFBNkI7RUFDN0IsWUFBVztFQUNYLFVBQVMsRUFDVjs7QUFoQkw7RUFtQk0sV0FBVSxFQUNYIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy91c2Vycy9jb21wb25lbnRzL3Jlc2V0LXBhc3N3b3JkL3Jlc2V0LXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnLi4vLi4vLi4vLi4vLi4vdmFyaWFibGVzJztcclxuXHJcbmZvcm0ge1xyXG4gIFxyXG4gIC5maWVsZF9fcGFzc3dvcmQgLmljb25fX3N1ZmZpeCwgLmZpZWxkX19wYXNzd29yZC1jb25maXJtIC5pY29uX19zdWZmaXgge1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIH1cclxuXHJcbiAgLmZvcm1fX2FjdGlvbnMge1xyXG4gICAgICBcclxuICAgIC5mYWIsIC5wcm9ncmVzcy1zcGlubmVyIHtcclxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgfVxyXG5cclxuICAgIC5mYWIge1xyXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAwKTtcclxuICAgICAgcmlnaHQ6IGF1dG87XHJcbiAgICAgIGxlZnQ6IDUwJTtcclxuICAgIH1cclxuXHJcbiAgICAucHJvZ3Jlc3Mtc3Bpbm5lciB7XHJcbiAgICAgIGxlZnQ6IC0yOCU7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkc2NyZWVuR3RYcykge1xyXG4gIFxyXG59Il19 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute, ParamMap  } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\nimport { UsersService } from '../../users.service';\r\nimport {User} from '../../models/user';\r\nimport { MainNavigatorService } from '../../../shared/components/main-navigator/main-navigator.service';\r\nimport { AppService } from '../../../../app.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'users-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.scss']\r\n})\r\nexport class ResetPasswordComponent implements OnInit, OnDestroy {\r\n\r\n  model: any = { password : '', 'password-confirm' : ''};\r\n  private token = '';\r\n  resetPasswordServiceRunning = false;\r\n  showPassword = false;\r\n  subscription: Subscription = new Subscription();\r\n\r\n  constructor(private appService: AppService, private usersService: UsersService, private router: Router, private route: ActivatedRoute,\r\n      private mainNavigatorService: MainNavigatorService ) { }\r\n\r\n  ngOnInit() {\r\n    const methodTrace = `${this.constructor.name} > ngOnInit() > `; // for debugging\r\n    \r\n    this.mainNavigatorService.setLinks([\r\n      { displayName: 'Welcome', url: '/welcome', selected: false },\r\n      { displayName: 'Login', url: '/users/login', selected: false },\r\n      { displayName: 'Reset password', url: null, selected: true }]);\r\n\r\n    this.route.paramMap.pipe(map((params: ParamMap) => params.get('token')))\r\n        .subscribe(token => { \r\n          if (token) {\r\n            this.token = token;\r\n          } else {\r\n            this.appService.consoleLog('error', `${methodTrace} Token must be set to reset a password.`);\r\n            this.router.navigate(['/']);\r\n          }\r\n        });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    const methodTrace = `${this.constructor.name} > ngOnDestroy() > `; // for debugging\r\n\r\n    // this.appService.consoleLog('info', `${methodTrace} Component destroyed.`);\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onSubmit() { \r\n    const methodTrace = `${this.constructor.name} > onSubmit() > `; // for debugging\r\n    this.resetPasswordServiceRunning = true;\r\n\r\n    // chech that the password and the confirmed password are the same\r\n    if (this.model.password !== this.model['password-confirm']) {\r\n      this.appService.consoleLog('error', `${methodTrace} Confirm password must match password.`);\r\n\r\n      this.resetPasswordServiceRunning = false;\r\n      return false;\r\n    }\r\n\r\n    // call the reset password service.\r\n    const newsubscription = this.usersService.reset$(this.token, this.model).subscribe(\r\n      (user: User) => {\r\n        if (user) {\r\n          this.appService.showResults('Your password was successfully updated!', 'success');\r\n          this.router.navigate(['/']); // go home\r\n        } else {\r\n          this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`);\r\n        }\r\n\r\n        this.resetPasswordServiceRunning = false;\r\n      },\r\n      (error: any) => {\r\n        this.appService.consoleLog('error', `${methodTrace} There was an error in the server while performing this action > ${error}`);\r\n        if (error.codeno === 400) {\r\n          this.appService.showResults(`There was an error in the server while performing this action, please try again in a few minutes.`, 'error');\r\n        } else {\r\n          this.appService.showResults(`There was an error with this service and the information provided.`, 'error');\r\n        }\r\n        this.resetPasswordServiceRunning = false;\r\n      }\r\n    );\r\n    this.subscription.add(newsubscription);\r\n  }\r\n\r\n}\r\n","export class AccountFinance {\r\n  \r\n    annualIncome : number; //annual pre tax\r\n    annualIncomeUnit : string; //the unit of annual income\r\n    savings : number;\r\n    savingsUnit : string; //savings unit\r\n    incomeTaxRate : number; //percentage value\r\n  \r\n    constructor(annualIncome : number = null, annualIncomeUnit : string = 'USD', savings : number = null, savingsUnit : string = 'USD', incomeTaxRate : number = null) {\r\n      this.annualIncome = annualIncome;\r\n      this.annualIncomeUnit = annualIncomeUnit; \r\n      this.savings = savings;\r\n      this.savingsUnit = savingsUnit;\r\n      this.incomeTaxRate = incomeTaxRate; \r\n    }\r\n  }","export class AccountPersonal {\r\n  \r\n    birthday : Date = null\r\n  \r\n    constructor(birthday : Date = null) {\r\n      this.birthday = birthday;\r\n    }\r\n\r\n     get age() : number {\r\n      if (this.birthday) {\r\n        let ageDifMs = Date.now() - new Date(this.birthday).getTime();\r\n        let ageDate = new Date(ageDifMs); // miliseconds from epoch\r\n        return Math.abs(ageDate.getUTCFullYear() - 1970);\r\n      }\r\n\r\n      return 0;\r\n    }\r\n  }","import { AccountFinance } from './account-finance';\r\nimport { AccountPersonal } from './account-personal';\r\n\r\nexport class User {\r\n\r\n  name: string;\r\n  email: string;\r\n  avatar: string;\r\n  financialInfo: AccountFinance;\r\n  personalInfo: AccountPersonal;\r\n  currency: string;\r\n\r\n  constructor(name: string = '', email: string = '', avatar: string = '', financialInfo: AccountFinance = null, \r\n      personalInfo: AccountPersonal = null, currency: string = 'USD') {\r\n    this.name = name;\r\n    this.email = email;\r\n    this.avatar = avatar;\r\n    this.currency = currency;\r\n    \r\n    if (financialInfo) {\r\n      this.financialInfo = financialInfo;\r\n    } else {\r\n      this.financialInfo = null;\r\n    }\r\n\r\n    if (personalInfo) {\r\n      this.personalInfo = personalInfo;\r\n    } else {\r\n      this.personalInfo = null;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\r\nimport { AccountComponent } from './components/account/account.component';\r\nimport { AuthResolver } from '../../auth-resolver.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path : 'users',\r\n    children : [\r\n      { path : 'register', component : RegisterComponent },\r\n      { path : 'login/:state', component : LoginComponent },\r\n      { path : 'login', component : LoginComponent },\r\n      { \r\n        path : 'account', \r\n        component : AccountComponent,\r\n        resolve : {\r\n          authUser : AuthResolver\r\n        }\r\n      },\r\n      { \r\n        path : 'account/reset/expired',\r\n        redirectTo : 'login/reset-password-token-expired',\r\n        pathMatch : 'full'\r\n      },\r\n      { path : 'account/reset/:token', component : ResetPasswordComponent }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UsersRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UsersRoutingModule } from './users-routing.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { CustomMaterialDesignModule } from '../../modules/shared/custom-material-design.module';\r\nimport { SharedModule } from '../../modules/shared/shared.module';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { UsersService } from './users.service';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\r\nimport { AccountComponent } from './components/account/account.component';\r\nimport { AccountFinanceInfoComponent } from './components/account-finance-info/account-finance-info.component';\r\nimport { AccountPersonalInfoComponent } from './components/account-personal-info/account-personal-info.component';\r\nimport { AccountUserInfoComponent } from './components/account-user-info/account-user-info.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UsersRoutingModule,\r\n    FormsModule,\r\n    FlexLayoutModule,\r\n    CustomMaterialDesignModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    ResetPasswordComponent,\r\n    AccountComponent,\r\n    AccountFinanceInfoComponent,\r\n    AccountPersonalInfoComponent,\r\n    AccountUserInfoComponent\r\n  ],\r\n  providers: [ UsersService ]\r\n})\r\nexport class UsersModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { BehaviorSubject, of, interval } from 'rxjs';\r\nimport { map, catchError, flatMap } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\nimport { AppService } from '../../app.service';\r\nimport { User } from './models/user';\r\nimport { Observable } from 'rxjs';\r\nimport { Response } from '../../models/response';\r\nimport { AccountPersonal } from './models/account-personal';\r\nimport { AccountFinance } from './models/account-finance';\r\nimport _ from 'lodash';\r\n\r\n@Injectable()\r\nexport class UsersService {\r\n\r\n  private serverHost: string = environment.apiHost + '/api/users';\r\n  private headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n\r\n  \r\n  user$: BehaviorSubject<User>; // Observable user stream\r\n  routerRedirectUrl: string = null; // a route to redirect the user to when login is successfull\r\n\r\n  constructor(private http: HttpClient, private appService: AppService) {\r\n    this.user$ = new BehaviorSubject<User>(null);\r\n  }\r\n\r\n  /**\r\n   * user source feeder\r\n   */\r\n  setUser(user: User = null) {\r\n    this.user$.next(user);\r\n  }\r\n\r\n  /**\r\n   * get the current user from the source\r\n   */\r\n  getUser(): User {\r\n    return this.user$.getValue();\r\n  }\r\n\r\n  /**\r\n   * Server call to Register a new user in the system \r\n   * @param postData\r\n   * \r\n   * @return { Observable<User> } \r\n   */\r\n  register$(postData: any = {}): Observable<User> {\r\n    const methodTrace = `${this.constructor.name} > register$() > `; // for debugging\r\n\r\n    this.setUser(null);\r\n    return this.http.post<Response>(`${this.serverHost}/register`, postData, { headers : this.headers }).pipe(\r\n      map(this.appService.extractData),\r\n      flatMap((data: any): Observable<User> => {\r\n        let user: User = null;\r\n        if (data && data.email) {\r\n          user = new User(data.name, data.email, data.avatar, null, null, data.currency);\r\n          this.setUser(user);\r\n        } else {\r\n          this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`, data);\r\n        }\r\n\r\n        return of(user);\r\n      }),\r\n      catchError(this.appService.handleError)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Server call to update account user details \r\n   * @param postData \r\n   * \r\n   * @return { Observable<User> }\r\n   */\r\n  updateAccount$(postData: any = {}): Observable<User> {\r\n    const methodTrace = `${this.constructor.name} > updateAccount() > `; // for debugging\r\n\r\n    return this.http.post<Response>(`${this.serverHost}/account`, postData, { headers : this.headers }).pipe(\r\n      map(this.appService.extractData),\r\n      flatMap((data: any): Observable<User> => {\r\n        const user: User = this.getUser();\r\n\r\n        if (data && data.email) {\r\n          user.name = data.name;\r\n          user.email = data.email;\r\n          user.currency = data.currency;\r\n\r\n          this.setUser(user);\r\n        } else {\r\n          this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`);\r\n        }\r\n\r\n        return of(user);\r\n      }),\r\n      catchError(this.appService.handleError)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Server call to update account personal details \r\n   * @param postData \r\n   * \r\n   * @return {Observable<User>}\r\n   */\r\n  updatePersonalInfo$(postData: any = {}): Observable<User> {\r\n    const methodTrace = `${this.constructor.name} > updatePersonalInfo$() > `; // for debugging\r\n\r\n    return this.http.post<Response>(`${this.serverHost}/accountPersonalInfo`, postData, { headers : this.headers }).pipe(\r\n      map(this.appService.extractData),\r\n      flatMap((data: any): Observable<User> => {\r\n        const user = this.getUser();\r\n\r\n        if (data.personalInfo.birthday) {\r\n          user.personalInfo = new AccountPersonal(data.personalInfo.birthday);\r\n          this.setUser(user);\r\n        } else {\r\n          this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`);\r\n        }\r\n\r\n        return of(user);\r\n      }),\r\n      catchError(this.appService.handleError)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Server call to update account financial details \r\n   * @param postData \r\n   * \r\n   * @return {Observable<User>}\r\n   */\r\n  updateFinancialInfo$(postData: any = {}): Observable<User> {\r\n    const methodTrace = `${this.constructor.name} > updateFinancialInfo$() > `; // for debugging\r\n\r\n    return this.http.post<Response>(`${this.serverHost}/accountFinancialInfo`, postData, { headers : this.headers }).pipe(\r\n      map(this.appService.extractData),\r\n      flatMap((data: any): Observable<User> => {\r\n        const user = this.getUser();\r\n\r\n        if (data.financialInfo.savingsUnit) {  \r\n          user.financialInfo = new AccountFinance(data.financialInfo.annualIncome, data.financialInfo.annualIncomeUnit, \r\n              data.financialInfo.savings, data.financialInfo.savingsUnit, data.financialInfo.incomeTaxRate);\r\n          \r\n          this.setUser(user);\r\n        } else {\r\n          this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`);\r\n        }\r\n\r\n        return of(user);\r\n      }),\r\n      catchError(this.appService.handleError)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Server call to retrieve the currently authenticated user, or null if nobody .\r\n   * @param { any } parameters . The parameters for the service call. Accepted are personalInfo (boolean), financialInfo (boolean)\r\n   * \r\n   * @return { Observable<User> }\r\n   */\r\n  getAuthenticatedUser$(parameters: any = null): Observable<User> {\r\n    const methodTrace = `${this.constructor.name} > getAuthenticatedUser() > `; // for debugging\r\n\r\n    let params = new HttpParams();\r\n    if (parameters && Object.keys(parameters).length) {\r\n      for (const key of Object.keys(parameters)) {\r\n        params = params.set(key, parameters[key] + '');\r\n      }\r\n    }\r\n    \r\n    return this.http.get<Response>(`${this.serverHost}/getUser`, { params }).pipe(\r\n      map(this.appService.extractData),\r\n      flatMap((data: any): Observable<User> => {\r\n        let user: User = null;\r\n\r\n        if (data && data.email) {\r\n          let personalInfo = null;\r\n          if (data.personalInfo && data.personalInfo.birthday) {\r\n            personalInfo = new AccountPersonal(data.personalInfo.birthday);\r\n          }\r\n  \r\n          let financialInfo = null;\r\n          if (data.financialInfo && data.financialInfo.savingsUnit) {\r\n            financialInfo = new AccountFinance(data.financialInfo.annualIncome, data.financialInfo.annualIncomeUnit, \r\n                data.financialInfo.savings, data.financialInfo.savingsUnit, data.financialInfo.incomeTaxRate);\r\n          }\r\n          \r\n          user = new User(data.name, data.email, data.avatar, financialInfo, personalInfo, data.currency);\r\n        } else {\r\n          this.appService.consoleLog('info', `${methodTrace} User not logged in.`, data);\r\n        }\r\n\r\n        if (!_.isEqual(user, this.getUser())) {\r\n          this.appService.consoleLog('info', `${methodTrace} User info updated.`);\r\n          this.setUser(user);\r\n        }\r\n\r\n        return of(user);\r\n      }),\r\n      catchError(this.appService.handleError)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Checks for the authenticated user state every certain amount of time. This will make the user$ variable to update its value and\r\n   * each component observing it is going the refresh their state base on the new value\r\n   * \r\n   * @param { number } time. The amount of time in ms between each session state check. Default to 10min\r\n   */\r\n  updateSessionState(time: number = 600000) {\r\n    const methodTrace = `${this.constructor.name} > updateSessionState() > `; // for debugging\r\n\r\n    interval(time).pipe(\r\n      flatMap((checkNumber: number) => {\r\n        const user: User = this.getUser();\r\n        const params = {\r\n          financialInfo: user && user.financialInfo ? true : false,\r\n          personalInfo: user && user.personalInfo ? true : false\r\n        };\r\n        \r\n        return this.getAuthenticatedUser$(params);\r\n      })\r\n    ).subscribe((user: User) => {\r\n      // do nothing\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Server call to login the provided user email and pass.\r\n   * \r\n   * @return { Observable<User>}\r\n   */\r\n  login$(postData: any = {}): Observable<User> {\r\n    const methodTrace = `${this.constructor.name} > login$() > `; // for debugging\r\n    this.setUser(null);\r\n\r\n    return this.http.post<Response>(`${this.serverHost}/login`, postData, { headers : this.headers }).pipe(\r\n      map(this.appService.extractData),\r\n      flatMap((data: any): Observable<User> => {\r\n        let user: User = null;\r\n\r\n        if (data && data.email) {\r\n          user = new User(data.name, data.email, data.avatar, null, null, data.currency);\r\n          this.setUser(user);\r\n        } else {\r\n          this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`);\r\n          this.setUser(null);\r\n        }\r\n\r\n        return of(user);\r\n      }),\r\n      catchError(this.appService.handleError)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Server call to forgot with the provided user email.\r\n   * \r\n   * @return { Observable<any>}\r\n   */\r\n  forgot$(postData: any = {}): Observable<any> {\r\n    const methodTrace = `${this.constructor.name} > forgot$() > `; // for debugging\r\n\r\n    return this.http.post<Response>(`${this.serverHost}/account/forgot`, postData, { headers : this.headers }).pipe(\r\n      map(this.appService.extractData),\r\n      catchError(this.appService.handleError)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Server call to reset password api with the provided new password.\r\n   * \r\n   * @return { Observable<User> }\r\n   */\r\n  reset$(token: string, postData: any = {}): Observable<User> {\r\n    const methodTrace = `${this.constructor.name} > reset$() > `; // for debugging\r\n\r\n    this.setUser(null);\r\n    return this.http.post<Response>(`${this.serverHost}/account/reset/${token}`, postData, { headers : this.headers })\r\n        .pipe(\r\n          map(this.appService.extractData),\r\n          flatMap((data: any): Observable<User> => {\r\n            let user: User = null;\r\n\r\n            if (data && data.email) {\r\n              user = new User(data.name, data.email, data.avatar, null, null, data.currency);\r\n              this.setUser(user);\r\n            } else {\r\n              this.setUser(null);\r\n              this.appService.consoleLog('error', `${methodTrace} Unexpected data format.`);\r\n            }\r\n    \r\n            return of(user);\r\n          }),\r\n          catchError(this.appService.handleError)\r\n        );\r\n  }\r\n\r\n  /**\r\n   * Server call to login the provided user email and pass.\r\n   * \r\n   * @return { Observable<null>}\r\n   */\r\n  logout$(): Observable<any> {\r\n    const methodTrace = `${this.constructor.name} > logout$() > `; // for debugging\r\n\r\n    return this.http.get<Response>(`${this.serverHost}/logout`).pipe(\r\n      map(this.appService.extractData),\r\n      flatMap((data: any): Observable<null> => {\r\n        this.setUser(null);\r\n        return of(null);\r\n      }),\r\n      catchError(this.appService.handleError)\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../environments/environment';\r\nimport * as moment from 'moment';\r\n\r\n@Injectable()\r\nexport class UtilService {\r\n\r\n  private settings : any = {\r\n    flexLayoutBkpts : {\r\n      xs : { min: 0, max: 599 },\r\n      sm : { min: 600, max: 959 },\r\n      md : { min: 960, max: 1279 },\r\n      lg : { min: 1280, max: 1919 },\r\n      xl : { min: 1920, max: 5000 }\r\n    }\r\n  };\r\n\r\n  constructor() {}\r\n\r\n  isXs() : boolean {\r\n    return window.innerWidth <= this.settings.flexLayoutBkpts.xs.max;\r\n  }\r\n\r\n  isSm() : boolean {\r\n    return window.innerWidth >= this.settings.flexLayoutBkpts.sm.min && window.innerWidth <= this.settings.flexLayoutBkpts.sm.max;\r\n  } \r\n  \r\n  isMd() : boolean {\r\n    return window.innerWidth >= this.settings.flexLayoutBkpts.md.min && window.innerWidth <= this.settings.flexLayoutBkpts.md.max;\r\n  }\r\n\r\n  isLg() : boolean {\r\n    return window.innerWidth >= this.settings.flexLayoutBkpts.lg.min && window.innerWidth <= this.settings.flexLayoutBkpts.lg.max;\r\n  }\r\n\r\n  isXl() : boolean {\r\n    return window.innerWidth >= this.settings.flexLayoutBkpts.xl.min && window.innerWidth <= this.settings.flexLayoutBkpts.xl.max;\r\n  }\r\n  \r\n  isGtXs() : boolean {\r\n    return window.innerWidth >= this.settings.flexLayoutBkpts.sm.min;\r\n  }\r\n\r\n  isGtSm() : boolean {\r\n    return window.innerWidth >= this.settings.flexLayoutBkpts.md.min;\r\n  }\r\n\r\n  /** \r\n   * Capitalize first letter of a string \r\n   * \r\n   * @param word {string} . The string to modify\r\n   * */\r\n  capitalizeFirstLetter(word : string) : string {\r\n    return word.charAt(0).toUpperCase() + word.slice(1);\r\n  }\r\n\r\n  /**\r\n   * Formast a date object into a string using the provided format\r\n   * \r\n   * @param {Date} date . The date to format \r\n   * @param {string} formatStr . The desired format string\r\n   * \r\n   * @return {string} . The date provided in the desired format.\r\n   */\r\n  formatDate(date : Date, formatStr : string = 'YYYY-MM-DD') {\r\n    return moment(date).format(formatStr); \r\n  }\r\n\r\n  /**\r\n   * Format today date in the provided format\r\n   * \r\n   * @param {string} formatStr . The desired format string\r\n   * \r\n   * @return {string} . Today date in the desired format \r\n   */\r\n  formatToday(formatStr : string = 'YYYY-MM-DD') {\r\n    return this.formatDate(new Date(), formatStr);\r\n  }\r\n\r\n  /**\r\n   * Show logs in the console if enabled in the current environment\r\n   * @param type . Error type\r\n   * @param message . The message to show\r\n   * @param params . Any extra parameters to list in the log.\r\n   */\r\n  consoleLog(type : 'log' | 'debug' | 'warn' | 'info' | 'error', message : string, ...params) {\r\n    if (environment.showLogs) {\r\n      console[type](message, params);\r\n    }\r\n  }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiHost : '',\r\n  showLogs : true,\r\n  mapsApiKey : 'AIzaSyBVl8QaQnQGBw6IyvlQ5K3XepPj6Z9nHt0'\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n  console.log('ENV: Production');\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n"],"sourceRoot":""}