version: 0.2

env:
  parameter-store:
    DOCKER_ID: "/maxipaolucci/dockerID"
    DOCKER_PASSWORD: "/maxipaolucci/dockerPassword"

phases: 
  install:
    runtime-versions:
      nodejs: 10
    commands:
      # - printenv
      - echo "installing something"
  pre_build:
    commands: 
      - echo "we are in the pre build phase"
  build:
    commands:
      - echo "we are in the build block"
      - echo "we will run some tests"
      # no need this, no more code commits in manage_images.sh
      # - git config --global user.email "aws.codebuild.atomicoconut@gmail.com"
      # - git config --global user.name "AWS Codebuild atomiCoconut"
      - echo $CURRENT_BRANCH
      - ./manage_images.sh
  post_build:
    commands:
      - echo "we are in the post build phase"
      - rm docker-compose.yml
      - mv docker-compose-beanstalk.yml docker-compose.yml
      # zip the app including just what needed for deployment: docker-compose.yml and .plat* dir
      - zip -r acoApp.zip docker-compose.yml .plat*

artifacts:
  files:
    # archive the only file necessary for elastikbeanstalk to redeploy the new docker images pushed
    # - "Dockerrun.aws.json"
    - "docker-compose.yml"
    - ".platform/hooks/postdeploy/01-setup-cloudwatch-agent.sh"
  discard-paths: no
  name: atomiCoconut-build-artifact # this name seems to be completely ignored when codepipeline orchastrates this build
