sudo: required
services:
  - docker 

# before_install:
#   - docker build -t $DOCKER_ID/atomic-coconut-client-dev -f ./client/Dockerfile.dev ./client

script:
  - echo "$TRAVIS_BRANCH"
  # - docker run -e CI=true $DOCKER_ID/atomic-coconut-client npm run test -- --coverage
  # - docker run -e CI=true $DOCKER_ID/atomic-coconut-client-dev ng build

after_success:
  - ./manage_images.sh
#   - docker build -t $DOCKER_ID/atomic-coconut-client ./client
#   - docker build -t $DOCKER_ID/atomic-coconut-nginx ./nginx
#   - docker build -t $DOCKER_ID/atomic-coconut-server ./server
#   - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
#   - docker push $DOCKER_ID/atomic-coconut-client
#   - docker push $DOCKER_ID/atomic-coconut-nginx
#   - docker push $DOCKER_ID/atomic-coconut-server

deploy:
  - provider: elasticbeanstalk
    region: ap-southeast-2
    app: atomiCoconut
    env: Atomicoconut-env
    bucket_name: elasticbeanstalk-ap-southeast-2-782522910439
    bucket_path: atomiCoconut
    on:
      branch: master
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key:
      secure: $AWS_SECRET_KEY
  - provider: elasticbeanstalk
    region: ap-southeast-2
    app: atomiCoconut
    env: Atomicoconut-env-testing
    bucket_name: elasticbeanstalk-ap-southeast-2-782522910439
    bucket_path: atomiCoconut-testing
    on:
      branch: testing
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key:
      secure: $AWS_SECRET_KEY